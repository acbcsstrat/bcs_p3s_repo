{"version":3,"sources":["webpack:///./app/features/portfolio/controllers/portfolio.controller.js","webpack:///./app/features/sidenav/avatar-default.png","webpack:///./app/features/sidenav/pp_icon.png","webpack:///./node_modules/empty-module sync nonrecursive js$","webpack:///./app/features/dashboard/html/dashboard.actions-available.tpl.htm","webpack:///./app/features/dashboard/html/dashboard.europcts-graph.tpl.htm","webpack:///./app/features/dashboard/html/dashboard.fxchart-widget.tpl.htm","webpack:///./app/features/dashboard/html/dashboard.grants-graph.tpl.htm","webpack:///./app/features/dashboard/html/dashboard.renewals-graph.tpl.htm","webpack:///./app/features/dashboard/html/dashboard.tpl.htm","webpack:///./app/features/dashboard/html/dashboard.validations-graph.tpl.htm","webpack:///./app/features/portfolio/html/portfolio.tpl.htm","webpack:///./app/features/sidenav/html/sidenav-li-item.tpl.htm","webpack:///./app/features/sidenav/html/sidenav-nav-li.tpl.htm","webpack:///./app/features/sidenav/html/sidenav.tpl.htm","webpack:///./app/global/services/vendors/ngCart.fulfilment.js","webpack:///./app/global/directives/vendors/ngCart.directives.js","webpack:///./assets/js/vendors/ngCart.js","webpack:///./app/app.config.js","webpack:///./app/features/user/services/user.user.serv.js","webpack:///./app/global/services/app.fx.serv.js","webpack:///./app/global/services/app.core.serv.js","webpack:///./app/global/services/app.organiseColour.serv.js","webpack:///./app/features/portfolio/services/patents.patentsRest.serv.js","webpack:///./app/global/controllers/core.core.ctrl.js","webpack:///./app/features/dashboard/services/dashboard.service.js","webpack:///./app/global/services/calculate.service.js","webpack:///./app/global/services/cost-analysis.service.js","webpack:///./app/features/transactions/services/transactions.service.js","webpack:///./app/features/dashboard/controllers/dashboard.controller.js","webpack:///./app/features/dashboard/controllers/dashboard.actions-available.controller.js","webpack:///./app/features/dashboard/controllers/dashboard.fx-chart.controller.js","webpack:///./app/features/dashboard/controllers/dashboard.europcts-graph.controller.js","webpack:///./app/features/dashboard/controllers/dashboard.grants-graph.controller.js","webpack:///./app/features/dashboard/controllers/dashboard.renewals-graph.controller.js","webpack:///./app/features/dashboard/controllers/dashboard.validations-graph.controller.js","webpack:///./app/features/dashboard/dashboard.routes.js","webpack:///./app/features/dashboard/index.js","webpack:///./app/features/portfolio/services/portfolio.search-patent.serv.js","webpack:///./app/features/portfolio/portfolio.routes.js","webpack:///./app/features/portfolio/index.js","webpack:///./app/features/sidenav/services/sidenav.service.js","webpack:///./app/features/sidenav/directives/menu-toggle.directive.js","webpack:///./app/features/sidenav/directives/menu-link.directive.js","webpack:///./app/features/sidenav/components/sidenav.component.js","webpack:///./app/features/sidenav/index.js","webpack:///./src/js/app.js"],"names":["$","PortfolioController","$scope","$state","$stateParams","$rootScope","$timeout","$uibModal","$mdPanel","$mdDialog","$mdMenu","SearchPatentService","PatentsRestService","vm","this","select","i","selected","noSubFilter","obj","key","checkArray","service","prop","some","item","updatePortfolioData","fetchAllPatents","then","response","portfolioData","recentlyAdded","push","slice","pop","promise","filter","patentId","filterByPropertiesMatchingAND","data","matchesAND","hasOwnProperty","p3sServices","$$destroyed","length","noPatents","forEach","clientRef","stateParams","rowSelect","event","patent","target","hasClass","go","patentID","form1200generate","prepareGrant","notify","id","currentTarget","find","chipOptions","showFilter","mdMenu","$event","open","categories","getItems","array","map","w","idx","arr","indexOf","updateFiltered","value","cat","index","splice","closeDialog","hide","showAddPatent","panelPosition","newPanelPosition","absolute","center","config","attachTo","angular","element","document","body","controller","mdPanelRef","recently","added","foundPatent","findPatent","patentNo","loadingPatent","error","toJson","errResponse","console","queriedPatent","status","searchError","openConfirmModal","templateUrl","appendTo","undefined","controllerAs","$uibModalInstance","$location","$anchorScroll","addPatent","addingPatent","close","savePatent","match","ep_ApplicationNumber","searchPatent","dismissModal","cancelAdd","$on","cancel","toPatentTimeout","position","hasBackdrop","targetEvent","clickOutsideToClose","escapeToClose","focusOnOpen","result","panelRef","portfolioLoaded","sortBy","propertyName","reverse","selectedChip","__webpack_require__","d","__webpack_exports__","$inject","module","exports","p","./index.js","webpackContext","req","webpackContextResolve","e","Error","code","keys","Object","resolve","ngCart_fulfilment","$injector","_obj","settings","setService","setSettings","checkout","orderObj","get","$http","$q","deferred","defer","post","reject","ngCart_directives","ngCart","directive","restrict","scope","name","quantity","quantityMax","price","transclude","attrs","link","inCart","getItemById","q","getQuantity","parseInt","qtyOpt","ngModel","ngCartItem","basketService","patentsRestService","fulfilmentProvider","productData","$cart","items","basketItems","ep_ApplicationNo","_data","serviceType","_name","totalCostUSD","totalCost","dateNowLocalTime","headers","billingDetails","summary","details","reload","$broadcast","statusCode","fetchBasketPatents","firstName","lastName","billingStreet","billingCity","billingState","billingZip","date","dateNowLocalTimeUI","fees","totalProcessingFeesUSD","totalExpressFeesUSD","totalUrgentFeesUSD","totalOfficialFeesUSD","totalPatentPlaceFeesUSD","totalPatents","orderedPatentUIs","vendors_ngCart","provider","$get","run","store","$save","isObject","$restore","init","$window","shipping","taxRate","tax","addItem","type","getCart","cartItems","differentTypes","order","log","euroAction","action","p3sServicesWithFees","totalOrderLength","continueBasket","setQuantity","newItem","itemId","build","getId","setShipping","getShipping","setTaxRate","parseFloat","toFixed","getTaxRate","getTax","getSubTotal","setCart","cart","getTotalItems","count","getTotalUniqueItems","total","getTotal","removeItem","removeItemById","empty","localStorage","isEmpty","toObject","subTotal","storedCart","_self","_id","_price","_quantity","reduceCart","form1200FeeUI","renewalFeeUI","grantFeeUI","validationFeeUI","set","JSON","stringify","factory","$log","setId","setName","setPrice","setData","prototype","getName","priceFloat","getPrice","relative","quantityInt","info","getData","getItem","fromJson","parse","val","setItem","appConfig","$httpProvider","$urlRouterProvider","$uibModalProvider","$compileProvider","$qProvider","KeepaliveProvider","IdleProvider","localStorageServiceProvider","$mdIconProvider","$mdPanelProvider","defaults","window","ppdomain","defaultFontSet","fontSet","idle","timeout","interval","errorOnUnhandledRejections","setStorageType","setDefaultToCookie","setNotify","user_user_serv","angular_default","a","userService","REST_SERVICE_URI","fetchUser","updateUser","user","put","listUsers","app_fx_serv","fxService","fetchFxWeek","fetchFxMonth","fetchFx","app_core_serv","coreService","getMessages","supressMessages","ppContact","openAppGuide","appGuideOpen","app_organiseColour_serv","OrganiseColourService","getNextColour","colour","color","getCurrColour","patents_patentsRest_serv","actionsArray","property","actionID","number","charCodeAt","toString","substring","generateId","currentStageColour","cssCurrent","nextStageColour","cssNext","updatePatent","deletePatent","delete","fetchPatentItem","merged","concat","apply","filtered","core_core_ctrl","coreCtrl","localStorageService","Idle","Keepalive","$cookies","closeModals","warning","timedout","windowClass","location","dashboard_service","DashboardService","sortPatents","patents","epct","Green","Amber","Red","Grey","renewal","Blue","Black","grant","validation","newPatents","serv","string","toLowerCase","capitalized","charAt","toUpperCase","getPatents","calculate_service","CalculateService","calculateHours","costband","Date","getTime","hours","greenStartDate","amberStartDate","redStartDate","blueStartDate","renewalStatus","blackStartDate","recentActivity","millisec","seconds","minutes","Math","floor","cost_analysis_service","CostAnalysisService","fetchCa","services","saleType","all","transactions_service","TransactionService","REST_SERVICE_URI_CURRENT","REST_SERVICE_URI_HISTORY","fetchCurrentTransactions","el","renewalUIs","o","newType","grantUIs","epctUIs","validationUIs","serviceUIs","fetchTransactionHistory","fetchAllTransactions","transTypeUI","historic","isValidation","latestTransStatus","actionProgress","arrayType","round","transactionProgress","patentUI","appAndType","patentApplicationNumber","currTransStatus","progress","DashboardController","formalityData","dashboardLoaded","graphsLoaded","current","ActionsAvailableController","$parent","availableActions","DbFxChartCtrl","fxRatesMonth","fxChartTimeout","lineData","chartValueArrs","rateActiveDate","rate","values","lineOptions","chart","height","margin","top","right","bottom","left","clipEdge","tooltip","hideDelay","showLegend","x","y","useInteractiveGuideline","xAxis","tickFormat","d3","time","format","showMaxMin","rotateLabels","ticks","xScale","scale","yAxis","axisLabelDistance","keyFormatter","useVoronoi","lines","interactive","showXAxis","showYAxis","callback","fxChartLoaded","EuropctsGraphController","epctGraphTimeout","donutOptions","donut","donutRatio","duration","showLabels","valueFormat","donutData","phases","counter","formalityTotal","evt","createEvent","initUIEvent","dispatchEvent","GrantsGraphController","grantGraphTimeout","RenewalsGraphController","renewalGraphTimeout","VaidationsGraphController","validationGraphTimeout","routes","$stateProvider","state","url","template","params","views","europctsgraph@dashboard","renewalsgraph@dashboard","grantsgraph@dashboard","validationsgraph@dashboard","actionsavailable@dashboard","fxchartwidget@dashboard","dashboard","portfolio_search_patent_serv","REST_SEARCH_PATENT_SERVICE_URI","patentItem","portfolio_routes_routes","navigation","portfolio","portfolio_controller","sidenav_service","self","sections","icon","pages","toggleSelectSection","section","openedSection","isSectionSelected","selectPage","page","path","currentSection","currentPage","menu_toggle_directive","context","$element","isOpen","toggle","toggleOpen","menu_link_directive","parent","sidenav_component","component","$mdSidenav","SidenavService","moment","buildToggler","componentId","toggleLeft","toggleRight","menu","autoFocusContent","isFirstOpen","isFirstDisabled","fxRate","currentFXRate","timeZoneClocks","utc","tz","est","utcTime","estTime","timeLoaded","sidenav","startUpRun","watch","jQuery","jquery_default","lib_esm"],"mappings":"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","file":"app.906c2d649fa1142c072a.js","sourcesContent":["PortfolioController.$inject = ['$scope', '$state', '$stateParams','$rootScope', '$timeout', '$uibModal', '$mdPanel', '$mdDialog', '$mdMenu', 'SearchPatentService',  'PatentsRestService'];\r\n\r\nexport default function PortfolioController($scope, $state, $stateParams, $rootScope, $timeout, $uibModal, $mdPanel, $mdDialog, $mdMenu, SearchPatentService, PatentsRestService) {\r\n\r\n    var vm = this;\r\n\r\n    $scope.promise = PatentsRestService.fetchAllPatents();\r\n    $scope.filter = {};\r\n\r\n    function select(i) {\r\n        vm.selected = i;\r\n    }\r\n\r\n    select($stateParams.patentId)\r\n\r\n    function uniqueArray(array) {\r\n        return array.filter(function(item, pos, self) {\r\n            return self.indexOf(item) == pos;\r\n        })\r\n    }\r\n\r\n\r\n\r\n    function noSubFilter(obj) {\r\n        for (var key in obj) {\r\n            if (obj[key]) { //if one of the $scope.filter ($scope.filter) properties evaluates to true (is selected) return false \r\n                return false;\r\n            }\r\n        }\r\n        return true; //if no subfilters return true. This will result in all filtered data items being returned a true value\r\n    }\r\n\r\n    function checkArray(obj, service, prop) {\r\n        return service.some(function(item) { //if filter[curretStageColour][red]\r\n            return obj[prop][item[prop]] === true;\r\n        })\r\n    }\r\n\r\n    $scope.filterByPropertiesMatchingAND = function (data) { //all data sent from filter \r\n        var matchesAND = true; //set macthes to true (default)\r\n\r\n        for (var obj in $scope.filter) { //$scope.filter is populated by $scope.filter within the panel controller below. Scope filter properties are initiated from front-end. currentStageColour/serviceType\r\n\r\n            if( $scope.filter.hasOwnProperty(obj) ) {\r\n                if (noSubFilter($scope.filter[obj])) continue; //Check if there are any sub filter options with the value of true, if so, break from loop to return value of true\r\n                if (!checkArray($scope.filter, data.p3sServices, obj)) { //If the property from the data matches the property from $scope.filter ($scope.filter) return false. It will not turn up in the table\r\n                    matchesAND = false;\r\n                    break; //break from the loop and return matchesAND which would now return false\r\n                }\r\n                \r\n            }\r\n        }\r\n        return matchesAND;\r\n    }; \r\n\r\n    function updatePortfolioData() {\r\n        PatentsRestService.fetchAllPatents()\r\n        .then(function(response) {\r\n            $scope.portfolioData = response;            \r\n            vm.recentlyAdded.push(response.slice(-1).pop())\r\n        })        \r\n\r\n    }\r\n\r\n    $scope.promise //assigned promise to scope so child state can also resolve this promise to invoke functions\r\n    .then(function(response) {\r\n        if ($scope.$$destroyed) throw \"Scope destroyed\";\r\n        return response;\r\n    })\r\n    .then(\r\n        function(response){\r\n\r\n            if(!response.length) {\r\n                vm.noPatents = true;\r\n            }\r\n\r\n            response.forEach(function(data){\r\n                if(data.clientRef == '') {\r\n                    data.clientRef = '[No Client Reference Provided]'\r\n                }\r\n            })\r\n\r\n            vm.select = select;\r\n            vm.selected = 0;\r\n            vm.stateParams = $stateParams.patentId; \r\n            vm.rowSelect = rowSelect;\r\n            vm.chipOptions = [];\r\n            vm.showFilter = showFilter;\r\n            vm.showAddPatent = showAddPatent;\r\n            vm.portfolioLoaded = true;\r\n            vm.sortBy = sortBy;\r\n            $scope.selectedChip = selectedChip;\r\n            $scope.portfolioData = response;\r\n            $scope.portfolioLoaded = false;\r\n\r\n            vm.propertyName = 'ep_ApplicationNumber';\r\n            vm.reverse = false;\r\n\r\n            function rowSelect(event, patent){\r\n\r\n                vm.stateParams = $stateParams;\r\n                if($(event.target).hasClass('generateForm1200')) {\r\n                    $state.go('portfolio.modal.patent', {patentId: patent.patentID, form1200generate: 1, prepareGrant: 0}, {notify: false})\r\n                }\r\n\r\n                if($(event.target).hasClass('prepareGrant')) {\r\n                    $state.go('portfolio.modal.patent', {patentId: patent.patentID, prepareGrant: 1, form1200generate: 0}, {notify: false})\r\n                }        \r\n\r\n                if(!$(event.target).hasClass('cartbtn') && !$(event.target).hasClass('generateForm1200') && !$(event.target).hasClass('prepareGrant')) {\r\n                    var id = ($($(event.currentTarget).find('a'))); //find the anchor tag within row (patentApplicationNumber)\r\n                    var patentId = id[0].id; //gets data from data-id\r\n                    $state.go('portfolio.modal.patent', {patentId: patent.patentID, form1200generate: null})            \r\n                }\r\n\r\n            };\r\n\r\n            function sortBy(propertyName) {\r\n                vm.reverse = (vm.propertyName === propertyName) ? !vm.reverse : false;\r\n                vm.propertyName = propertyName;\r\n            };\r\n\r\n            function selectedChip(prop, value, cat) {\r\n                if(cat == 'Euro-PCT') {cat = 'epct'}\r\n                $scope.filter[cat][prop] = false;\r\n                // $scope.portfolioData = $scope.portfolioData;\r\n            }\r\n\r\n            function showFilter(mdMenu, $event) {\r\n         \r\n                mdMenu.open($event)\r\n                $scope.categories = ['serviceType', 'currentStageColour'];     \r\n\r\n                //return items to filter panel\r\n                $scope.getItems = function (obj, array) { //obj is cat currentStageColour or serviceType\r\n                    return (array || []).map(function (w) {\r\n                        return w.p3sServices[0][obj]; //select property in p3sservices \r\n                    }).filter(function (w, idx, arr) {\r\n                        if (typeof w === 'undefined') {\r\n                            return false;\r\n                        }\r\n                        return arr.indexOf(w) === idx;\r\n                    });\r\n                };\r\n\r\n                $scope.updateFiltered = function(prop, value, cat) {\r\n                    if(value === true) {\r\n                        if(cat === 'epct') {cat = 'Euro-PCT'};\r\n                        vm.chipOptions.push({cat: cat, value: value, prop: prop})\r\n                    } \r\n                    if(value === false) {\r\n                        var index = vm.chipOptions.indexOf(cat);\r\n                        vm.chipOptions.splice(index, 1);\r\n                    }\r\n                }\r\n\r\n                $scope.closeDialog = function() {\r\n                    $mdDialog.hide();                            \r\n                }\r\n\r\n            } //showFilter function end\r\n\r\n\r\n            function showAddPatent($event) {\r\n\r\n                var panelPosition = $mdPanel.newPanelPosition()\r\n                    .absolute()\r\n                    .center();\r\n\r\n                var config = {\r\n                    attachTo: angular.element(document.body),\r\n                    controller: ['mdPanelRef', '$scope', function(mdPanelRef, $scope) {\r\n\r\n                        $scope.recently = {\r\n                            added: []\r\n                        }\r\n                        $scope.foundPatent = false;\r\n\r\n                        $scope.findPatent = function(patentNo) {\r\n                            $scope.loadingPatent = true;\r\n                            SearchPatentService.findPatent(patentNo)\r\n                            .then(\r\n                                function(response) {\r\n                                    $scope.foundPatent = response.data;\r\n                                    $scope.loadingPatent = false;\r\n                                    $scope.error = false;\r\n                                    var patentJson = angular.toJson(response)\r\n                                },\r\n                                function(errResponse) {\r\n                                    console.error('Error finding patent. Error message : ', errResponse)\r\n                                    $scope.queriedPatent = false;\r\n                                    $scope.loadingPatent = false;\r\n                                    $scope.error = true;\r\n                                    // $state.go('search-patent', {}, {reload: false});\r\n                                    if(errResponse.status == 412) { //already added patent\r\n                                        $scope.searchError = 'It looks like we\\'ve already added Patent Application '+patentNo+' in to the system.  You should be able to find it in the List Patents page using the search boxes.';\r\n                                    } \r\n                                    if(errResponse.status == 409){ //incorrect check digit\r\n                                        $scope.searchError = 'It looks like the provided check digit differs from the check digit found at the European Patent Register. Please make sure the check digit is correct and try again.';\r\n                                    }\r\n                                    if(errResponse.status == 400 || errResponse.status == 404) { //incorrect syntax\r\n                                        $scope.searchError = 'We\\'ve not been able to find that patent in the European Patent Register. Please enter an application number such as EP18123456.2';\r\n                                    }\r\n\r\n\r\n                                }\r\n                            )\r\n\r\n                        }  \r\n\r\n                        $scope.openConfirmModal = function(patent) {\r\n\r\n                            var modalInstance = $uibModal.open({\r\n                                templateUrl: 'app/templates/modals/modal.confirm-found-patent.tpl.htm',\r\n                                appendTo: undefined,\r\n                                controllerAs: '$ctrl',\r\n                                controller: ['$uibModalInstance', '$location', '$anchorScroll', function($uibModalInstance, $location, $anchorScroll) {\r\n\r\n                                    this.addPatent = function () {\r\n                                        vm.addingPatent = true;\r\n                                        $uibModalInstance.close();\r\n                                        PatentsRestService.savePatent(patent)\r\n                                        .then(\r\n                                            function(response){\r\n                                                \r\n                                                updatePortfolioData();\r\n\r\n                                                var match = response.find(function(item){\r\n                                                    return item.ep_ApplicationNumber == patent.ep_ApplicationNumber;\r\n                                                });\r\n\r\n                                                $scope.recently.added.push(match);\r\n                                                $scope.foundPatent = false;\r\n                                                $scope.searchPatent = '';\r\n\r\n\r\n                                            },\r\n                                            function(errResponse){\r\n                                                console.error('Error while saving Patent');\r\n                                            }\r\n                                        )\r\n\r\n                                    };\r\n\r\n                                 \r\n\r\n                                    this.dismissModal = function () {\r\n                                        $uibModalInstance.close();\r\n                                    };\r\n\r\n                                    this.cancelAdd = function() {\r\n                                        $uibModalInstance.close();                  \r\n                                    }\r\n\r\n                                }]\r\n                            })\r\n                        }\r\n\r\n                        $scope.$on('$destroy', function(){\r\n                            $timeout.cancel(toPatentTimeout)\r\n                        })                        \r\n\r\n                    }],\r\n                    controllerAs: '$ctrl',\r\n                    position: panelPosition,\r\n                    // animation: panelAnimation,\r\n                    hasBackdrop: true,\r\n                    targetEvent: $event,\r\n                    templateUrl: 'app/templates/portfolio/add-patent.tpl.htm',\r\n                    clickOutsideToClose: true,\r\n                    escapeToClose: true,\r\n                    focusOnOpen: true\r\n                };\r\n                $mdPanel.open(config)\r\n                .then(\r\n                    function(result) {\r\n                        panelRef = result;\r\n                    },\r\n                    function(error){\r\n                        console.error('Error occured when opening panel: ',error)\r\n                    }\r\n                );\r\n\r\n            } //showAddPatentPanel end]\r\n\r\n        }\r\n    )\r\n\r\n    //SEARCH ADD PATENT\r\n\r\n}","module.exports = __webpack_public_path__ + \"56426137b684cf1a7870e159148934a3.png\";","module.exports = __webpack_public_path__ + \"4803db4b92d3112ff026b67d8b01b03a.png\";","var map = {\n\t\"./index.js\": \"./node_modules/empty-module/index.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/empty-module sync js$\";","module.exports = \"<div class=\\\"container__scrollable-area\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"d-flex align-items-center justify-content-between py-3 px-4\\\">\\r\\n                <div>\\r\\n                    <h4 class=\\\"font-h4 font-weight-bold\\\">Available European Actions</h4>\\r\\n                </div>\\r\\n                <div class=\\\"d-flex align-items-center\\\">                \\r\\n                    <md-chips data-ng-model=\\\"$ctrl.chipOptions\\\" readonly=\\\"true\\\" md-removable=\\\"true\\\" class=\\\"text-capitalize font-weight-medium cursor-pointer\\\" md-on-remove=\\\"selectedChip($chip.prop, $chip.value, $chip.cat); getItems($chip.cat, availableActions)\\\">\\r\\n                        <md-chip-template>\\r\\n                            <strong class=\\\"font-body\\\"><span data-ng-show=\\\"{{$chip.prop}} == 'epct'\\\">Euro-PCT</span><span data-ng-hide=\\\"{{$chip.prop}} == 'epct'\\\">{{$chip.prop}}</span></strong>\\r\\n                            <em class=\\\"font-body\\\" data-ng-if=\\\"$chip.cat ==='serviceType'\\\">(action)</em><em class=\\\"font-body\\\" data-ng-if=\\\"$chip.cat ==='currentStageColour'\\\">(phase)</em>                     \\r\\n                        </md-chip-template>\\r\\n                        <!-- <md-icon><i class=\\\"d-flex input-group-text pill-radius fa fa-search\\\"></i></md-icon> -->\\r\\n                    </md-chips>\\r\\n                    <div class=\\\"m-r-lg\\\">\\r\\n                        <div class=\\\"input-group m-r-sm\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control pill-radius\\\" name=\\\"availableActionsSearch\\\" data-ng-model=\\\"searchAvailableActions\\\" placeholder=\\\"Search available actions...\\\" autocomplete=\\\"off\\\">  \\r\\n                            <div class=\\\"input-group-append\\\">\\r\\n                                <i class=\\\"d-flex input-group-text pill-radius fa fa-search\\\"></i>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>                \\r\\n                    <div>\\r\\n                        <md-menu md-position-mode=\\\"target-right target\\\">\\r\\n                            <md-button class=\\\"icon-stretch icon-stretch--icon black pill-radius\\\" data-ng-click=\\\"$ctrl.showFilter($mdMenu, $event)\\\">\\r\\n                                <span class=\\\"icon-text\\\">Filter</span>              \\r\\n                                <i class=\\\"fal fa-filter fa-2x cursor-pointer icon\\\"></i> \\r\\n                            </md-button>\\r\\n                            <md-menu-content class=\\\"container-filter-list\\\">\\r\\n                                <md-list class=\\\"box\\\" data-ng-repeat=\\\"cat in categories\\\" ng-init=\\\"filter[cat]={}\\\">\\r\\n                                    <md-subheader class=\\\"md-no-sticky\\\">\\r\\n                                        <h2 class=\\\"font-h3\\\" data-ng-if=\\\"cat == 'saleType'\\\">Processing</h2>\\r\\n                                        <h2 class=\\\"font-h3\\\" data-ng-if=\\\"cat == 'currentStageColour'\\\">Current Stage Colour</h2>\\r\\n                                        <h2 class=\\\"font-h3\\\" data-ng-if=\\\"cat == 'nextStageColour'\\\">Next Stage Colour</h2>\\r\\n                                        <h2 class=\\\"font-h3\\\" data-ng-if=\\\"cat == 'serviceType'\\\">European Action</h2>\\r\\n                                    </md-subheader>\\r\\n                                    <md-list-item data-ng-repeat=\\\"value in getItems(cat, availableActions)\\\">\\r\\n                                        <md-checkbox class=\\\"md-secondary\\\" data-ng-model=\\\"filter[cat][value]\\\" data-ng-change=\\\"updateFiltered(value, filter[cat][value], cat);\\\"> \\r\\n                                        </md-checkbox>\\r\\n                                        <p>({{(filtered | filter:value:true).length}})&nbsp;\\r\\n                                            <span class=\\\"text-capitalize\\\" data-ng-if=\\\"value == 'GREY'\\\">Grey</span>\\r\\n                                            <span class=\\\"text-capitalize\\\" data-ng-if=\\\"value == 'Offline'\\\">Offline (Manual/Urgent)</span>\\r\\n                                            <span class=\\\"text-capitalize\\\" data-ng-if=\\\"value == 'epct'\\\">Euro-PCT</span>\\r\\n                                            <span class=\\\"text-capitalize\\\" data-ng-if=\\\"value !== 'epct' && value !== 'GREY' && value !== 'Offline'\\\">{{value}}</span>\\r\\n                                        </p>\\r\\n                                    </md-list-item>\\r\\n                                    <md-divider></md-divider>\\r\\n                                </md-list>\\r\\n                                <div layout=\\\"row\\\" class=\\\"demo-dialog-button\\\">\\r\\n                                    <md-button md-autofocus flex class=\\\"md-primary\\\" data-ng-click=\\\"closeDialog();\\\">\\r\\n                                        Close\\r\\n                                    </md-button>\\r\\n                                </div>\\r\\n                            </md-menu-content>\\r\\n                        </md-menu>\\r\\n                    </div>\\r\\n                </div> \\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"scrollable-area scrollable-area--set-height-md\\\">\\r\\n        <table class=\\\"t-data sticky-table\\\">\\r\\n            <thead class=\\\"sticky-thead\\\">\\r\\n                <tr class=\\\"t-data__row t-data__row--select\\\">\\r\\n                    <th class=\\\"t-data__th t-data__th--xs sticky-th\\\" data-ng-click=\\\"$ctrl.sortBy('ep_ApplicationNumber');\\\">\\r\\n                        <span>App No.</span>\\r\\n                        <span data-ng-show=\\\"$ctrl.propertyName == 'ep_ApplicationNumber' && !$ctrl.reverse\\\">\\r\\n                            <i class=\\\"fas fa-angle-down fa-lg\\\"></i>\\r\\n                        </span>\\r\\n                        <span data-ng-show=\\\"$ctrl.propertyName == 'ep_ApplicationNumber' && $ctrl.reverse\\\">\\r\\n                            <i class=\\\"fas fa-angle-up fa-lg\\\"></i>\\r\\n                        </span>\\r\\n                    </th>             \\r\\n                    <th class=\\\"t-data__th t-data__th--sm\\\">\\r\\n                        <span>European Action</span>\\r\\n                    </th>\\r\\n                    <th class=\\\"t-data__th t-data__th--sm\\\">\\r\\n                        <span>Current Phase</span>\\r\\n                    </th>\\r\\n                    <th class=\\\"t-data__th t-data__th--sm\\\">\\r\\n                        <span>Next Phase</span>    \\r\\n                    </th>                    \\r\\n                    <th class=\\\"t-data__th t-data__th--xs\\\">\\r\\n                        <span></span>\\r\\n                    </th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            \\r\\n            <tbody class=\\\"sticky-tbody\\\">\\r\\n                <tr data-ng-repeat=\\\"patent in filtered=(availableActions | filter:filterByPropertiesMatchingAND | filter:searchAvailableActions) | orderBy:$ctrl.propertyName:$ctrl.reverse as Result\\\" data-ng-click=\\\"$ctrl.rowSelect($event, patent); $ctrl.select(patent.patentID)\\\"  class=\\\"t-data__row t-data__row--select\\\" data-ng-class=\\\"{active: patent.patentID == $ctrl.selected}\\\">\\r\\n                    <td class=\\\"t-data__td t-data__td--xs sticky-td\\\">\\r\\n                        <a class=\\\"t-data__a\\\" data-ng-bind=\\\"patent.ep_ApplicationNumber\\\" data-ng-attr-id=\\\"{{patent.patentID}}\\\"></a>\\r\\n                    </td>\\r\\n                    <td class=\\\"t-data__td t-data__td--sm\\\">\\r\\n                         <table>\\r\\n                      \\r\\n                            <div class=\\\"d-flex justify-content-left btn-underlined-selector\\\">\\r\\n                                <span data-ng-bind=\\\"patent.p3sServices[0].serviceType\\\" data-ng-if=\\\"patent.p3sServices[0].serviceType !== 'postgrant' && patent.p3sServices[0].serviceType !== 'epct'\\\" class=\\\"text-capitalize\\\"></span>\\r\\n                                <span data-ng-if=\\\"patent.p3sServices[0].serviceType == 'epct'\\\" class=\\\"text-capitalize\\\">Euro-PCT</span>\\r\\n                                <span data-ng-if=\\\"patent.p3sServices[0].serviceType == 'postgrant'\\\" class=\\\"text-capitalize\\\">----</span>\\r\\n                            </div>\\r\\n                        \\r\\n                        </table>\\r\\n                    </td><!--when multiple services begin-->                    \\r\\n                    <td class=\\\"t-data__td t-data__td--sm\\\">\\r\\n                        <table>\\r\\n                  \\r\\n                            <div data-ng-if=\\\"(patent.p3sServices[0].saleType === 'Online' || patent.p3sServices[0].saleType === 'Offline') && patent.p3sServices[0].serviceType !== 'validation'\\\">\\r\\n                                <div class=\\\"d-flex flex-column\\\">\\r\\n                                    <div class=\\\"d-flex justify-content-start align-patent.p3sServices[0]s-center\\\"><!--display costs-->\\r\\n                                        <p class=\\\"font-weight-bold m-r-sm\\\"><i class=\\\"fas fa-circle m-r-xs\\\" data-ng-class=\\\"patent.p3sServices[0].cssCurrent\\\"></i>$ {{patent.p3sServices[0].currentStageCostUSD | number: 2}}</p>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div data-ng-if=\\\"patent.p3sServices[0].serviceType == 'validation' && patent.p3sServices[0].serviceStatus == 'Validation available'\\\">\\r\\n                                <div class=\\\"d-flex flex-column\\\">\\r\\n                                    <div class=\\\"d-flex justify-content-start\\\"><!--display costs-->\\r\\n                                        <p class=\\\"font-weight-bold txt-phase-green\\\">Request Quote</p>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>                            \\r\\n                            <div data-ng-if=\\\"patent.p3sServices[0].serviceType == 'validation' && patent.p3sServices[0].serviceStatus == 'Quote provided'\\\">\\r\\n                                <div class=\\\"d-flex flex-column\\\">\\r\\n                                    <div class=\\\"d-flex justify-content-start\\\"><!--display costs-->\\r\\n                                        <p class=\\\"font-weight-bold m-r-sm\\\"><i class=\\\"fas fa-circle m-r-xs\\\" data-ng-class=\\\"patent.p3sServices[0].cssCurrent\\\"></i>$ {{patent.p3sServices[0].currentStageCostUSD | number: 2}}</p>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>                                \\r\\n<!--                                 <div data-ng-if=\\\"patent.p3sServices[0].serviceType == 'validation' && patent.p3sServices[0].serviceStatus !== 'Quote provided'\\\">\\r\\n                                <p class=\\\"txt-grey\\\">N/A</p>\\r\\n                            </div> -->\\r\\n                            <div data-ng-if=\\\"patent.p3sServices[0].saleType !== 'Online' && patent.p3sServices[0].saleType !== 'Offline' && patent.p3sServices[0].serviceStatus !== 'Epct being generated'\\\">\\r\\n                                <p class=\\\"txt-grey\\\">N/A</p>\\r\\n                            </div>                                \\r\\n                           \\r\\n                        </table>                         \\r\\n                    </td><!--when multiple services begin-->     \\r\\n                    <td class=\\\"t-data__td t-data__td--sm\\\">\\r\\n                        <table>\\r\\n                            \\r\\n                                <div data-ng-if=\\\"(patent.p3sServices[0].saleType === 'Online' || patent.p3sServices[0].saleType === 'Offline') && patent.p3sServices[0].serviceType !== 'validation'\\\">\\r\\n                                    <div class=\\\"d-flex flex-column\\\">\\r\\n                                        <div class=\\\"d-flex justify-content-start align-patent.p3sServices[0]s-center\\\"><!--display costs-->\\r\\n\\r\\n                                            <p data-ng-if=\\\"(!patent.p3sServices[0].isUrgentAttention && patent.p3sServices[0].currentStageColour !== 'Black' && (patent.p3sServices[0].saleType === 'Online' || patent.p3sServices[0].saleType === 'Offline')) || (!patent.p3sServices[0].isUrgentAttention && patent.p3sServices[0].currentStageColour == 'Black' && (patent.p3sServices[0].saleType === 'Online' || patent.p3sServices[0].saleType === 'Offline'))\\\" class=\\\"font-weight-bold\\\"><i class=\\\"fas fa-circle m-r-xs\\\" data-ng-class=\\\"patent.p3sServices[0].cssNext\\\"></i> $ {{patent.p3sServices[0].nextStageCostUSD | number: 2}}</p> \\r\\n                                            <p data-ng-if=\\\"patent.p3sServices[0].isUrgentAttention && patent.p3sServices[0].currentStageColour == 'Black' && patent.p3sServices[0].serviceType === 'renewal'\\\" class=\\\"font-weight-bold\\\">LAPSE</p> <!--if current colour is black and urgent attention required. Means that it is the second stage of black and is renewal-->\\r\\n                                            <p data-ng-if=\\\"patent.p3sServices[0].isUrgentAttention && patent.p3sServices[0].currentStageColour == 'Red' && patent.p3sServices[0].serviceType !== 'renewal'\\\" class=\\\"font-weight-bold\\\">LAPSE</p> <!--if current colour is black and urgent attention required. Means that it is the second stage of black-->\\r\\n                                        </div>    \\r\\n                                    </div>\\r\\n                                </div>                            \\r\\n                                <div data-ng-if=\\\"(patent.p3sServices[0].saleType !== 'Online' && patent.p3sServices[0].saleType !== 'Offline' && patent.p3sServices[0].serviceStatus !== 'Epct being generated') || patent.p3sServices[0].serviceType == 'validation'\\\">\\r\\n                                    <p class=\\\"txt-grey\\\">N/A</p>\\r\\n                                </div>\\r\\n                           \\r\\n                        </table>                              \\r\\n                    </td><!--when multiple services begin-->     \\r\\n                    <td class=\\\"t-data__td t-data__td--xs\\\">\\r\\n                        <button class=\\\"btn-no-bg btn-underlined pill-radius font-body txt-phase-green font-weight-normal nowrap\\\" data-ui-sref=\\\"portfolio.modal.patent({patentId: patent.patentID})\\\">View Patent</button>\\r\\n                    </td>\\r\\n                </tr>\\r\\n                <tr data-ng-show=\\\"Result.length==0\\\">\\r\\n                    <td class=\\\"t-data__td text-left\\\" colspan=\\\"8\\\">\\r\\n                        No Results Found\\r\\n                    </td>\\r\\n                </tr>                                   \\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div><!-- response table end-->\\r\\n</div>\";","module.exports = \"<div class=\\\"widget-panel widget-panel-sq\\\">\\r\\n\\t<div class=\\\"widget-panel__body bg-white d-flex flex-column\\\">\\r\\n\\t\\t<div>\\t\\t\\r\\n\\t\\t\\t<p class=\\\"font-h4 font-weight-bold\\\">Euro-PCT formalities</p>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"row d-flex flex-grow-1 just-content-center align-items-center\\\">\\r\\n\\t\\t\\t<div class=\\\"col-md-12 col-lg-12 col-xl-12\\\">\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div data-ng-if=\\\"$ctrl.donutData.total !== 0\\\">\\r\\n\\t\\t\\t\\t\\t<nvd3 options=\\\"$ctrl.donutOptions\\\" data=\\\"$ctrl.donutData.phases\\\" class=\\\"with-transitions\\\"></nvd3>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"donut-inner\\\">\\r\\n\\t\\t\\t\\t\\t\\t<h4 class=\\\"font-h4 font-weight-bold\\\">Total</h4>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"font-h2 font-weight-bold\\\">{{$ctrl.donutData.total}}</span>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div data-ng-if=\\\"$ctrl.donutData.total === 0\\\">\\r\\n\\t\\t\\t\\t\\t<p class=\\\"font-body text-center\\\">There are currently no Grant formalities</p>\\r\\n\\t\\t\\t\\t</div>\\t\\t\\r\\n\\t\\t\\t\\t<!--check whether it works when its back online-->\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\";","module.exports = \"<div class=\\\"widget-panel\\\">\\r\\n\\t<div class=\\\"widget-panel__body bg-white\\\">\\r\\n\\t\\t<div class=\\\"row m-b-md\\\">\\r\\n\\t\\t\\t<div class=\\\"col-md-12\\\">\\r\\n\\t\\t\\t\\t<h3 class=\\\"font-h3\\\"><span class=\\\"font-weight-bold\\\">FX Chart</span> - USD:EUR</h3>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<div data-ng-hide=\\\"$ctrl.fxChartLoaded\\\" class=\\\" d-flex flex-column justify-content-center align-items-center h-100\\\">\\r\\n\\t        <i class=\\\"fas fa-cog fa-spin fa-2x m-b-xs\\\"></i>\\r\\n\\t        <p>We are just fetching latest FX data</p>\\r\\n        </div>\\r\\n\\t\\t\\r\\n\\t\\t<div data-ng-show=\\\"$ctrl.fxChartLoaded\\\">\\r\\n\\t\\t\\t<nvd3 options=\\\"$ctrl.lineOptions\\\" data=\\\"$ctrl.lineData\\\" class=\\\"with-transitions\\\"></nvd3> <!--xAxisTickFormat=\\\"xAxisTickFormatFunction()\\\"-->\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\";","module.exports = \"<div class=\\\"widget-panel widget-panel-sq\\\">\\r\\n\\t<div class=\\\"widget-panel__body bg-white d-flex flex-column\\\">\\r\\n\\t\\t<div>\\t\\t\\r\\n\\t\\t\\t<p class=\\\"font-h4 font-weight-bold\\\">Grant formalities</p>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"row d-flex flex-grow-1 just-content-center align-items-center\\\">\\r\\n\\t\\t\\t<div class=\\\"col-md-12 col-lg-12 col-xl-12\\\">\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div data-ng-if=\\\"$ctrl.donutData.total !== 0\\\">\\r\\n\\t\\t\\t\\t\\t<nvd3 options=\\\"$ctrl.donutOptions\\\" data=\\\"$ctrl.donutData.phases\\\" class=\\\"with-transitions\\\"></nvd3>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"donut-inner\\\">\\r\\n\\t\\t\\t\\t\\t\\t<h4 class=\\\"font-h4 font-weight-bold\\\">Total</h4>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"font-h2 font-weight-bold\\\">{{$ctrl.donutData.total}}</span>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div data-ng-if=\\\"$ctrl.donutData.total === 0\\\">\\r\\n\\t\\t\\t\\t\\t<p class=\\\"font-body text-center\\\">There are currently no Grant formalities on the system</p>\\r\\n\\t\\t\\t\\t</div>\\t\\t\\r\\n\\t\\t\\t\\t<!--check whether it works when its back online-->\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\";","module.exports = \"<div class=\\\"widget-panel widget-panel-sq\\\">\\r\\n\\t<div class=\\\"widget-panel__body bg-white d-flex flex-column\\\">\\r\\n\\t\\t<div>\\t\\t\\r\\n\\t\\t\\t<p class=\\\"font-h4 font-weight-bold\\\">Renewal formalities</p>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"row d-flex flex-grow-1 just-content-center align-items-center\\\">\\r\\n\\t\\t\\t<div class=\\\"col-md-12 col-lg-12 col-xl-12\\\">\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div data-ng-if=\\\"$ctrl.donutData.total !== 0\\\">\\r\\n\\t\\t\\t\\t\\t<nvd3 options=\\\"$ctrl.donutOptions\\\" data=\\\"$ctrl.donutData.phases\\\" class=\\\"with-transitions\\\"></nvd3>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"donut-inner\\\">\\r\\n\\t\\t\\t\\t\\t\\t<h4 class=\\\"font-h4 font-weight-bold\\\">Total</h4>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"font-h2 font-weight-bold\\\">{{$ctrl.donutData.total}}</span>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div data-ng-if=\\\"$ctrl.donutData.total === 0\\\">\\r\\n\\t\\t\\t\\t\\t<p class=\\\"font-body text-center\\\">There are currently no Renewal formalities on the system</p>\\r\\n\\t\\t\\t\\t</div>\\t\\t\\r\\n\\t\\t\\t\\t<!--check whether it works when its back online-->\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\";","module.exports = \"<div class=\\\"m-b-xl d-flex flex-column flex-grow-1 animate-show\\\">\\r\\n\\t<div data-ng-hide=\\\"dashboardLoaded\\\" class=\\\"animate-show h-100\\\">\\r\\n\\t\\t<div class=\\\" d-flex flex-column justify-content-center align-items-center h-100\\\">\\r\\n\\t        <i class=\\\"fas fa-cog fa-spin fa-2x m-b-xs\\\"></i>\\r\\n\\t        <p>We are just preparing your dashboard</p>\\r\\n        </div>\\r\\n\\t</div>\\r\\n\\t<div data-ng-show=\\\"dashboardLoaded\\\" class=\\\"animate-show\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-sm-12\\\">\\r\\n\\t\\t\\t\\t<h1 class=\\\"font-h1 lh-default\\\">Dashboard</h1>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\t\\t\\r\\n\\t\\t<div class=\\\"row m-b-xl lg-m-b-md dashboard-row-top\\\">\\t\\r\\n\\t\\t\\t<div class=\\\"col-md-4 col-lg-3 col-xl-3\\\">\\r\\n\\t\\t\\t\\t<div ui-view=\\\"europctsgraph\\\" class=\\\"h-100\\\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-md-4 col-lg-3 col-xl-3\\\">\\r\\n\\t\\t\\t\\t<div ui-view=\\\"renewalsgraph\\\" class=\\\"h-100\\\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-md-4 col-lg-3 col-xl-3\\\">\\r\\n\\t\\t\\t\\t<div ui-view=\\\"grantsgraph\\\" class=\\\"h-100\\\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-md-4 col-lg-3 col-xl-3\\\">\\r\\n\\t\\t\\t\\t<div ui-view=\\\"validationsgraph\\\" class=\\\"h-100\\\"></div>\\r\\n\\t\\t\\t</div>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"row m-b-xl lg-m-b-md\\\">\\r\\n\\t\\t\\t<div class=\\\"col-md-12 col-lg-12 col-xl-6 md-m-b-md lg-m-b-md\\\">\\r\\n\\t\\t\\t\\t<div ui-view=\\\"actionsavailable\\\" class=\\\"h-100\\\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-md-12 col-lg-12 col-xl-6 lg-m-b-md d-md-none d-lg-block\\\" >\\r\\n\\t\\t\\t\\t<div ui-view=\\\"fxchartwidget\\\" class=\\\"h-100\\\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\";","module.exports = \"<div class=\\\"widget-panel widget-panel-sq\\\">\\r\\n\\t<div class=\\\"widget-panel__body bg-white d-flex flex-column\\\">\\r\\n\\t\\t<div>\\t\\t\\r\\n\\t\\t\\t<p class=\\\"font-h4 font-weight-bold\\\">Validation formalities</p>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"row d-flex flex-grow-1 just-content-center align-items-center\\\">\\r\\n\\t\\t\\t<div class=\\\"col-md-12 col-lg-12 col-xl-12\\\">\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div data-ng-if=\\\"$ctrl.donutData.total !== 0\\\">\\r\\n\\t\\t\\t\\t\\t<nvd3 options=\\\"$ctrl.donutOptions\\\" data=\\\"$ctrl.donutData.phases\\\" class=\\\"with-transitions\\\"></nvd3>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"donut-inner\\\">\\r\\n\\t\\t\\t\\t\\t\\t<h4 class=\\\"font-h4 font-weight-bold\\\">Total</h4>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"font-h2 font-weight-bold\\\">{{$ctrl.donutData.total}}</span>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div data-ng-if=\\\"$ctrl.donutData.total === 0\\\">\\r\\n\\t\\t\\t\\t\\t<p class=\\\"font-body text-center\\\">There are currently no Validation formalities on the system</p>\\r\\n\\t\\t\\t\\t</div>\\t\\t\\r\\n\\t\\t\\t\\t<!--check whether it works when its back online-->\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\";","module.exports = \"<div data-ng-show=\\\"data.length === 0\\\" class=\\\"col-md-12\\\">\\r\\n    <div class=\\\"bg-white p-a-sm\\\">\\r\\n        <p class=\\\"font-weight-medium\\\">We are sorry but no results were returned from you search criteria. Please try again.</p>\\r\\n    </div>\\r\\n</div>\\r\\n<div data-ng-hide=\\\"$ctrl.portfolioLoaded\\\" class=\\\"animate-hide d-flex flex-column justify-content-center align-items-center flex-grow-1\\\">\\r\\n    <i class=\\\"fas fa-cog fa-spin fa-2x m-b-xs\\\"></i>\\r\\n    <p>We are just fetching your patents</p>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div data-ng-show=\\\"$ctrl.portfolioLoaded\\\" class=\\\"animate-show container__scrollable-area\\\">\\r\\n    <div class=\\\"p-l-3 p-r-3 p-tb-sm br-tx-1\\\">                            \\r\\n        <div class=\\\"d-flex justify-content-between align-items-center\\\">\\r\\n            <div class=\\\"d-flex\\\">\\r\\n                <h1 class=\\\"font-h1 lh-default m-r-lg\\\">Portfolio</h1>\\r\\n            </div>\\r\\n            <div class=\\\"d-flex align-items-center\\\">\\r\\n                <md-chips data-ng-model=\\\"$ctrl.chipOptions\\\" readonly=\\\"true\\\" md-removable=\\\"true\\\" class=\\\"text-capitalize font-weight-medium cursor-pointer\\\" md-on-remove=\\\"selectedChip($chip.prop, $chip.value, $chip.cat); getItems($chip.cat, portfolioData)\\\">\\r\\n                    <md-chip-template>\\r\\n                        <strong class=\\\"font-body\\\"><span data-ng-show=\\\"{{$chip.prop}} == 'epct'\\\">Euro-PCT</span><span data-ng-hide=\\\"{{$chip.prop}} == 'epct'\\\">{{$chip.prop}}</span></strong>\\r\\n                        <em class=\\\"font-body\\\" data-ng-if=\\\"$chip.cat ==='serviceType'\\\">(action)</em><em class=\\\"font-body\\\" data-ng-if=\\\"$chip.cat ==='currentStageColour'\\\">(phase)</em>                     \\r\\n                    </md-chip-template>\\r\\n                    <!-- <md-icon><i class=\\\"d-flex input-group-text pill-radius fa fa-search\\\"></i></md-icon> -->\\r\\n                </md-chips>\\r\\n                <div class=\\\"m-r-lg\\\">\\r\\n                    <div class=\\\"input-group mb-2 m-r-sm\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control pill-radius\\\" name=\\\"portfolioSearch\\\" data-ng-model=\\\"searchPortfolio\\\" placeholder=\\\"Search Portfolio...\\\" autocomplete=\\\"off\\\">\\r\\n                        <div class=\\\"input-group-append\\\">\\r\\n                            <div class=\\\"input-group-text\\\">\\r\\n                                <i class=\\\"fa fa-search fa-2x\\\"></i>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>                    \\r\\n                </div>\\r\\n                <div>\\r\\n                    <md-menu md-position-mode=\\\"target-right target\\\">\\r\\n                        <md-button class=\\\"icon-stretch icon-stretch--icon black pill-radius\\\" data-ng-click=\\\"$ctrl.showFilter($mdMenu, $event)\\\">\\r\\n                            <span class=\\\"icon-text\\\">Filter</span>              \\r\\n                            <i class=\\\"fal fa-filter fa-2x cursor-pointer icon\\\"></i> \\r\\n                        </md-button>\\r\\n                        <md-menu-content class=\\\"container-filter-list\\\">\\r\\n                            <md-list class=\\\"box\\\" data-ng-repeat=\\\"cat in categories\\\" ng-init=\\\"filter[cat]={}\\\">\\r\\n                                <md-subheader class=\\\"md-no-sticky\\\">\\r\\n                                    <h2 class=\\\"font-h3\\\">{{cat == 'currentStageColour' ? 'Current Stage Colour' : 'European Action'}}</h2>\\r\\n                                </md-subheader>\\r\\n                                <md-list-item data-ng-repeat=\\\"value in getItems(cat, portfolioData)\\\">\\r\\n                                    <md-checkbox class=\\\"md-secondary\\\" data-ng-model=\\\"filter[cat][value]\\\" data-ng-change=\\\"updateFiltered(value, filter[cat][value], cat);\\\"> <!--used to update filtered patents totals, not filter portfolio-->\\r\\n                                    </md-checkbox>\\r\\n                                    <p>({{(filtered | filter:value:true).length}})&nbsp;\\r\\n                                        <span class=\\\"text-capitalize\\\" data-ng-if=\\\"value == 'GREY'\\\">Grey</span>\\r\\n                                        <span class=\\\"text-capitalize\\\" data-ng-if=\\\"value == 'epct'\\\">Euro-PCT</span>\\r\\n                                        <span class=\\\"text-capitalize\\\" data-ng-if=\\\"value !== 'epct' && value !== 'GREY'\\\">{{value}}</span>\\r\\n                                    </p>\\r\\n                                </md-list-item>\\r\\n                                <md-divider></md-divider>\\r\\n                            </md-list>\\r\\n                            <div layout=\\\"row\\\" class=\\\"demo-dialog-button\\\">\\r\\n                                <md-button md-autofocus flex class=\\\"md-primary\\\" data-ng-click=\\\"closeDialog();\\\">\\r\\n                                    Close\\r\\n                                </md-button>\\r\\n                            </div>\\r\\n                        </md-menu-content>\\r\\n                    </md-menu>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <md-button class=\\\"icon-stretch icon-stretch--icon green pill-radius\\\" data-ng-click=\\\"$ctrl.showAddPatent($event)\\\">\\r\\n                        <span class=\\\"icon-text\\\">Add Patent</span>\\r\\n\\r\\n                            <i class=\\\"fal fa-plus fa-2x txt-white cursor-pointer icon\\\"></i>\\r\\n                        </span>\\r\\n                    </md-button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"scrollable-area scrollable-area--full-height\\\">\\r\\n        <table class=\\\"t-data sticky-table\\\">\\r\\n            <thead class=\\\"sticky-thead\\\">\\r\\n                <tr class=\\\"t-data__row t-data__row--select\\\">\\r\\n                    <th class=\\\"t-data__th t-data__th--sm sticky-th\\\" data-ng-click=\\\"$ctrl.sortBy('ep_ApplicationNumber');\\\">\\r\\n                        <span>App No.</span>\\r\\n                        <span data-ng-show=\\\"$ctrl.propertyName == 'ep_ApplicationNumber' && !$ctrl.reverse\\\">\\r\\n                            <i class=\\\"fas fa-angle-down fa-lg\\\"></i>\\r\\n                        </span>\\r\\n                        <span data-ng-show=\\\"$ctrl.propertyName == 'ep_ApplicationNumber' && $ctrl.reverse\\\">\\r\\n                            <i class=\\\"fas fa-angle-up fa-lg\\\"></i>\\r\\n                        </span>\\r\\n                    </th>\\r\\n                    <th class=\\\"t-data__th t-data__th--md\\\" data-ng-click=\\\"$ctrl.sortBy('clientRef');\\\">\\r\\n                        <span>Client Ref</span>\\r\\n                        <span data-ng-show=\\\"$ctrl.propertyName == 'clientRef' && !$ctrl.reverse\\\">\\r\\n                            <i class=\\\"fas fa-angle-down fa-lg\\\"></i>\\r\\n                        </span>\\r\\n                        <span data-ng-show=\\\"$ctrl.propertyName == 'clientRef' && $ctrl.reverse\\\">\\r\\n                            <i class=\\\"fas fa-angle-up fa-lg\\\"></i>\\r\\n                        </span>                          \\r\\n                    </th>\\r\\n                    <th class=\\\"t-data__th t-data__th--md\\\" data-ng-click=\\\"$ctrl.sortBy('shortTitle');\\\">\\r\\n                        <span>Client Description</span>\\r\\n                        <span data-ng-show=\\\"$ctrl.propertyName == 'shortTitle' && !$ctrl.reverse\\\">\\r\\n                            <i class=\\\"fas fa-angle-down fa-lg\\\"></i>\\r\\n                        </span>\\r\\n                        <span data-ng-show=\\\"$ctrl.propertyName == 'shortTitle' && $ctrl.reverse\\\">\\r\\n                            <i class=\\\"fas fa-angle-up fa-lg\\\"></i>\\r\\n                        </span>                          \\r\\n                    </th>                    \\r\\n                    <th class=\\\"t-data__th t-data__th--sm\\\">\\r\\n                        <span>European Action</span>\\r\\n                    </th>\\r\\n                    <th class=\\\"t-data__th t-data__th--md\\\">\\r\\n                        <span>Patent Place Status</span>                        \\r\\n                    </th>\\r\\n                    <th class=\\\"t-data__th t-data__th--sm\\\">\\r\\n                        <span>Current Phase</span>\\r\\n                    </th>\\r\\n                    <th class=\\\"t-data__th t-data__th--sm\\\">\\r\\n                        <span>Next Phase</span>    \\r\\n                    </th>                    \\r\\n                    <th class=\\\"t-data__th t-data__th--md\\\">\\r\\n                        <span></span>\\r\\n                    </th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            \\r\\n            <tbody class=\\\"sticky-tbody\\\">\\r\\n                <tr data-ng-repeat=\\\"patent in filtered=(portfolioData | filter:filterByPropertiesMatchingAND | filter:searchPortfolio) | orderBy:$ctrl.propertyName:$ctrl.reverse as Result\\\" data-ng-click=\\\"$ctrl.rowSelect($event, patent); $ctrl.select(patent.patentID)\\\"  class=\\\"t-data__row t-data__row--select\\\" data-ng-class=\\\"{active: patent.patentID == $ctrl.selected}\\\">\\r\\n                    <td class=\\\"t-data__td t-data__td--sm sticky-td\\\">\\r\\n                        <a class=\\\"t-data__a\\\" data-ng-bind=\\\"patent.ep_ApplicationNumber\\\" data-ng-attr-id=\\\"{{patent.patentID}}\\\"></a>\\r\\n                    </td>\\r\\n                    <td class=\\\"t-data__td t-data__td--md\\\">\\r\\n                        <span class=\\\"txt-grey\\\" data-ng-if=\\\"patent.clientRef == ''\\\">[No client reference provided]</span>\\r\\n                        <span data-ng-if=\\\"patent.clientRef !== ''\\\">{{patent.clientRef}}</span>\\r\\n                    </td>\\r\\n                    <td class=\\\"t-data__td t-data__td--md\\\">\\r\\n                        <span class=\\\"txt-grey\\\" data-ng-if=\\\"patent.shortTitle == ''\\\">[No client reference provided]</span>\\r\\n                        <span data-ng-if=\\\"patent.shortTitle !== ''\\\">{{patent.shortTitle}}</span>\\r\\n                    </td>\\r\\n                    <td class=\\\"t-data__th--sm\\\">\\r\\n                        <table data-ng-if=\\\"patent.p3sServices.length == 1\\\">\\r\\n                            <tr>\\r\\n                                <td data-ng-repeat=\\\"item in patent.p3sServices track by $index\\\"  class=\\\"t-data__td\\\">\\r\\n                                    <div class=\\\"d-flex justify-content-left btn-underlined-selector\\\">\\r\\n                                        <span data-ng-bind=\\\"item.serviceType\\\" data-ng-if=\\\"item.serviceType !== 'postgrant' && item.serviceType !== 'epct'\\\" class=\\\"text-capitalize\\\"></span>\\r\\n                                        <span data-ng-if=\\\"item.serviceType == 'epct'\\\" class=\\\"text-capitalize\\\">Euro-PCT</span>\\r\\n                                        <span data-ng-if=\\\"item.serviceType == 'postgrant'\\\" class=\\\"text-capitalize\\\">----</span>\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </table>\\r\\n                        <table data-ng-if=\\\"patent.p3sServices.length > 1\\\">\\r\\n                            <tr data-ng-repeat=\\\"item in patent.p3sServices track by $index\\\">\\r\\n                                <td class=\\\"t-data__td\\\">\\r\\n                                    <div class=\\\"d-flex justify-content-left btn-underlined-selector\\\">\\r\\n                                        <span data-ng-bind=\\\"item.serviceType\\\" class=\\\"text-capitalize\\\"></span>\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </table>                                \\r\\n                    </td><!--when multiple services begin-->                    \\r\\n                    <td class=\\\"t-data__td--md p-t-none p-b-none\\\" >\\r\\n                        <table data-ng-if=\\\"patent.p3sServices.length == 1\\\">\\r\\n                            <tr>\\r\\n                                <td data-ng-repeat=\\\"item in patent.p3sServices track by $index\\\" class=\\\"t-data__td\\\">\\r\\n                                    <div data-ng-if=\\\"!item.isUrgentAttention\\\"> <!-- cover manual processing-->\\r\\n                                        <span data-ng-bind=\\\"item.serviceStatusUI\\\" class=\\\"font-weight-medium\\\"></span>\\r\\n                                    </div>\\r\\n                                    <div data-ng-if=\\\"item.isUrgentAttention && item.serviceType !== 'validation'\\\"> <!-- cover manual processing-->\\r\\n                                        <p class=\\\"txt-phase-red\\\">URGENT ACTION REQUIRED</p>\\r\\n                                    </div>     \\r\\n                                    <div data-ng-if=\\\"item.isUrgentAttention && item.serviceType == 'validation'\\\"> <!-- cover manual processing-->\\r\\n                                        <p>Manual Processing Only</p>\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </table>                       \\r\\n                        <table data-ng-if=\\\"patent.p3sServices.length > 1\\\">\\r\\n                            <tr data-ng-repeat=\\\"item in patent.p3sServices track by $index\\\">\\r\\n                                <td class=\\\"t-data__td\\\">\\r\\n                                    <div data-ng-if=\\\"!item.isUrgentAttention\\\"> <!-- cover manual processing-->\\r\\n                                        <span data-ng-bind=\\\"item.serviceStatusUI\\\" class=\\\"font-weight-medium\\\"></span>\\r\\n                                    </div>\\r\\n                                    <div data-ng-if=\\\"item.isUrgentAttention\\\"> <!-- cover manual processing-->\\r\\n                                        <p class=\\\"txt-phase-red\\\">URGENT ACTION REQUIRED</p>\\r\\n                                    </div>                                            \\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </table>                         \\r\\n                    </td><!--patent place status-->\\r\\n                    <td class=\\\" t-data__td--sm\\\">\\r\\n                        <table data-ng-if=\\\"patent.p3sServices.length == 1\\\">\\r\\n                            <td data-ng-repeat=\\\"item in patent.p3sServices track by $index\\\" class=\\\"t-data__td\\\">\\r\\n                                <div data-ng-if=\\\"(item.saleType === 'Online' || item.saleType === 'Offline') && item.serviceType !== 'validation'\\\">\\r\\n                                    <div class=\\\"d-flex flex-column\\\">\\r\\n                                        <div class=\\\"d-flex justify-content-start align-items-center\\\"><!--display costs-->\\r\\n                                            <p class=\\\"font-weight-bold m-r-sm\\\"><i class=\\\"fas fa-circle m-r-xs\\\" data-ng-class=\\\"item.cssCurrent\\\"></i>$ {{item.currentStageCostUSD | number: 2}}</p>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div data-ng-if=\\\"item.serviceType == 'validation'\\\">\\r\\n                                    <div class=\\\"d-flex flex-column\\\">\\r\\n                                        <div class=\\\"d-flex justify-content-start\\\"><!--display costs-->\\r\\n                                            <p class=\\\"font-weight-bold m-r-sm\\\" data-ng-if=\\\"item.currentStageCostUSD !== null\\\"><i class=\\\"fas fa-circle m-r-xs\\\" data-ng-class=\\\"item.cssCurrent\\\"></i>$ {{item.currentStageCostUSD | number: 2}}</p>\\r\\n                                            <p class=\\\"font-weight-bold txt-phase-green\\\" data-ng-if=\\\"item.serviceStatus == 'Validation available'\\\">Request Quote</p>\\r\\n                                            <p class=\\\"font-weight-bold txt-phase-green\\\" data-ng-if=\\\"item.serviceStatus == 'Preparing quote'\\\">Preparing Quote</p>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n<!--                                 <div data-ng-if=\\\"item.serviceType == 'validation' && item.serviceStatus !== 'Quote provided'\\\">\\r\\n                                    <p class=\\\"txt-grey\\\">N/A</p>\\r\\n                                </div> -->\\r\\n                                <div data-ng-if=\\\"item.saleType !== 'Online' && item.saleType !== 'Offline' && item.serviceStatus !== 'Epct being generated' && item.serviceStatus !== 'Preparing quote' && item.serviceStatus !== 'Scanned PoAs received'  && item.serviceStatus !== 'Blank PoAs downloaded' && item.serviceStatus !== 'Paper documents received'\\\">\\r\\n                                    <p class=\\\"txt-grey\\\">N/A</p>\\r\\n                                </div>                                \\r\\n                            </td>\\r\\n                        </table>\\r\\n                        <table data-ng-if=\\\"patent.p3sServices.length > 1\\\">\\r\\n                            <tr data-ng-repeat=\\\"item in patent.p3sServices track by $index\\\">\\r\\n                                <td class=\\\"t-data__td\\\">\\r\\n                                    <div data-ng-if=\\\"item.saleType === 'Online' || item.saleType === 'Offline'\\\">\\r\\n                                        <div class=\\\"d-flex flex-column\\\">\\r\\n                                            <div class=\\\"d-flex justify-content-start align-items-center\\\"><!--display costs-->\\r\\n                                                <p class=\\\"font-weight-bold m-r-sm\\\"><i class=\\\"fas fa-circle m-r-xs\\\" data-ng-class=\\\"item.cssCurrent\\\"></i>$ {{item.currentStageCostUSD | number: 2}}</p>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div data-ng-if=\\\"item.saleType !== 'Online' && item.saleType !== 'Offline' && item.serviceStatus !== 'Epct being generated' && item.serviceStatus !== 'Preparing quote'\\\">\\r\\n                                        <p class=\\\"txt-grey\\\">N/A</p>\\r\\n                                    </div>                                \\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </table>                                \\r\\n                    </td><!--when multiple services begin-->     \\r\\n                    <td class=\\\"t-data__th--sm\\\">\\r\\n                        <table data-ng-if=\\\"patent.p3sServices.length == 1\\\">\\r\\n                            <td data-ng-repeat=\\\"item in patent.p3sServices track by $index\\\" class=\\\"t-data__td\\\">\\r\\n                                <div data-ng-if=\\\"(item.saleType === 'Online' || item.saleType === 'Offline') && item.serviceType !== 'validation'\\\">\\r\\n                                    <div class=\\\"d-flex flex-column\\\">\\r\\n                                        <div class=\\\"d-flex justify-content-start align-items-center\\\"><!--display costs-->\\r\\n\\r\\n                                            <p data-ng-if=\\\"(!item.isUrgentAttention && item.currentStageColour !== 'Black' && (item.saleType === 'Online' || item.saleType === 'Offline')) || (!item.isUrgentAttention && item.currentStageColour == 'Black' && (item.saleType === 'Online' || item.saleType === 'Offline'))\\\" class=\\\"font-weight-bold\\\"><i class=\\\"fas fa-circle m-r-xs\\\" data-ng-class=\\\"item.cssNext\\\"></i> $ {{item.nextStageCostUSD | number: 2}}</p> \\r\\n                                            <p data-ng-if=\\\"item.isUrgentAttention && item.currentStageColour == 'Black' && item.serviceType === 'renewal'\\\" class=\\\"font-weight-bold\\\">LAPSE</p> <!--if current colour is black and urgent attention required. Means that it is the second stage of black and is renewal-->\\r\\n                                            <p data-ng-if=\\\"item.isUrgentAttention && item.currentStageColour == 'Red' && item.serviceType !== 'renewal'\\\" class=\\\"font-weight-bold\\\">LAPSE</p> <!--if current colour is black and urgent attention required. Means that it is the second stage of black-->\\r\\n                                        </div>    \\r\\n                                    </div>\\r\\n                                </div>                            \\r\\n                                <div data-ng-if=\\\"(item.saleType !== 'Online' && item.saleType !== 'Offline' && item.serviceStatus !== 'Epct being generated') || item.serviceType == 'validation'\\\">\\r\\n                                    <p class=\\\"txt-grey\\\">N/A</p>\\r\\n                                </div>\\r\\n                            </td>\\r\\n                        </table>\\r\\n                        <table data-ng-if=\\\"patent.p3sServices.length > 1\\\">\\r\\n                            <tr data-ng-repeat=\\\"item in patent.p3sServices track by $index\\\">\\r\\n                                <td class=\\\"t-data__td\\\">\\r\\n                                    <div data-ng-if=\\\"(item.saleType === 'Online' || item.saleType === 'Offline') && item.serviceType !== 'validation'\\\">\\r\\n                                        <div class=\\\"d-flex flex-column\\\">\\r\\n                                            <div class=\\\"d-flex justify-content-start align-items-center\\\"><!--display costs-->\\r\\n\\r\\n                                                <p data-ng-if=\\\"(!item.isUrgentAttention && item.currentStageColour !== 'Black' && (item.saleType === 'Online' || item.saleType === 'Offline')) || (!item.isUrgentAttention && item.currentStageColour == 'Black' && (item.saleType === 'Online' || item.saleType === 'Offline'))\\\" class=\\\"font-weight-bold\\\"><i class=\\\"fas fa-circle m-r-xs\\\" data-ng-class=\\\"item.cssNext\\\"></i> $ {{item.nextStageCostUSD | number: 2}}</p> \\r\\n                                                <p data-ng-if=\\\"item.isUrgentAttention && item.currentStageColour == 'Black' && item.serviceType === 'renewal'\\\" class=\\\"font-weight-bold\\\">LAPSE</p> <!--if current colour is black and urgent attention required. Means that it is the second stage of black and is renewal-->\\r\\n                                                <p data-ng-if=\\\"item.isUrgentAttention && item.currentStageColour == 'Red' && item.serviceType !== 'renewal'\\\" class=\\\"font-weight-bold\\\">LAPSE</p> <!--if current colour is black and urgent attention required. Means that it is the second stage of black-->\\r\\n                                            </div>    \\r\\n                                        </div>\\r\\n                                    </div>                            \\r\\n                                    <div data-ng-if=\\\"(item.saleType !== 'Online' && item.saleType !== 'Offline' && item.serviceStatus !== 'Epct being generated') || item.serviceType == 'validation'\\\">\\r\\n                                        <p class=\\\"txt-grey\\\">N/A</p>\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </table>                                \\r\\n                    </td><!--when multiple services begin-->     \\r\\n                    <td class=\\\"t-data__td t-data__td--md\\\">\\r\\n                        <table data-ng-if=\\\"patent.p3sServices.length == 1\\\">\\r\\n                            <tr>\\r\\n                                <td>\\r\\n                                    <div class=\\\"d-flex justify-content-center btn-underlined-selector\\\" data-ng-repeat=\\\"item in patent.p3sServices track by $index\\\">\\r\\n                                        <div data-ng-if=\\\"item.serviceType == 'epct'\\\">\\r\\n                                            <a data-ng-if=\\\"item.saleType == 'Online' && (item.serviceStatus === 'Epct available' || item.serviceStatus === 'Epct rejected')\\\" class=\\\"btn btn--bordered btn-underlined generateForm1200\\\">Generate Form 1200</a>\\r\\n\\r\\n                                            <ngcart-addtocart id=\\\"{{item.actionID}}\\\" class=\\\"tablebtn\\\" name=\\\"epct\\\" price=\\\"{{item.currentStageCostUSD}}\\\" quantity=\\\"1\\\" quantity-max=\\\"10\\\" data=\\\"patent\\\" data-ng-if=\\\"item.saleType == 'Online' && item.serviceStatus == 'Epct saved'\\\"> <!--secret to different button labels checkngcartdirective.js-->\\r\\n                                            </ngcart-addtocart>\\r\\n                                        </div>\\r\\n                                        <div data-ng-if=\\\"item.serviceType == 'renewal'\\\">\\r\\n                                            <ngcart-addtocart id=\\\"{{item.actionID}}\\\" class=\\\"tablebtn\\\" name=\\\"renewal\\\" price=\\\"{{item.currentStageCostUSD}}\\\" quantity=\\\"1\\\" quantity-max=\\\"10\\\" data=\\\"patent\\\" data-ng-if=\\\"item.saleType == 'Online' && item.serviceStatus == 'Show price'\\\"> <!--secret to different button labels checkngcartdirective.js-->\\r\\n                                            </ngcart-addtocart>\\r\\n                                            \\r\\n                                        </div>\\r\\n                                        <div data-ng-if=\\\"item.serviceType == 'grant'\\\">\\r\\n                                            <a data-ng-if=\\\"item.saleType == 'Online' && item.serviceStatus === 'Grant available'\\\" class=\\\"btn btn--bordered btn-underlined prepareGrant\\\" data-ng-click=\\\"$ctrl.prepareGrant(patent.patentID)\\\">Prepare Grant\\r\\n                                            </a>\\r\\n                                            <ngcart-addtocart id=\\\"{{item.actionID}}\\\" class=\\\"tablebtn\\\" name=\\\"grant\\\" price=\\\"{{item.currentStageCostUSD}}\\\" quantity=\\\"1\\\" quantity-max=\\\"10\\\" data=\\\"patent\\\" data-ng-if=\\\"item.saleType == 'Online' && item.serviceStatus == 'Grant saved'\\\"> <!--secret to different button labels checkngcartdirective.js-->\\r\\n                                            </ngcart-addtocart>\\r\\n                                        </div>          \\r\\n                                        <div data-ng-if=\\\"item.serviceType == 'validation'\\\">\\r\\n                                            <ngcart-addtocart id=\\\"{{item.actionID}}\\\" class=\\\"tablebtn\\\" name=\\\"validation\\\" price=\\\"{{item.currentStageCostUSD}}\\\" quantity=\\\"1\\\" quantity-max=\\\"10\\\" data=\\\"patent\\\" data-ng-if=\\\"item.saleType == 'Online' && item.serviceStatus == 'Quote provided'\\\"> <!--secret to different button labels checkngcartdirective.js-->\\r\\n                                            </ngcart-addtocart>\\r\\n                                        </div>                                                  \\r\\n                                        <p class=\\\"font-weight-medium\\\" data-ng-class=\\\"item.isUrgentAttention && item.serviceType !== 'validation' ? 'txt-phase-red' : ''\\\" data-ng-if=\\\"item.saleType == 'Offline'\\\">Call +44 203 696 0949</p>\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </table>\\r\\n                        <table data-ng-if=\\\"patent.p3sServices.length > 1\\\">\\r\\n                            <tr data-ng-repeat=\\\"item in patent.p3sServices track by $index\\\">\\r\\n                                <td class=\\\"t-data__td\\\">\\r\\n                                    <div class=\\\"d-flex justify-content-center btn-underlined-selector\\\">\\r\\n\\r\\n                                        <div data-ng-if=\\\"item.serviceType == 'renewal'\\\">\\r\\n                                            <ngcart-addtocart id=\\\"{{item.actionID}}\\\" class=\\\"tablebtn\\\" name=\\\"renewal\\\" price=\\\"{{item.currentStageCostUSD}}\\\" quantity=\\\"1\\\" quantity-max=\\\"10\\\" data=\\\"patent\\\" data-ng-if=\\\"item.saleType == 'Online' && item.serviceStatus == 'Show price'\\\"> <!--secret to different button labels checkngcartdirective.js-->\\r\\n                                            </ngcart-addtocart>\\r\\n                                        </div>\\r\\n                                        <div data-ng-if=\\\"item.serviceType == 'grant'\\\">\\r\\n                                            <a data-ng-if=\\\"item.saleType == 'Online' && item.serviceStatus === 'Grant available'\\\" class=\\\"btn btn--bordered btn-underlined prepareGrant\\\" data-ng-click=\\\"$ctrl.prepareGrant(patent.patentID)\\\">Prepare Grant\\r\\n                                            </a>\\r\\n                                            <ngcart-addtocart id=\\\"{{item.actionID}}\\\" class=\\\"tablebtn\\\" name=\\\"grant\\\" price=\\\"{{item.currentStageCostUSD}}\\\" quantity=\\\"1\\\" quantity-max=\\\"10\\\" data=\\\"patent\\\" data-ng-if=\\\"item.saleType == 'Online' && item.serviceStatus == 'Grant saved'\\\"> <!--secret to different button labels checkngcartdirective.js-->\\r\\n                                            </ngcart-addtocart>\\r\\n                                        </div>                                                \\r\\n                                        <p class=\\\"font-weight-medium\\\" data-ng-class=\\\"item.isUrgentAttention ? 'txt-phase-red' : ''\\\" data-ng-if=\\\"item.saleType == 'Offline'\\\">Call +44 203 696 0949</p>\\r\\n                                        <p class=\\\"invisible\\\" data-ng-if=\\\"item.saleType !== 'Online' && item.serviceStatus !== 'Show price' && item.serviceStatus !== 'Grant available'\\\">Fill space</p>\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </table>\\r\\n                    </td>\\r\\n                </tr>\\r\\n                <tr data-ng-show=\\\"Result.length==0\\\">\\r\\n                    <td class=\\\"t-data__td text-left\\\" colspan=\\\"8\\\">\\r\\n                        No Results Found\\r\\n                    </td>\\r\\n                </tr>                                   \\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div><!-- response table end-->\\r\\n</div>\\r\\n\\r\\n<div data-ui-view=\\\"modal\\\" autoscroll=\\\"false\\\"></div>\";","module.exports = \"<md-button class=\\\"d-flex align-items-center\\\" data-ui-sref-active=\\\"active\\\" data-ui-sref=\\\"{{section.state}}\\\" ng-click=\\\"focusSection()\\\">\\r\\n\\t<i class=\\\"{{section.icon}}\\\"></i><span class=\\\"m-l-xs font-h4\\\">{{section.name}}</span>\\r\\n\\t<span class=\\\"md-visually-hidden\\\" data-ng-if=\\\"isSelected()\\\">current page</span>\\r\\n</md-button>\\r\\n\\r\\n\";","module.exports = \"<md-button class=\\\"md-button-toggle font-weight-medium justify-content-center align-items-center\\\" data-ng-click=\\\"toggle()\\\" aria-controls=\\\"side-menu-{{section.name}}\\\" flex layout=\\\"row\\\" aria-expanded=\\\"{{isOpen()}}\\\">\\r\\n    <i class=\\\"{{section.icon}}\\\"></i><span class=\\\"txt-white m-l-xs font-h4\\\">{{section.name}}</span>\\r\\n\\t<md-icon md-font-set=\\\"fas fa-chevron-down\\\" class=\\\"md-toggle-icon txt-white font-h4 d-flex align-items-center\\\" data-ng-class=\\\"{'toggled' : isOpen()}\\\"></md-icon>\\r\\n</md-button>\\r\\n<ul data-ng-show=\\\"isOpen()\\\" id=\\\"side-menu-{{section.name}}\\\" class=\\\"nav menu-toggle-list w-100\\\">\\r\\n    <li data-ng-repeat=\\\"page in section.pages\\\" class=\\\"font-weight-medium\\\">\\r\\n        <menu-link section=\\\"page\\\"></menu-link>\\r\\n    </li>\\r\\n</ul>\";","module.exports = \"<div class=\\\"fade long-fade show\\\"> <!--top nav-->\\r\\n    <div layout=\\\"row\\\" class=\\\"closed-sidenav border-grey-xs--btm\\\">\\r\\n    \\t<div class=\\\"closed-sidenav--inner d-flex justify-content-between\\\">\\r\\n\\t\\t\\t<span class=\\\"d-flex cursor-pointer m-r-lg align-items-center\\\" data-ng-click=\\\"$ctrl.toggleLeft()\\\">\\r\\n\\t\\t    \\t<i class=\\\"fas fa-bars fa-2x txt-black\\\"></i>\\r\\n\\t\\t\\t    <p class=\\\"txt-black m-l-sm font-h4\\\">Menu</p>\\r\\n\\t\\t\\t</span>\\r\\n\\t    \\t<div class=\\\"d-flex\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"d-flex justify-content-between align-items-center m-r-lg\\\">\\r\\n\\t\\t\\t\\t\\t<span class=\\\"m-r-xs font-h4 txt-black\\\"><span class=\\\"font-weight-bold\\\">EST:</span> {{$ctrl.est}}</span> \\r\\n\\t\\t\\t\\t\\t<span class=\\\"font-h4 txt-black\\\"><span class=\\\"font-weight-bold\\\">UTC:</span> {{$ctrl.utc}}</span>\\r\\n\\t\\t\\t\\t</div>\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\\"d-flex justify-content-between align-items-center\\\">\\r\\n\\t\\t\\t\\t\\t<span class=\\\"m-r-md font-h4 txt-black\\\"><span class=\\\"font-weight-bold m-r-xs\\\">USD - EUR</span>{{$ctrl.fxRate}}</span> \\r\\n\\t\\t\\t\\t</div>\\r\\n\\t    \\t</div>\\r\\n\\t\\t\\t<div class=\\\"d-flex justify-content-end align-items-center\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"d-flex justify-content-between align-items-center m-r-md\\\">\\t\\t\\t\\r\\n<!-- \\t\\t\\t\\t\\t<i class=\\\"far fa-info-circle fa-2x cursor-pointer\\\" data-ng-click=\\\"$ctrl.openGuide()\\\"></i> -->\\r\\n\\t\\t\\t\\t\\t<md-tooltip md-delay=\\\"500\\\" md-direction=\\\"bottom\\\">App Guide</md-tooltip>\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<a data-ui-sref=\\\"basket\\\" class=\\\"m-r-md\\\">\\r\\n\\t\\t\\t\\t\\t<ngcart-summary class=\\\"font-body txt-black\\\"></ngcart-summary>\\r\\n\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t<p class=\\\"txt-black\\\">\\r\\n\\t\\t\\t\\t\\t\\t<a data-ui-sref=\\\"profile\\\" class=\\\"font-weight-medium font-h4\\\">{{$root.user.firstName}}</a> | \\r\\n\\t\\t\\t\\t\\t\\t<a class=\\\"font-h4 txt-black inline-link\\\" data-ng-click=\\\"$ctrl.empty()\\\" data-ng-href=\\\"http://localhost:8080/p3sweb/resources/j_spring_security_logout\\\">Logout</a>\\r\\n\\t\\t\\t\\t\\t</p>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n  \\t</div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div><!--side-nav-->\\r\\n \\t<section flex>\\r\\n\\t    <md-sidenav class=\\\"md-sidenav-left bg-phase-grey\\\" md-component-id=\\\"left\\\" md-disable-backdrop md-whiteframe=\\\"3\\\">\\r\\n      \\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t      \\t<div class=\\\"col-md-12\\\">\\r\\n\\t\\t      \\t\\t<div class=\\\"bg-phase-grey p-v-sm-h-lg flex-grow-1 d-flex justify-content-between align-items-center\\\">\\r\\n\\t\\t\\t      \\t\\t<img src=\\\"\" + require(\"../pp_icon.png\") + \"\\\" alt=\\\"patent place icon small\\\">\\r\\n\\t\\t\\t      \\t\\t<span class=\\\"cursor-pointer\\\" data-ng-click=\\\"$ctrl.toggleLeft()\\\"><i class=\\\"fas fa-times fa-2x txt-white\\\"></i></span>\\r\\n\\t\\t\\t      \\t</div>\\t\\r\\n\\t      \\t\\t</div>\\r\\n\\t      \\t</div>\\t    \\t\\t\\t\\r\\n      \\t \\t<md-content class=\\\"bg-phase-grey\\\">\\r\\n\\t      \\t \\t<div layout=\\\"column\\\" class=\\\"p-pill-tabs m-b-sm p-a-sm\\\">\\r\\n\\t      \\t \\t\\t\\r\\n\\t\\t      \\t \\t<div class=\\\"d-flex justify-content-center align-items-center m-b-sm\\\">\\t\\t      \\t \\t\\r\\n\\t\\t      \\t \\t\\t<a class=\\\"nav-link\\\" data-ui-sref=\\\"profile\\\">\\t\\t\\t\\r\\n\\t\\t      \\t \\t\\t\\t<img data-ng-src=\\\"{{$ctrl.avatarimage}}\\\" data-ng-if=\\\"$ctrl.avatarimage\\\" alt=\\\"users profile pic\\\" class=\\\"profile-pic-radius\\\" width=\\\"104\\\">\\r\\n\\t\\t      \\t \\t\\t\\t<img src=\\\"\" + require(\"../avatar-default.png\") + \"\\\" data-ng-if=\\\"!$ctrl.avatarimage\\\" alt=\\\"users profile pic\\\" class=\\\"profile-pic-radius\\\" width=\\\"104\\\">\\r\\n\\t      \\t \\t\\t\\t</a>\\r\\n\\t\\t      \\t \\t</div>\\r\\n\\t      \\t \\t\\t<div class=\\\"d-flex justify-content-center align-items-center\\\">\\r\\n\\t      \\t \\t\\t\\t<a class=\\\"nav-link nav-link--white d-flex justify-content-center align-items-center font-h4 font-weight-bold\\\" data-ui-sref=\\\"profile\\\">\\r\\n\\t\\t\\t      \\t \\t\\t{{$ctrl.user.firstName}} {{$ctrl.user.lastName}}\\r\\n\\t\\t      \\t \\t\\t</a>\\r\\n\\t      \\t \\t\\t</div>\\r\\n\\t      \\t \\t\\t<div class=\\\"d-flex justify-content-center align-items-center\\\">\\r\\n\\t\\t      \\t \\t\\t<span class=\\\"font-body text-center\\\">{{$ctrl.user.business.businessName}}</span>\\r\\n\\t\\t      \\t \\t</div>\\r\\n\\t      \\t \\t</div>\\r\\n\\t      \\t \\t<div layout=\\\"column\\\" class=\\\" d-flex justify-content-center\\\">\\r\\n\\t      \\t \\t\\t<nav class=\\\"nav\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ul class=\\\"side-menu w-100\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<li data-ng-repeat=\\\"section in $ctrl.menu.sections\\\" class=\\\"font-body font-weight-medium\\\" data-ui-sref-active=\\\"active\\\" data-ng-class=\\\"{'parentActive' : $ctrl.isSectionSelected(section)}\\\">\\r\\n\\t                        \\t<menu-link section=\\\"section\\\" data-ng-if=\\\"section.type === 'link'\\\"></menu-link>\\r\\n\\t        \\t\\t\\t\\t\\t<menu-toggle section=\\\"section\\\" data-ng-if=\\\"section.type === 'toggle'\\\" context=\\\"$ctrl\\\"></menu-toggle>\\r\\n\\t\\t\\t\\t\\t        </li>\\r\\n\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t</nav>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</md-content>\\r\\n\\t    </md-sidenav>\\r\\n  \\t</section>\\r\\n  \\r\\n    <div layout=\\\"column\\\" class=\\\"closed-sidenav-side bg-phase-grey\\\">\\r\\n\\t  \\t<div class=\\\"text-center w-100 p-tb-20\\\">\\r\\n\\t  \\t\\t<a data-ui-sref=\\\"dashboard\\\">\\r\\n\\t  \\t\\t\\t<img width=\\\"35\\\" src=\\\"\" + require(\"../pp_icon.png\") + \"\\\">\\r\\n\\t  \\t\\t</a>\\r\\n\\t    </div>\\r\\n\\t\\t<ul class=\\\"nav flex-column\\\">\\r\\n\\t\\t\\t<li class=\\\"nav-item\\\" data-ui-sref-active=\\\"active\\\">\\r\\n\\t\\t\\t\\t<a class=\\\"nav-link p-tb-md d-flex justify-content-center align-items-center\\\" data-ui-sref=\\\"dashboard\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"far fa-tachometer-alt fa-2x d-none d-xl-block\\\"></i>\\r\\n\\t\\t\\t\\t\\t<i class=\\\"far fa-tachometer-alt fa-2x d-xl-none\\\"></i>\\r\\n\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t<md-tooltip md-delay=\\\"500\\\" md-direction=\\\"right\\\">Dashboard</md-tooltip>\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t\\t<li class=\\\"nav-item\\\" data-ui-sref-active=\\\"active\\\">\\r\\n\\t\\t\\t\\t<a class=\\\"nav-link p-tb-md d-flex justify-content-center align-items-center\\\" data-ui-sref=\\\"portfolio\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"far fa-folders fa-2x d-none d-xl-block\\\"></i>\\r\\n\\t\\t\\t\\t\\t<i class=\\\"far fa-folders fa-2x d-xl-none d-lg-inline-block\\\"></i>\\r\\n\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t<md-tooltip md-delay=\\\"500\\\" md-direction=\\\"right\\\">Portfolio</md-tooltip>\\r\\n\\t\\t\\t</li>\\t\\t\\t\\r\\n\\t\\t\\t<li class=\\\"nav-item\\\" data-ui-sref-active=\\\"active\\\">\\r\\n\\t\\t\\t\\t<a class=\\\"nav-link p-tb-md d-flex justify-content-center align-items-center\\\" data-ui-sref=\\\"transactions\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"far fa-money-check-alt fa-2x d-none d-xl-block\\\"></i>\\r\\n\\t\\t\\t\\t\\t<i class=\\\"far fa-money-check-alt fa-2x d-xl-none d-lg-inline-block\\\"></i>\\r\\n\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t<md-tooltip md-delay=\\\"500\\\" md-direction=\\\"right\\\">Transactions</md-tooltip>\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t</ul>\\r\\n\\t\\t<div class=\\\"text-center position-bottom w-100 m-b-sm\\\">\\r\\n<!-- \\t\\t\\t<button data-ng-click=\\\"$ctrl.openGuide()\\\" class=\\\"m-b-sm btn btn-no-bg\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"far fa-info-circle fa-2x txt-white\\\"></i>\\r\\n\\t\\t\\t\\t<md-tooltip md-delay=\\\"500\\\" md-direction=\\\"right\\\">App Guide</md-tooltip>\\r\\n\\t\\t\\t</button> -->\\r\\n\\t\\t</div>\\r\\n  \\t</div>\\r\\n</div>\\r\\n\";","export default angular.module('ngCart.fulfilment', [])\r\n\r\n.service('fulfilmentProvider', ['$injector', '$state', '$timeout', function($injector, $state, $timeout){\r\n\r\n    this._obj = {\r\n        service : undefined,\r\n        settings : undefined\r\n    };\r\n  \r\n    this.setService = function(service){\r\n        this._obj.service = service;\r\n    };\r\n  \r\n    this.setSettings = function(settings){\r\n        this._obj.settings = settings;\r\n    };\r\n  \r\n    this.checkout = function(orderObj){\r\n        var provider = $injector.get('ngCart.fulfilment.' + this._obj.service);\r\n        return provider.checkout(this._obj.settings,orderObj);\r\n    };\r\n      \r\n}])\r\n\r\n.service('ngCart.fulfilment.http', ['$http','$state', '$q', function($http, $state, $q){\r\n\r\n        \r\n        this.checkout = function(service, patent){\r\n\r\n            var deferred = $q.defer();\r\n            $http.post('http://localhost:8080/p3sweb/rest-prepare-banktransfer/', patent)\r\n            .then(\r\n                function(response){\r\n                    deferred.resolve(response.data);\r\n                },\r\n                function(errResponse){\r\n                    console.error('Error submitting POST request to rest-prepare-banktransfer/. Error: ', errResponse)\r\n                    deferred.reject(errResponse);\r\n                }\r\n            );\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n }]).name\r\n\r\n\r\n\r\n","'use strict';\r\n\r\nimport fulfilment from '../../services/vendors/ngCart.fulfilment.js';\r\n\r\nexport default angular.module('ngCart.directives', [fulfilment])\r\n\r\n.controller('CartController',['$scope', 'ngCart', '$state', function($scope, ngCart, $state) {\r\n    $scope.ngCart = ngCart;\r\n}])\r\n\r\n.directive('ngcartAddtocart', ['ngCart', function(ngCart){\r\n    return {\r\n        restrict : 'E',\r\n        controller : 'CartController',\r\n        scope: {\r\n            id:'@',\r\n            name:'@',\r\n            quantity:'@',\r\n            quantityMax:'@',\r\n            price:'@',\r\n            data:'='\r\n        },\r\n        transclude: true,\r\n        templateUrl: function(element, attrs) {\r\n            if ( typeof attrs.templateUrl == 'undefined' ) {\r\n                return '../app/global/html/ngCart/addtocart.htm';\r\n            } else {\r\n                return attrs.templateUrl;\r\n            }\r\n        },\r\n        link:function(scope, element, attrs){\r\n\r\n            scope.attrs = attrs;\r\n            scope.inCart = function(){\r\n                return  ngCart.getItemById(attrs.id);\r\n            };\r\n\r\n            if (scope.inCart()){\r\n                scope.q = ngCart.getItemById(attrs.id).getQuantity();\r\n            } else {\r\n                scope.q = parseInt(scope.quantity);\r\n            }\r\n\r\n            scope.qtyOpt =  [];\r\n            for (var i = 1; i <= scope.quantityMax; i++) {\r\n                scope.qtyOpt.push(i);\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n}])\r\n\r\n.directive('ngcartCart', [function(){\r\n    return {\r\n        restrict : 'E',\r\n        scope: {\r\n            ngModel: '='\r\n        },\r\n        controller : 'CartController',\r\n        templateUrl: function(element, attrs) {\r\n            if ( typeof attrs.templateUrl == 'undefined' ) {\r\n                return '../app/global/html/ngCart/cart.htm';\r\n            } else {\r\n                return attrs.templateUrl;\r\n            }\r\n        },\r\n        link:function(scope, element, attrs){\r\n\r\n        }\r\n    };\r\n}])\r\n\r\n.directive('ngcartSummary', [function(){\r\n    return {\r\n        restrict : 'E',\r\n        controller : 'CartController',\r\n        scope: {},\r\n        transclude: true,\r\n        templateUrl: function(element, attrs) {\r\n            if ( typeof attrs.templateUrl == 'undefined' ) {\r\n                return '../app/global/html/ngCart/summary.htm';\r\n            } else {\r\n                return attrs.templateUrl;\r\n            }\r\n        }\r\n    };\r\n}])\r\n\r\n.directive('ngcartCheckout', ['ngCart', 'ngCartItem', 'basketService', 'patentsRestService', '$rootScope', '$timeout',  '$state', function(ngCart, ngCartItem, basketService, patentsRestService, $rootScope, $timeout,  $state){\r\n    return {\r\n        restrict : 'E',\r\n        scope: {\r\n            service:'@',\r\n            settings:'=',\r\n            ngModel: '='\r\n        },\r\n        controller : ('CartController', ['$scope', 'ngCart', 'fulfilmentProvider', 'basketService','$state', function($scope, ngCart, fulfilmentProvider, basketService, $state) {\r\n\r\n            $scope.ngCart = ngCart;\r\n            $scope.productData = ngCart.$cart.items;\r\n\r\n\r\n\r\n            $scope.basketItems = function() {\r\n                return [] = Object.keys($scope.productData).map(function(data, index){\r\n                    var obj = {};\r\n                    obj.ep_ApplicationNo = $scope.productData[data]._data.ep_ApplicationNumber;\r\n                    obj.patentID = $scope.productData[data]._data.patentID;\r\n                    obj.serviceType = $scope.productData[data]._name;\r\n                    return obj;\r\n                })\r\n            };\r\n\r\n            $scope.checkout = function () {\r\n\r\n                var orderObj = {\r\n                    basketItems: $scope.basketItems(),\r\n                    totalCostUSD: ngCart.totalCost(),\r\n                    dateNowLocalTime: null\r\n                };\r\n\r\n                fulfilmentProvider.setService($scope.service);\r\n                fulfilmentProvider.setSettings($scope.settings);\r\n\r\n                fulfilmentProvider.checkout(orderObj)\r\n                    .then(function (data, status, headers, config) {\r\n                            data.billingDetails = $scope.summary.billingDetails;\r\n                            $state.go('bank-transfer-preparation', {orderObj:orderObj, details: data}, {reload: false});                            \r\n                        },\r\n                        function (data, status, headers, config) {\r\n                            $rootScope.$broadcast('ngCart:checkout_failed', {\r\n                                statusCode: status,\r\n                                error: data\r\n                            });\r\n                        }\r\n                    );\r\n            };\r\n        }]),\r\n        link: function(scope, element, attrs) {\r\n            \r\n            $rootScope.$on('ngCart:itemRemoved', function() {\r\n               fetchBasketPatents();\r\n            });\r\n\r\n            fetchBasketPatents();\r\n\r\n            function fetchBasketPatents(orderObj) {\r\n                var orderObj = {};\r\n                orderObj.basketItems = scope.basketItems();\r\n                basketService.fetchBasketPatents(orderObj)\r\n                .then(\r\n                    function(response){\r\n\r\n                        scope.summary = {\r\n                            firstName: response.firstName,\r\n                            lastName: response.lastName,\r\n                            billingDetails: {\r\n                                billingStreet: response.billingStreet,\r\n                                billingCity: response.billingCity,\r\n                                billingState: response.billingState,\r\n                                billingZip: response.billingZip,\r\n                            },\r\n                            date: response.dateNowLocalTimeUI,\r\n                            fees: {\r\n                                totalProcessingFeesUSD: response.totalProcessingFeesUSD,\r\n                                totalExpressFeesUSD: response.totalExpressFeesUSD,\r\n                                totalUrgentFeesUSD: response.totalUrgentFeesUSD,\r\n                                totalOfficialFeesUSD: response.totalOfficialFeesUSD,\r\n                                totalPatentPlaceFeesUSD: (function(){\r\n                                    return response.totalCostUSD - response.totalOfficialFeesUSD;\r\n                                }()),\r\n                                totalCostUSD: response.totalCostUSD\r\n                            },\r\n                            totalPatents: response.orderedPatentUIs.length\r\n                        };\r\n\r\n                    },\r\n                    function(errResponse){\r\n                        console.error('Error: Unable to fetch basket details: ', errResponse);\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        transclude: true,\r\n        templateUrl: function(element, attrs) {\r\n            if ( typeof attrs.templateUrl == 'undefined' ) {\r\n                return '../app/global/html/ngCart/checkout.htm';\r\n            } else {\r\n                return attrs.templateUrl;\r\n            }\r\n        }\r\n    };\r\n}]).name\r\n\r\n\r\n","'use strict';\r\n\r\nimport directives from '../../../app/global/directives/vendors/ngCart.directives.js';\r\n\r\nexport default angular.module('ngCart', [directives])\r\n\r\n    .config([function () {\r\n\r\n    }])\r\n\r\n    .provider('$ngCart', function () {\r\n        this.$get = function () {\r\n        };\r\n    })\r\n\r\n    .run(['$rootScope', 'ngCart','ngCartItem', 'store', function ($rootScope, ngCart, ngCartItem, store) {\r\n\r\n        $rootScope.$on('ngCart:change', function(){\r\n            ngCart.$save();\r\n        });\r\n\r\n        if (angular.isObject(store.get('cart'))) {\r\n            ngCart.$restore(store.get('cart'));\r\n\r\n        } else {\r\n            ngCart.init();\r\n        }\r\n\r\n    }])\r\n\r\n    .service('ngCart', ['$rootScope', '$window', 'ngCartItem', 'store', '$uibModal', '$state', function ($rootScope, $window, ngCartItem, store, $uibModal, $state) {\r\n\r\n        var vm = this;\r\n\r\n        this.init = function(){\r\n            this.$cart = {\r\n                shipping : null,\r\n                taxRate : null,\r\n                tax : null,\r\n                items : []\r\n            };\r\n        };\r\n\r\n        function differentTypes(type) {\r\n            if(type == 'validation') { //if newly added item is a validation\r\n                return vm.getCart().items.some(function(cartItems){ //check that there are no nonvalidaitons orders\r\n                    return cartItems._name !== 'validation';\r\n                })\r\n            }\r\n            if(type !== 'validation') { //if newly added item is a validation\r\n                return vm.getCart().items.some(function(cartItems){ //check that there are no nonvalidaitons orders\r\n                    return cartItems._name == 'validation';\r\n                })\r\n            }            \r\n        }\r\n\r\n        this.addItem = function (id, name, price, quantity, data) {\r\n\r\n            var inCart = this.getItemById(id);\r\n\r\n            if(differentTypes(name)) { \r\n\r\n                var modalInstance = $uibModal.open({\r\n                    templateUrl: 'app/templates/modals/modal.validation-in-basket.tpl.htm',\r\n                    appendTo: undefined,\r\n                    controllerAs: '$ctrl',\r\n                    controller: ['$uibModalInstance', function($uibModalInstance) {\r\n                        this.dismissModal = function () {\r\n                            $uibModalInstance.close();\r\n                        };\r\n\r\n                    }]\r\n                })\r\n\r\n\r\n                return; \r\n            }\r\n\r\n            var modalInstance = $uibModal.open({\r\n                templateUrl: 'app/templates/modals/modal.confirm-add-action.tpl.htm',\r\n                appendTo: undefined,\r\n                controllerAs: '$ctrl',\r\n                controller: ['$uibModalInstance', function($uibModalInstance) {\r\n\r\n                    this.order = {}\r\n                    console.log('price modal: ', price)\r\n                    this.order.price = price;\r\n\r\n                    if(data.p3sServices) {\r\n                        this.order.euroAction = data.p3sServices.map(function(item){\r\n                            if(action.serviceType === 'epct') { action.serviceType = 'Euro-PCT'; }\r\n                            return  item.serviceType;\r\n                        })\r\n                    }\r\n\r\n                    if(data.p3sServicesWithFees) {\r\n                        this.order.euroAction = data.p3sServicesWithFees.map(function(item){\r\n                            if(action.serviceType === 'epct') { action.serviceType = 'Euro-PCT'; }\r\n                            return  item.serviceType;\r\n                        })\r\n                    }\r\n\r\n                    this.order.ep_ApplicationNumber = data.ep_ApplicationNumber;\r\n                    this.order.totalOrderLength = vm.getItems().length;\r\n                    this.order.totalCost = vm.totalCost();\r\n\r\n                    this.continueBasket =  function() {\r\n                        $state.go('basket', {})\r\n                        $uibModalInstance.close();\r\n                    }\r\n\r\n                    this.dismissModal = function () {\r\n                        $uibModalInstance.close();\r\n                    };\r\n\r\n                }]\r\n            })\r\n\r\n            if (typeof inCart === 'object'){\r\n                //Update quantity of an item if it's already in the cart\r\n                inCart.setQuantity(quantity, false);\r\n                $rootScope.$broadcast('ngCart:itemUpdated', inCart);\r\n            } else {\r\n                var newItem = new ngCartItem(id, name, price, quantity, data);\r\n                this.$cart.items.push(newItem);\r\n                $rootScope.$broadcast('ngCart:itemAdded', newItem);\r\n            }\r\n\r\n            $rootScope.$broadcast('ngCart:change', {});\r\n        };\r\n\r\n        this.getItemById = function (itemId) {\r\n            var items = this.getCart().items;\r\n            var build = false;\r\n\r\n            angular.forEach(items, function (item) {\r\n                if  (item.getId() === itemId) {\r\n                    build = item;\r\n                }\r\n            });\r\n            return build;\r\n        };\r\n\r\n        this.setShipping = function(shipping){\r\n            this.$cart.shipping = shipping;\r\n            return this.getShipping();\r\n        };\r\n\r\n        this.getShipping = function(){\r\n            if (this.getCart().items.length == 0) return 0;\r\n            return  this.getCart().shipping;\r\n        };\r\n\r\n        this.setTaxRate = function(taxRate){\r\n            this.$cart.taxRate = +parseFloat(taxRate).toFixed(2);\r\n            return this.getTaxRate();\r\n        };\r\n\r\n        this.getTaxRate = function(){\r\n            return this.$cart.taxRate\r\n        };\r\n\r\n        this.getTax = function(){\r\n            return +parseFloat(((this.getSubTotal()/100) * this.getCart().taxRate )).toFixed(2);\r\n        };\r\n\r\n        this.setCart = function (cart) {\r\n            this.$cart = cart;\r\n            return this.getCart();\r\n        };\r\n\r\n        this.getCart = function(){\r\n            return this.$cart;\r\n        };\r\n\r\n        this.getItems = function(){\r\n            return this.getCart().items;\r\n        };\r\n\r\n        this.getTotalItems = function () {\r\n            var count = 0;\r\n            var items = this.getItems();\r\n            angular.forEach(items, function (item) {\r\n                count += item.getQuantity();\r\n            });\r\n            return count;\r\n        };\r\n\r\n        this.getTotalUniqueItems = function () {\r\n            return this.getCart().items.length;\r\n        };\r\n\r\n        this.getSubTotal = function(){\r\n            var total = 0;\r\n            angular.forEach(this.getCart().items, function (item) {\r\n                total += item.getTotal();\r\n            });\r\n            return +parseFloat(total).toFixed(2);\r\n        };\r\n\r\n        this.totalCost = function () {\r\n            // console.log('this.getShipping()', this.getShipping()) BEEEN REMOVED\r\n            return +parseFloat(this.getSubTotal() + this.getTax()).toFixed(2);\r\n        };\r\n\r\n        this.removeItem = function (index) {\r\n            var item = this.$cart.items.splice(index, 1)[0] || {};\r\n            $rootScope.$broadcast('ngCart:itemRemoved', item);\r\n            $rootScope.$broadcast('ngCart:change', {});\r\n\r\n\r\n        };\r\n\r\n        this.removeItemById = function (id) {\r\n\r\n            var item;\r\n            var cart = this.getCart();\r\n            angular.forEach(cart.items, function (item, index) {\r\n                if(item.getId() === id) {\r\n                    item = cart.items.splice(index, 1)[0] || {};\r\n                }\r\n            });\r\n            this.setCart(cart);\r\n            $rootScope.$broadcast('ngCart:itemRemoved', item);\r\n            $rootScope.$broadcast('ngCart:change', {});\r\n\r\n            var modalInstance = $uibModal.open({\r\n                templateUrl: 'app/templates/modals/modal.confirm-remove-action.tpl.htm',\r\n                appendTo: undefined,\r\n                controllerAs: '$ctrl',\r\n                controller: ['$uibModalInstance', function($uibModalInstance) {\r\n                    this.dismissModal = function () {\r\n                        $uibModalInstance.close();\r\n                    };\r\n\r\n                }]\r\n            })\r\n\r\n        };\r\n\r\n        this.empty = function () {\r\n            \r\n            $rootScope.$broadcast('ngCart:change', {});\r\n            this.$cart.items = [];\r\n            $window.localStorage.removeItem('cart');\r\n        };\r\n        \r\n        this.isEmpty = function () {\r\n            \r\n            return (this.$cart.items.length > 0 ? false : true);\r\n            \r\n        };\r\n\r\n        this.toObject = function() {\r\n\r\n            if (this.getItems().length === 0) return false;\r\n\r\n            var items = [];\r\n            angular.forEach(this.getItems(), function(item){\r\n                items.push (item.toObject());\r\n            });\r\n\r\n            return {\r\n                shipping: this.getShipping(),\r\n                tax: this.getTax(),\r\n                taxRate: this.getTaxRate(),\r\n                subTotal: this.getSubTotal(),\r\n                totalCost: this.totalCost(),\r\n                items:items\r\n            }\r\n        };\r\n\r\n\r\n        this.$restore = function(storedCart){\r\n            var _self = this;\r\n            _self.init();\r\n            _self.$cart.shipping = storedCart.shipping;\r\n            _self.$cart.tax = storedCart.tax;\r\n\r\n            angular.forEach(storedCart.items, function (item) {\r\n                _self.$cart.items.push(new ngCartItem(item._id,  item._name, item._price, item._quantity, item._data));\r\n            });\r\n            this.$save();\r\n        };\r\n\r\n        this.$save = function () {\r\n\r\n            var reduceCart = this.getCart().items.map(function(item){\r\n                if(!item._data.p3sServices) { //logic to prevent error of object loop\r\n                    item._data.p3sServicesWithFees.map(function(prop){                    \r\n                        if(prop.form1200FeeUI) {\r\n                            prop.form1200FeeUI.data = null;\r\n                        }\r\n\r\n                        if(prop.renewalFeeUI) {\r\n                            prop.renewalFeeUI.data = null;\r\n                        }\r\n\r\n                        if(prop.grantFeeUI) {\r\n                            prop.grantFeeUI.data = null;\r\n                        }\r\n\r\n                        if(prop.validationFeeUI) {\r\n                            prop.validationFeeUI.data = null;\r\n                        }                        \r\n                    })\r\n\r\n                } \r\n                return item;\r\n            })\r\n            return store.set('cart', JSON.stringify(reduceCart));\r\n        }\r\n\r\n    }])\r\n\r\n    .factory('ngCartItem', ['$rootScope', '$log', function ($rootScope, $log) {\r\n\r\n        var item = function (id, name, price, quantity, data) {\r\n            this.setId(id);\r\n            this.setName(name);\r\n            this.setPrice(price);\r\n            this.setQuantity(quantity);\r\n            this.setData(data);\r\n        };\r\n\r\n\r\n        item.prototype.setId = function(id){\r\n            if (id)  this._id = id;\r\n            else {\r\n                $log.error('An ID must be provided');\r\n            }\r\n        };\r\n\r\n        item.prototype.getId = function(){\r\n            return this._id;\r\n        };\r\n\r\n\r\n        item.prototype.setName = function(name){\r\n            if (name)  this._name = name;\r\n            else {\r\n                $log.error('A name must be provided');\r\n            }\r\n        };\r\n        item.prototype.getName = function(){\r\n            return this._name;\r\n        };\r\n\r\n        item.prototype.setPrice = function(price){\r\n            var priceFloat = parseFloat(price);\r\n            if (priceFloat) {\r\n                if (priceFloat <= 0) {\r\n                    $log.error('A price must be over 0');\r\n                } else {\r\n                    this._price = (priceFloat);\r\n                }\r\n            } else {\r\n                $log.error('A price must be provided');\r\n            }\r\n        };\r\n        item.prototype.getPrice = function(){\r\n            return this._price;\r\n        };\r\n\r\n\r\n        item.prototype.setQuantity = function(quantity, relative){\r\n\r\n\r\n            var quantityInt = parseInt(quantity);\r\n            if (quantityInt % 1 === 0){\r\n                if (relative === true){\r\n                    this._quantity  += quantityInt;\r\n                } else {\r\n                    this._quantity = quantityInt;\r\n                }\r\n                if (this._quantity < 1) this._quantity = 1;\r\n\r\n            } else {\r\n                this._quantity = 1;\r\n                $log.info('Quantity must be an integer and was defaulted to 1');\r\n            }\r\n\r\n\r\n        };\r\n\r\n        item.prototype.getQuantity = function(){\r\n            return this._quantity;\r\n        };\r\n\r\n        item.prototype.setData = function(data){\r\n            if (data) this._data = data;\r\n        };\r\n\r\n        item.prototype.getData = function(){\r\n            if (this._data) return this._data;\r\n            else $log.info('This item has no data');\r\n        };\r\n\r\n\r\n        item.prototype.getTotal = function(){\r\n            return +parseFloat(this.getQuantity() * this.getPrice()).toFixed(2);\r\n        };\r\n\r\n        item.prototype.toObject = function() {\r\n            return {\r\n                id: this.getId(),\r\n                name: this.getName(),\r\n                price: this.getPrice(),\r\n                quantity: this.getQuantity(),\r\n                data: this.getData(),\r\n                total: this.getTotal()\r\n            }\r\n        };\r\n\r\n        return item;\r\n\r\n    }])\r\n\r\n    .service('store', ['$window', function ($window) {\r\n\r\n        return {\r\n\r\n            get: function (key) {\r\n                if ( $window.localStorage.getItem(key) )  {\r\n                    var cart = angular.fromJson( $window.localStorage.getItem(key) ) ;\r\n                    return JSON.parse(cart);\r\n                }\r\n                return false;\r\n\r\n            },\r\n\r\n\r\n            set: function (key, val) {\r\n\r\n                if (val === undefined) {\r\n                    $window.localStorage.removeItem(key);\r\n                } else {\r\n                    $window.localStorage.setItem( key, angular.toJson(val) );\r\n                }\r\n                return $window.localStorage.getItem(key);\r\n            }\r\n        }\r\n    }])\r\n\r\n    .controller('CartController',['$scope', 'ngCart', function($scope, ngCart) {\r\n\r\n        $scope.ngCart = ngCart;\r\n\r\n    }])\r\n\r\n    .value('version', '1.0.0').name;\r\n","appConfig.$inject = ['$httpProvider', '$urlRouterProvider', '$uibModalProvider', '$compileProvider' ,'$qProvider', 'KeepaliveProvider', 'IdleProvider', 'localStorageServiceProvider', '$mdIconProvider', '$mdPanelProvider'];\r\n\r\nexport default function appConfig($httpProvider, $urlRouterProvider, $uibModalProvider, $compileProvider, $qProvider, KeepaliveProvider, IdleProvider, localStorageServiceProvider, $mdIconProvider, $mdPanelProvider) {\r\n\r\n    if (!$httpProvider.defaults.headers.get) {\r\n        $httpProvider.defaults.headers.get = {};    \r\n    }    \r\n\r\n    window.ppdomain = \"http://localhost:8080/p3sweb/\";\r\n\r\n    $httpProvider.defaults.headers.get['If-Modified-Since'] = 'Mon, 26 Jul 1997 05:00:00 GMT';\r\n\r\n    $mdIconProvider\r\n        .defaultFontSet('FontAwesome')\r\n        .fontSet('fa', 'FontAwesome');\r\n\r\n\r\n    IdleProvider.idle(500);\r\n    IdleProvider.timeout(30);\r\n    KeepaliveProvider.interval(20);\r\n\r\n\r\n\r\n    $qProvider.errorOnUnhandledRejections(false);\r\n\r\n    localStorageServiceProvider\r\n        .setStorageType('sessionStorage')\r\n        .setDefaultToCookie(false)\r\n        .setNotify(true, true)\r\n\r\n}","import angular from 'angular';\r\n\r\nexport default angular.module('services.user-service', []).factory('userService', userService).name\r\n\r\nuserService.$inject = ['$http', '$q']; \r\n\r\nfunction userService($http, $q) {\r\n\r\n    var REST_SERVICE_URI = ppdomain+'rest-user/'; //variable declared before function are initiated\r\n\r\n    var factory = {\r\n        fetchUser: fetchUser,\r\n        updateUser: updateUser,\r\n        listUsers: listUsers\r\n\r\n    };\r\n\r\n    return factory;\r\n\r\n    function fetchUser() {\r\n    \r\n        var deferred = $q.defer();\r\n         $http.get(REST_SERVICE_URI)\r\n            .then(\r\n            function (response) {\r\n                deferred.resolve(response.data);\r\n            },\r\n            function(errResponse){\r\n                console.error('Error while fetching user');\r\n                deferred.reject(errResponse);\r\n            }\r\n        );\r\n\r\n        return deferred.promise;\r\n    };\r\n\r\n    var config = {headers:  {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n        }\r\n    };\r\n\r\n    function updateUser(user) {\r\n\r\n        var deferred = $q.defer();\r\n        $http.put(REST_SERVICE_URI, user, config)\r\n            .then(\r\n            function (response) {\r\n                deferred.resolve(response.data);\r\n            },\r\n            function(errResponse){\r\n                deferred.reject(errResponse);\r\n            }\r\n        );\r\n        return deferred.promise;\r\n    };\r\n\r\n    function listUsers() {\r\n\r\n        var deferred = $q.defer();\r\n\r\n        $http.get(ppdomain+'rest-users/')\r\n            .then(\r\n            function (response) {\r\n                deferred.resolve(response.data);\r\n            },\r\n            function(errResponse){\r\n                deferred.reject(errResponse);\r\n            }\r\n        );\r\n        return deferred.promise;\r\n    };\r\n\r\n}\r\n\r\n","export default angular.module('services.fx-service', []).factory('fxService', fxService).name;\r\n\r\nfxService.$inject = ['$q', '$http'];\r\n\r\nfunction fxService($q, $http) {\r\n\t\r\n\tvar factory = {\r\n\t\tfetchFxWeek: fetchFxWeek,\r\n\t\tfetchFxMonth: fetchFxMonth,\r\n\t\tfetchFx: fetchFx\r\n\t};\r\n\r\n\treturn factory;\t\r\n\r\n\tfunction fetchFx() {\r\n\r\n\t\tvar deferred = $q.defer()\r\n\r\n\t\t$http.get(ppdomain+'rest-fxrate/')\r\n\t\t.then(\r\n\t\t\tfunction(response){\r\n\t\t\t\tdeferred.resolve(response.data)\r\n\t\t\t},\r\n\t\t\tfunction(errResponse){\r\n\t\t\t\tdeferred.reject(errResponse.data)\r\n\t\t\t}\r\n\t\t)\r\n\t\treturn deferred.promise;\r\n\t}\r\n\r\n\tfunction fetchFxWeek() {\r\n\r\n\t\tvar deferred = $q.defer()\r\n\r\n\t\t$http.get(ppdomain+'rest-fxrates/week')\r\n\t\t.then(\r\n\t\t\tfunction(response){\r\n\t\t\t\tdeferred.resolve(response.data)\r\n\t\t\t},\r\n\t\t\tfunction(errResponse){\r\n\t\t\t\tdeferred.reject(errResponse.data)\r\n\t\t\t}\r\n\t\t)\r\n\t\treturn deferred.promise;\r\n\t}\r\n\r\n\r\n\tfunction fetchFxMonth() {\r\n\r\n\t\tvar deferred = $q.defer()\r\n\r\n\t\t$http.get(ppdomain+'rest-fxrates/month')\r\n\t\t.then(\r\n\t\t\tfunction(response){\r\n\t\t\t\tdeferred.resolve(response.data)\r\n\t\t\t},\r\n\t\t\tfunction(errResponse){\r\n\t\t\t\tdeferred.reject(errResponse.data)\r\n\t\t\t}\r\n\t\t)\r\n\t\treturn deferred.promise;\r\n\t}\r\n}","import fxService from './app.fx.serv.js';\r\n\r\nexport default angular.module('services.core-service', [fxService]).factory('coreService', coreService).name;\r\n\r\ncoreService.$inject = ['$q', '$timeout', 'fxService', '$http'];\r\n\r\nfunction coreService($q, $timeout, fxService, $http) {\r\n\r\n    var REST_SERVICE_URI = ppdomain+'partner-details/'; \r\n\r\n    var factory = {\r\n        getMessages: getMessages,\r\n        supressMessages: supressMessages,        \r\n        ppContact: ppContact,\r\n        openAppGuide: openAppGuide,\r\n        appGuideOpen: false\r\n    };\r\n\r\n    function ppContact() {\r\n        var deferred = $q.defer();\r\n        $http.get(REST_SERVICE_URI)\r\n        .then(\r\n            function(response){\r\n                deferred.resolve(response.data)\r\n            },\r\n            function(errResponse){\r\n                deferred.resolve(errResponse)\r\n            }\r\n        );\r\n        return deferred.promise;\r\n    }\r\n\r\n    function getMessages() {\r\n        var deferred = $q.defer();\r\n        $http.get(ppdomain+'login-messages/')\r\n        .then(\r\n            function (response) {\r\n                deferred.resolve(response.data);\r\n            },\r\n            function(errResponse){\r\n                console.error('Error while fetching messages');\r\n                deferred.reject(errResponse);\r\n            }\r\n        );\r\n\r\n        return deferred.promise;\r\n    };\r\n\r\n\r\n\r\n    function supressMessages(id) {\r\n        var deferred = $q.defer();\r\n        $http.post(ppdomain+'suppress-login-messages/' , id)\r\n        .then(\r\n            function(response){\r\n                deferred.resolve(response);\r\n            }, \r\n            function(errResponse){\r\n                deferred.reject(errResponse);\r\n            }\r\n        );\r\n        return deferred.promise;\r\n    };    \r\n\r\n    function openAppGuide() {\r\n        return factory.appGuideOpen = !factory.appGuideOpen;\r\n    }\r\n\r\n    return factory;\r\n\r\n}\r\n","export default angular.module('services.organise-colour-service', []).factory('OrganiseColourService', OrganiseColourService).name\r\n\r\nOrganiseColourService.$inject = ['$http', '$q'];\r\n\r\nfunction OrganiseColourService($http, $q) {\r\n\r\n    var factory = {\r\n        getNextColour:  getNextColour,\r\n        getCurrColour:  getCurrColour\r\n\r\n    }\r\n\r\n    function getCurrColour(colour, item) {\r\n\r\n        var color;\r\n\r\n        if(item === 'text') {\r\n            switch(colour) {\r\n                case 'Green':\r\n                    color =  'txt-phase-green'\r\n                break;\r\n                case 'Amber':\r\n                    color =  'txt-phase-amber'\r\n                break;\r\n                case 'Red':\r\n                    color = 'txt-phase-red'\r\n                break;\r\n                case 'Blue':\r\n                    color =  'txt-phase-blue'\r\n                break;\r\n                case 'Black':\r\n                    color = 'txt-phase-black'\r\n            } //switch end\r\n\r\n        }\r\n\r\n        if(item === 'bg') {\r\n            switch(colour) {\r\n                case 'Green':\r\n                    color =  'bg-phase-green'\r\n                break;\r\n                case 'Amber':\r\n                    color =  'bg-phase-amber'\r\n                break;\r\n                case 'Red':\r\n                    color = 'bg-phase-red'\r\n                break;\r\n                case 'Blue':\r\n                    color =  'bg-phase-blue'\r\n                break;\r\n                case 'Black':\r\n                    color = 'bg-phase-black'\r\n            } //switch end\r\n           \r\n        }\r\n\r\n        return color\r\n    }\r\n\r\n    function getNextColour(colour, item) {\r\n        var color;\r\n\r\n        if(item === 'bg') {\r\n            switch(colour) {\r\n                case 'Green':\r\n                    color =  'bg-phase-amber'\r\n                break;\r\n                case 'Amber':\r\n                    color =  'bg-phase-red'\r\n                break;\r\n                case 'Red':\r\n                    color = 'bg-phase-blue'\r\n                break;\r\n                case 'Blue':\r\n                    color =  'bg-phase-black'\r\n                break;\r\n                case 'Black':\r\n                    color = 'bg-white'\r\n            } //switch end\r\n           \r\n        }\r\n         return color\r\n    }    \r\n\r\n    return factory;\r\n\r\n}","import OrganiseColourService from '../../../global/services/app.organiseColour.serv.js'\r\n\r\nexport default angular.module('services.patents-rest-service', [OrganiseColourService]).factory('PatentsRestService', PatentsRestService).name\r\n\r\nPatentsRestService.$inject = ['$http', '$q', 'OrganiseColourService'];\r\n\r\nfunction PatentsRestService($http, $q, OrganiseColourService) {\r\n\r\n    var REST_SERVICE_URI = ppdomain+'rest-patents/'; \r\n\r\n    var factory = {\r\n        fetchAllPatents: fetchAllPatents,\r\n        updatePatent: updatePatent,\r\n        savePatent: savePatent,\r\n        deletePatent: deletePatent,\r\n        fetchPatentItem: fetchPatentItem\r\n    };\r\n\r\n    return factory;\r\n\r\n    var actionsArray = [];\r\n\r\n    function fetchAllPatents() {\r\n        console.log('get patent')\r\n        var deferred = $q.defer();\r\n         $http.get(ppdomain+'rest-patents-portfolio/')\r\n            .then(\r\n            function (response) {\r\n\r\n                var generateId = function(service) {\r\n                    var number = '';\r\n                    for (var i = 0; i < service.length; i++) {\r\n                        number += service.charCodeAt(i).toString();\r\n                    }\r\n                    return parseInt(number.substring(2, 9)); //skip decimal\r\n                }\r\n\r\n                response.data.map(function(patent){\r\n                    return patent.p3sServices.map(function(property){\r\n                        property.actionID = patent.patentID + generateId(property.serviceType); //generate unique id based on patent id and service type (get char codes)\r\n                        if(property.currentStageColour) {\r\n                            property.cssCurrent = OrganiseColourService.getCurrColour(property.currentStageColour, 'text')\r\n                        }\r\n                        if(property.nextStageColour) {\r\n                            property.cssNext = OrganiseColourService.getCurrColour(property.nextStageColour, 'text')\r\n                        }\r\n                        return property;\r\n                    })\r\n                })\r\n\r\n                actionsArray = response.data.map(function(patent){\r\n                    return patent.p3sServices.map(function(action){\r\n                        var obj = {};\r\n                        obj.patentID = patent.patentID;\r\n                        obj.serviceType = action.serviceType;\r\n                        obj.actionID = action.actionID\r\n                        return obj;\r\n                    })\r\n                })\r\n\r\n                deferred.resolve(response.data);\r\n\r\n            },\r\n            function(errResponse){\r\n                console.error('Error: Unable to fetch all patents. Error Response:', errResponse)\r\n                deferred.reject(errResponse);\r\n            }\r\n        );\r\n            console.log('return')\r\n        return deferred.promise;\r\n    };\r\n\r\n    function fetchPatentItem(id) {\r\n        var deferred = $q.defer();\r\n        $http.get(ppdomain+'rest-patent/'+ id)\r\n            .then(\r\n            function (response) {\r\n\r\n                if(actionsArray === undefined || typeof actionsArray === 'undefined') {\r\n                    deferred.reject(response.data);\r\n                }\r\n                if(actionsArray.length) {\r\n                     \r\n                    var merged = [].concat.apply([], actionsArray); //dont use flat() method because of IE. This is alternative\r\n                    response.data.p3sServicesWithFees.map(function(property){\r\n                        var item = merged.filter(function(action){\r\n                            return action.serviceType === property.serviceType && id == action.patentID;\r\n                        }).map(function(filtered){\r\n                            return filtered.actionID\r\n                        })\r\n\r\n                        property.actionID = item[0];\r\n\r\n                        if(property.currentStageColour) {\r\n                            property.cssCurrent = OrganiseColourService.getCurrColour(property.currentStageColour, 'text');\r\n                        }\r\n                        if(property.nextStageColour) {\r\n                            property.cssNext = OrganiseColourService.getCurrColour(property.nextStageColour, 'text');\r\n                        }\r\n                        return property;\r\n                    \r\n                    })\r\n\r\n                     deferred.resolve(response.data);\r\n                }\r\n\r\n               \r\n            },\r\n            function(errResponse){\r\n                console.error('Error: Unable to fetch patent. Error Response:', errResponse)\r\n                deferred.reject(errResponse);\r\n            }\r\n        );\r\n\r\n        return deferred.promise;\r\n    };    \r\n\r\n    function updatePatent(patent, id) {\r\n        //quick fix for resolving issues with converting circule structure to JSON(loop) \r\n        patent.p3sServicesWithFees.map(function(action){\r\n            action.grantFeeUI = null;\r\n            action.validationFeeUI = null;\r\n        })\r\n   \r\n        var deferred = $q.defer();\r\n        $http.put(REST_SERVICE_URI+id, patent)\r\n            .then(\r\n            function (response) {\r\n                deferred.resolve(response.data);\r\n            },\r\n            function(errResponse){\r\n                console.error('Error: Unable to update patent. Error Response:', errResponse)\r\n                deferred.reject(errResponse);\r\n            }\r\n        );\r\n        return deferred.promise;\r\n    };\r\n\r\n    function savePatent(patent) {\r\n        var deferred= $q.defer();\r\n        $http.post(ppdomain+'rest-patents/', patent)\r\n            .then(function(response){\r\n                deferred.resolve(response.data);\r\n            }, function(errResponse) {\r\n                console.error('Error: Unable to save patent. Error Response:', errResponse)\r\n                deferred.reject(errResponse);\r\n            }\r\n        );\r\n        return deferred.promise;\r\n    };\r\n\r\n    function deletePatent(id) {\r\n        var deferred = $q.defer();\r\n        $http.delete(REST_SERVICE_URI+id)\r\n            .then(\r\n            function (response) {\r\n                deferred.resolve(response.data);\r\n            },\r\n            function(errResponse){\r\n                console.error('Error: Unable to delete patent. Error Response:', errResponse)\r\n                deferred.reject(errResponse);\r\n            }\r\n        );\r\n        return deferred.promise;\r\n    };\r\n\r\n\r\n}\r\n\r\n","import coreService from '../services/app.core.serv.js';\r\nimport PatentsRestService from '../../features/portfolio/services/patents.patentsRest.serv.js';\r\n\r\nexport default angular.module('ppApp.core', [coreService, PatentsRestService]).controller('coreCtrl', coreCtrl).name\r\n\r\ncoreCtrl.$inject = ['$uibModal', '$scope', 'coreService', 'localStorageService', '$timeout', 'PatentsRestService', 'Idle', 'Keepalive', '$http', '$cookies'];\r\n\r\nfunction coreCtrl($uibModal, $scope, coreService, localStorageService, $timeout, PatentsRestService, Idle, Keepalive, $http, $cookies) {\r\n\r\n\tvar vm = this;\r\n\r\n\tvar urgentResponse = [];\r\n\tvar systemResponse = [];\r\n\tvar patentsFound = true;\r\n\tvar userTimedOut = false;\r\n\tvar messageArr = [];\r\n\r\n\t$scope.$on('Keepalive', function() {\r\n\t\t$http.get(ppdomain+'keep-session-alive/');\r\n\t});\r\n\r\n\t$scope.$on('IdleStart', function() {\r\n\t\t\r\n\t  \tcloseModals();\r\n\r\n\t  \t$scope.warning = $uibModal.open({\r\n\t\t  \ttemplateUrl: 'app/templates/modals/modal.idle.tpl.htm',\r\n\t  \t\twindowClass: 'modal-danger',\r\n\t\t\tappendTo: undefined\r\n\t    });\r\n\t});\r\n\r\n  \t$scope.$on('IdleEnd', function() {\r\n\t  \tcloseModals();\r\n\t});\r\n\r\n\t$scope.$on('IdleTimeout', function() {\r\n\r\n\t  \tcloseModals();\r\n\r\n     \tngCart.empty();\r\n    \t$http.post('http://localhost:8080/p3sweb/resources/j_spring_security_logout')\r\n      \t.then(\r\n      \t\tfunction(response){\r\n      \t\t  \twindow.location.reload('http://localhost:8080/p3sweb/login');\r\n      \t\t},\r\n          \tfunction(errResponse) {\r\n            \tconsole.log(errResponse)\r\n          \t}    \r\n\t\t)    \t\r\n      \t\r\n\t});\r\n\r\n    function init() {\r\n\r\n\r\n        PatentsRestService.fetchAllPatents()\r\n        .then(\r\n            function(response){\r\n                if(response.length === 0) {\r\n                    welcomeMessageModal();\r\n                }\r\n            },\r\n            function(errResponse){\r\n                console.log(errResponse)\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    init();\r\n\r\n\tfunction welcomeMessageModal() {\r\n\t\tvar modalInstance = $uibModal.open({\r\n\t\t\ttemplateUrl: 'app/templates/modals/modal.welcome-message.tpl.htm',\r\n\t\t\tscope: $scope,\r\n\t\t\tcontrollerAs:'$ctrl',\r\n\t\t\tcontroller: ['$uibModalInstance', function($uibModalInstance) {\r\n\r\n\t\t \t  \tthis.dismissModal = function () {\r\n\t\t\t    \t$uibModalInstance.close();\r\n\t\t\t  \t};\r\n\t\t\t}]\r\n\t\t});\r\n \t}\r\n\r\n\tfunction closeModals() {\r\n\t    if ($scope.warning) {\r\n\t      \t$scope.warning.close();\r\n\t      \t$scope.warning = null;\r\n\t    }\r\n\r\n\t    if ($scope.timedout) {\r\n\t      $scope.timedout.close();\r\n\t      $scope.timedout = null;\r\n\t    }\r\n\t}\r\n\r\n}","import angular from 'angular';\r\n\r\nexport default angular.module('services.DashboardService', []).factory('DashboardService', DashboardService).name;\r\n\r\nDashboardService.$inject = ['$http', '$q', 'PatentsRestService']\r\n\r\nfunction DashboardService($http, $q, PatentsRestService) {\r\n\r\n    var factory = {\r\n        sortPatents: sortPatents,\r\n        getPatents: {},\r\n    };\r\n\r\n    return factory;\r\n\r\n\r\n\r\n    function sortPatents(patents) {\r\n\r\n        var obj = {\r\n            epct: {           \r\n                Green: [],\r\n                Amber: [],\r\n                Red: [],\r\n                Grey: []\r\n            },\r\n            renewal: {           \r\n                Green: [],\r\n                Amber: [],\r\n                Red: [],\r\n                Blue: [],\r\n                Black: [],\r\n                Grey: []\r\n            },\r\n            grant: {           \r\n                Green: [],\r\n                Amber: [],\r\n                Red: [],\r\n                Grey: []\r\n            },\r\n            validation: {\r\n                Green: [],\r\n                Grey: []\r\n            }\r\n        }\r\n\r\n        var newPatents = patents.map(function(patent){\r\n            return patent.p3sServices.map(function(serv){\r\n                return {                \r\n                    patentID: patent.patentID,\r\n                    ep_ApplicationNumber: patent.ep_ApplicationNumber,\r\n                    clientRef: patent.clientRef,\r\n                    p3sServices: [serv]\r\n                }\r\n            })\r\n        })\r\n\r\n\r\n        var result = [].concat.apply([], newPatents);\r\n\r\n        result.forEach(function(patent){\r\n            patent.p3sServices.forEach(function(action, idx){\r\n                var string = action.currentStageColour.toLowerCase();\r\n                var capitalized = string.charAt(0).toUpperCase() + string.slice(1);\r\n\r\n                if(action.serviceType == 'validation') {\r\n                    obj.validation.Green.push(patent); //handle validation manual processing\r\n                }\r\n                if(action.serviceType !== 'postgrant' && action.serviceType !== 'validation') {\r\n                    obj[action.serviceType][capitalized].push(patent);\r\n                }\r\n                \r\n            })\r\n        })\r\n        \r\n        factory.getPatents = obj;\r\n    }\r\n    \r\n\r\n};","export default angular.module('services.calculate', []).factory('CalculateService', CalculateService).name;\r\n\r\nCalculateService.$inject = ['$q', '$timeout'];\r\n\r\nfunction CalculateService($q, $timeout) {\r\n\r\n\tvar factory = {\r\n\t\tcalculateHours: calculateHours,\r\n\t\trecentActivity: recentActivity\r\n\t};\r\n\r\n\treturn factory;\r\n\r\n\tfunction calculateHours(costband, response) {\r\n\r\n\t\tvar date = new Date().getTime();\r\n\t\tvar hours = '';\r\n\r\n        switch(costband) {\r\n            case 'Green':\r\n            \thours =  date - response.greenStartDate;\r\n\t\t\tbreak;\r\n\t\t\tcase 'Amber':\r\n\t\t\t\thours =  date - response.amberStartDate;\r\n\t\t\tbreak;\r\n\t\t\tcase 'Red':\r\n\t\t\t\thours =  date - response.redStartDate;\r\n\t\t\tbreak;\r\n\t\t\tcase 'Blue':\r\n\t\t\t\thours =  date - response.blueStartDate;\r\n\t\t\tbreak;\r\n\t\t\tcase 'Black':\r\n\t\t\t\tif(data.renewalStatus == 'Show price') {\r\n\t\t\t\t\thours =  date - response.blackStartDate;\r\n\t\t\t\t} \t\t\t\t\t\t\t\r\n\t\t} //switch end\r\n\r\n\t\treturn hours;\t\t\r\n\t}\r\n\r\n\tfunction recentActivity(millisec) {\r\n\t\t\r\n        var seconds = (millisec / 1000).toFixed(0);\r\n        var minutes = Math.floor(seconds / 60);\r\n        var hours = \"\";\r\n\r\n        if (minutes > 59) {\r\n            hours = Math.floor(minutes / 60);\r\n            hours = (hours >= 10) ? hours : \"0\" + hours;\r\n            minutes = minutes - (hours * 60);\r\n            minutes = (minutes >= 10) ? minutes : \"0\" + minutes;\r\n        }\r\n\r\n        seconds = Math.floor(seconds % 60);\r\n        seconds = (seconds >= 10) ? seconds : \"0\" + seconds;\r\n\r\n        if (hours !== '' && hours < 48) { //if within 48 hours\r\n            return true;\r\n        }\r\n\r\n    } //recentActivity end\r\n\r\n}","export default angular.module('services.cost-analysis', []).factory('CostAnalysisService', CostAnalysisService).name;\r\n\r\nCostAnalysisService.$inject = ['$http', '$q'];\r\n\r\nfunction CostAnalysisService($http, $q) {\r\n\r\n    var factory = {\r\n        fetchCa: fetchCa\r\n    }\r\n\r\n    function fetchCa(patentID, services) {\r\n\r\n        var array = [];\r\n        var deferred = $q.defer();\r\n\r\n        var obj = {};\r\n\r\n        services.forEach(function(data){ //for multiple services for single patent\r\n            if(data.saleType == 'Not In Progress') { return; }\r\n            obj[data.serviceType] = data; \r\n            if(data.serviceType == 'epct') {      \r\n                array.push($http.get(ppdomain+'rest-form1200-cost-analysis/'+patentID))\r\n\r\n            }\r\n            if(data.serviceType == 'renewal') {\r\n                array.push($http.get(ppdomain+'rest-cost-analysis/'+patentID))\r\n            }\r\n            if(data.serviceType == 'grant') {\r\n                array.push($http.get(ppdomain+'rest-grant-cost-analysis/'+patentID))\r\n            }            \r\n        })\r\n\r\n        $q.all(array)\r\n        .then(\r\n            function(response){\r\n                response.map(function(action, idx){\r\n                    action.info = Object.keys(obj)[idx]\r\n                    return action;\r\n                })\r\n                deferred.resolve(response);\r\n            },\r\n            function(errResponse){\r\n                console.error('Error: Unable to fetch cost analysis')\r\n                deferred.reject(errResponse)\r\n            }\r\n        )\r\n\r\n        return deferred.promise;\r\n\r\n        // return \r\n    }\r\n\r\n    return factory;\r\n\r\n}","export default angular.module('services.TransactionService', []).factory('TransactionService', TransactionService).name;\r\n\r\nTransactionService.$inject = ['$http', '$q'];\r\n\r\nfunction TransactionService($http, $q) {\r\n\r\n\tvar REST_SERVICE_URI_CURRENT = ppdomain+'rest-current-transactions/';\r\n\tvar REST_SERVICE_URI_HISTORY = ppdomain+'rest-historic-transactions/';\r\n\r\n\tvar factory = {\r\n\t\tfetchCurrentTransactions:fetchCurrentTransactions,\r\n\t\tfetchTransactionHistory: fetchTransactionHistory,\r\n\t\tfetchAllTransactions: fetchAllTransactions,\r\n\t\tactionProgress: actionProgress\r\n\t};\r\n\r\n\treturn factory;\r\n\r\n  \tfunction transactionProgress(val, status) { //assigned to scope for child scope to access\r\n\t    var transStatusArray = ['Initiated', 'Awaiting Funds', 'Funds Received', 'Funds Sent', 'EPO Received', 'EPO Instructed', 'Completed'];\r\n\t    var transStatusValidationArray = ['Initiated', 'Awaiting Funds', 'Processing Funds', 'Processing', 'Completed'];\r\n  \t\tvar arrayType;\r\n  \t\tif(val == true) {\r\n  \t\t\tarrayType = transStatusValidationArray;\r\n  \t\t} else {\r\n  \t\t\tarrayType = transStatusArray;\r\n  \t\t}\r\n\t\tvar index = arrayType.indexOf(status);\r\n\t\tvar length = arrayType.length;\r\n\t\tvar percentage = Math.round(((index+1) * 100) / length);\r\n\t\treturn percentage;\r\n  \t}\r\n\r\n\r\n\tfunction fetchAllTransactions() {\r\n\r\n\t\tvar deferred = $q.defer();\r\n\r\n\t\t$q.all([this.fetchCurrentTransactions(), this.fetchTransactionHistory()])\r\n\t\t.then(\r\n\t\t\tfunction(response){\r\n\t\t\t\tvar concat = response[0].concat(response[1]).map(function(data){\t\r\n\r\n\t\t\t\t\tdata.transTypeUI = data.historic === true ? 'Historic' : 'Current';\r\n\t                var isValidation = data.serviceUIs.some(function(item){\r\n\t                    return item.newType == 'Validation' ? true : false;\r\n\t                })\r\n\r\n\t                if(isValidation === true) {\r\n\t                    if(data.latestTransStatus === 'Funds Sent') {\r\n\t                        data.latestTransStatus = 'Processing Funds';\r\n\t                    }\r\n\t                    if(data.latestTransStatus === 'EPO Received' || data.latestTransStatus === 'Associates Instructed') {\r\n\t                        data.latestTransStatus = 'Processing';\r\n\t                    }\r\n\t                }\r\n\t\t\t\t\tdata.actionProgress = transactionProgress(isValidation, data.latestTransStatus);\r\n\r\n\t\t\t\t\tdata.serviceUIs.map(function(o, i){ \r\n\t\t\t\t\t\tif(o.patentUI !== undefined) {\t\t\t\t\r\n\t\t\t\t\t\t\to.appAndType = o.patentUI.ep_ApplicationNumber + ' (' + o.newType +')';\t\r\n\t\t\t\t\t\t\tif(o.patentUI.clientRef == '') {\r\n\t\t\t\t\t\t\t\to.patentUI.clientRef = '[No Client Reference Provided]'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\to.patentUI = {};\r\n\t\t\t\t\t\t\to.patentUI.clientRef = o.clientRef;\r\n\t\t\t\t\t\t\to.appAndType = o.patentApplicationNumber + ' (' + o.newType +')';\t\r\n\t\t\t\t\t\t\tif(o.patentUI.clientRef == '') {\r\n\t\t\t\t\t\t\t\to.patentUI.clientRef = '[No Client Reference Provided]';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn o;\r\n\t\t\t\t\t})\r\n\t\t\t\t\treturn data;\t\t\r\n\t\t\t\t})\r\n\t\t\t\tdeferred.resolve(concat);\r\n\t\t\t},\r\n\t\t\tfunction(errResponse) {\r\n\t\t\t\tconsole.log('Error fetching all transactions. Error: ', errResponse);\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\treturn deferred.promise;\r\n\r\n\t}\r\n\r\n\r\n\tfunction fetchCurrentTransactions() {\r\n\r\n\t\tvar deferred = $q.defer();\r\n\t\t$http.get(REST_SERVICE_URI_CURRENT)\r\n\t\t.then(\r\n\t\t\tfunction(response){\r\n                response.data.map(function(el){\r\n                \tif(el.renewalUIs.length) {\r\n\t                \tel.renewalUIs.map(function(o){ \r\n\t                \t\to.newType = 'Renewal';\r\n\t                \t})\r\n                \t}\r\n                \tif(el.grantUIs.length) {\r\n\t                \tel.grantUIs.map(function(o){ \r\n\t                \t\to.newType = 'Grant';\r\n\t                \t})\r\n                \t}\r\n                \tif(el.epctUIs.length) {\r\n\t                \tel.epctUIs.map(function(o){ \r\n\t                \t\to.newType = 'Euro-PCT';\r\n\t                \t})\r\n                \t}\r\n                \tif(el.validationUIs.length) {\r\n\t                \tel.validationUIs.map(function(o){ \r\n\t                \t\to.newType = 'Validation';\r\n\t                \t})\r\n                \t}                \t\r\n                    el.serviceUIs = [];\r\n                    el.serviceUIs = el.serviceUIs.concat(el.renewalUIs, el.grantUIs, el.epctUIs, el.validationUIs)\r\n                    return el;\r\n   \r\n                })\r\n\t\t\t\tdeferred.resolve(response.data);\r\n\t\t\t},\r\n\t\t\tfunction(errResponse){\r\n\t\t\t\tconsole.error('Error: unable to fetch current transactions: Error msg: ', errResponse)\r\n\t\t\t\tdeferred.reject(errResponse);\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\treturn deferred.promise;\r\n\r\n\t};\r\n\r\n\tfunction fetchTransactionHistory() {\r\n\r\n\t\tvar deferred = $q.defer();\r\n\t\t$http.get(REST_SERVICE_URI_HISTORY)\r\n\t\t.then(\r\n\t\t\tfunction(response){\r\n                response.data.map(function(el){\r\n                \tif(el.renewalUIs.length) {\r\n\t                \tel.renewalUIs.map(function(o){ \r\n\t                \t\to.newType = 'Renewal';\r\n\t                \t})\r\n                \t}\r\n                \tif(el.grantUIs.length) {\r\n\t                \tel.grantUIs.map(function(o){ \r\n\t                \t\to.newType = 'Grant';\r\n\t                \t})\r\n                \t}\r\n                \tif(el.epctUIs.length) {\r\n\t                \tel.epctUIs.map(function(o){ \r\n\t                \t\to.newType = 'Euro-PCT';\r\n\t                \t})\r\n                \t}\r\n                \tif(el.validationUIs.length) {\r\n\t                \tel.validationUIs.map(function(o){ \r\n\t                \t\to.newType = 'Validation';\r\n\t                \t})\r\n                \t}                        \t  \t\r\n                    el.serviceUIs = [];\r\n                    el.serviceUIs = el.serviceUIs.concat(el.renewalUIs, el.grantUIs, el.epctUIs, el.validationUIs)\r\n                    return el;\r\n   \r\n                })\r\n                deferred.resolve(response.data);\r\n\t\t\t},\r\n\t\t\tfunction(errResponse){\r\n\t\t\t\tconsole.error('Error: unable to fetch transacrtion history: Error msg: ', errResponse)\r\n\t\t\t\tdeferred.reject(errResponse);\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\treturn deferred.promise;\r\n\r\n\t};\t\r\n\r\n\tfunction actionProgress(currTransStatus) {\r\n\r\n\t\tvar progress = 0;\r\n\t\t\r\n\t\tswitch(currTransStatus) {\r\n    \t\tcase 'Initiated':\r\n    \t\t\tprogress = 14;\r\n    \t\tbreak;\r\n    \t\tcase 'Awaiting Funds':\r\n    \t\t\tprogress = 28;\r\n\t\t\tbreak;\r\n    \t\tcase 'Funds Received':\r\n    \t\t\tprogress = 42;\r\n\t\t\tbreak;\t\r\n    \t\tcase 'Funds Sent':\r\n    \t\t\tprogress = 56;\r\n\t\t\tbreak;\t\r\n    \t\tcase 'EPO Received':\r\n    \t\t\tprogress = 70;\r\n\t\t\tbreak;\t\r\n    \t\tcase 'EPO Instructed':\r\n    \t\t\tprogress = 84;\r\n\t\t\tbreak;\r\n    \t\tcase 'Completed':\r\n    \t\t\tprogress = 100;\r\n\t\t\tbreak;\t       \t\t\t\t\t    \t\t\t    \t\t\t    \t\t\t\r\n\r\n\t\t}\r\n\r\n\t\treturn progress;\r\n\r\n\t};\r\n\r\n}","DashboardController.$inject = ['$state',  '$timeout', '$scope', 'DashboardService', 'PatentsRestService'];\r\n\r\nexport default function DashboardController($state, $timeout, $scope,  DashboardService, PatentsRestService) {\r\n\r\n    var vm = this;\r\n\r\n    $scope.formalityData = {}\r\n    $scope.dashboardLoaded = false;\r\n    $scope.graphsLoaded = false;\r\n     console.log('init')\r\n    $scope.promise = PatentsRestService.fetchAllPatents();\r\n     console.log('next init')\r\n    $scope.promise\r\n    .then(function(response) {\r\n        console.log('first response')\r\n        if ($scope.$$destroyed) throw \"Scope destroyed\";\r\n        return response;\r\n    })\r\n    .then(\r\n        function(response){\r\n            DashboardService.sortPatents(response);\r\n            $scope.formalityData = DashboardService.getPatents;\r\n            if($state.current.name === 'dashboard') {\r\n                console.log('whattt')\r\n                $state.go('dashboard.content', {patents: response}, {reload: false});\r\n            }\r\n        }\r\n    )\r\n\r\n}","ActionsAvailableController.$inject = ['$scope', '$timeout']\r\n\r\nexport default function ActionsAvailableController($scope, $timeout) {\r\n\r\n\tvar vm = this;\r\n\r\n\t$scope.filter = {};\r\n\r\n    function noSubFilter(obj) {\r\n        for (var key in obj) {\r\n            if (obj[key]) { //if one of the $scope.filter ($scope.filter) properties evaluates to true (is selected) return false \r\n                return false;\r\n            }\r\n        }\r\n        return true; //if no subfilters return true. This will result in all filtered data items being returned a true value\r\n    }\r\n\r\n    function checkArray(obj, service, prop) {\r\n        return service.some(function(item) { //if filter[curretStageColour][red]\r\n            return obj[prop][item[prop]] === true;\r\n        })\r\n    }\r\n\r\n\r\n\t$scope.$parent.promise\r\n\t.then(\r\n\t\tfunction(response){\r\n\t\t\tconsole.log('actions available')\r\n\t        response = response.map(function(patent){\r\n\t            return patent.p3sServices.map(function(serv){\r\n\t                return {                \r\n\t                    patentID: patent.patentID,\r\n\t                    ep_ApplicationNumber: patent.ep_ApplicationNumber,\r\n\t                    clientRef: patent.clientRef,\r\n\t                    p3sServices: [serv]\r\n\t                }\r\n\t            })\r\n\t        })\r\n\r\n\t        var result = [].concat.apply([], response);\r\n\r\n\t\t\t$scope.availableActions = result.filter(function(item){\r\n\t\t\t\treturn item.p3sServices[0].saleType == 'Online' || item.p3sServices[0].saleType == 'Offline';\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tvm.chipOptions = [];\r\n\t\t\tvm.showFilter = showFilter;\r\n\r\n\t\t    function showFilter(mdMenu, $event) {\r\n\t\t \r\n\t\t        mdMenu.open($event)\r\n\t\t        $scope.categories = ['saleType', 'currentStageColour', 'nextStageColour', 'serviceType'];     \r\n\r\n\t\t        //return items to filter panel\r\n\t\t        $scope.getItems = function (obj, array) { //obj is cat currentStageColour or serviceType\r\n\t\t            return (array || []).map(function (w) {\r\n\t\t                return w.p3sServices[0][obj]; //select property in p3sservices \r\n\t\t            }).filter(function (w, idx, arr) {\r\n\t\t                if (typeof w === 'undefined') {\r\n\t\t                    return false;\r\n\t\t                }\r\n\t\t                return arr.indexOf(w) === idx;\r\n\t\t            });\r\n\t\t        };\r\n\r\n\t\t        $scope.updateFiltered = function(prop, value, cat) {\r\n\r\n\t\t            if(value === true) {\r\n\t\t                if(cat === 'epct') {cat = 'Euro-PCT'};\r\n\t\t                vm.chipOptions.push({cat: cat, value: value, prop: prop})\r\n\t\t            } \r\n\t\t            if(value === false) {\r\n\t\t                var index = vm.chipOptions.indexOf(cat);\r\n\t\t                vm.chipOptions.splice(index, 1);\r\n\t\t            }\r\n\t\t        }\r\n\r\n\t\t        $scope.closeDialog = function() {\r\n\t\t            $mdDialog.hide();\r\n\t\t        }\r\n\r\n\t\t    } //showFilter function end\t\r\n\r\n\t\t    $scope.filterByPropertiesMatchingAND = function (data) { //all data sent from filter \r\n\t\t        var matchesAND = true; //set macthes to true (default)\r\n\r\n\t\t        for (var obj in $scope.filter) { //$scope.filter is populated by $scope.filter within the panel controller below. Scope filter properties are initiated from front-end. currentStageColour/serviceType\r\n\r\n\t\t            if( $scope.filter.hasOwnProperty(obj) ) {\r\n\t\t                if (noSubFilter($scope.filter[obj])) continue; //Check if there are any sub filter options with the value of true, if so, break from loop to return value of true\r\n\t\t                if (!checkArray($scope.filter, data.p3sServices, obj)) { //If the property from the data matches the property from $scope.filter ($scope.filter) return false. It will not turn up in the table\r\n\t\t                    matchesAND = false;\r\n\t\t                    break; //break from the loop and return matchesAND which would now return false\r\n\t\t                }\r\n\t\t                \r\n\t\t            }\r\n\t\t        }\r\n\t\t        return matchesAND;\r\n\t\t    }; \t\t\t\t\r\n\r\n\t\t}\r\n\t)\r\n    \r\n}","DbFxChartCtrl.$inject = ['$scope', '$timeout', 'fxRatesMonth'];\r\n\r\nexport default function DbFxChartCtrl($scope, $timeout, fxRatesMonth) {\r\n\r\n    var vm = this;\r\n    var fxChartTimeout;\r\n\r\n    $scope.$parent.promise\r\n    .then(\r\n        function(response){\r\n            console.log('f chart')\r\n            fxChartTimeout = $timeout(function() { \r\n                vm.lineData = lineData;\r\n                vm.lineOptions = {\r\n                    chart: {\r\n                        type: 'lineChart',\r\n                        height: 450,\r\n                        margin : {\r\n                            top: 20,\r\n                            right: 20,\r\n                            bottom: 55,\r\n                            left: 55\r\n                        },\r\n                        clipEdge: false,\r\n                        tooltip: {\r\n                          hideDelay: 0\r\n                        },                      \r\n                        showLegend: false,\r\n                        x: function(d, i){ \r\n                            return d[0]},\r\n                        y: function(d){ return d[1]; },\r\n                        useInteractiveGuideline: true,\r\n                        xAxis: {\r\n                            tickFormat: function (d, i) {\r\n                                return d3.time.format('%x')(new Date(d));\r\n                            },\r\n\r\n                            showMaxMin: false,\r\n                            rotateLabels: -30,\r\n                            ticks: 24        \r\n                        },\r\n                        xScale: d3.time.scale(),\r\n                        yAxis: {\r\n                            tickFormat: function(d){\r\n                                return d3.format('.04f')(d);\r\n                            },\r\n                            axisLabelDistance: -10,\r\n                            ticks: 10,\r\n                            showMaxMin: false\r\n                        },\r\n                        tooltip: {\r\n                            keyFormatter: function(d) {\r\n                                return d3.time.format('%x')(new Date(d));\r\n                            }\r\n                        },                      \r\n                        useVoronoi: false,\r\n                        lines: {\r\n                            interactive: true\r\n                        },\r\n                        showXAxis: true,\r\n                        showYAxis: true,\r\n                        // forceY: [0],            \r\n                        callback: function(chart){\r\n\r\n                        }\r\n                    }\r\n                }\r\n                \r\n            })\r\n            vm.fxChartLoaded = true;\r\n    })\r\n\r\n    function lineData() {\r\n\r\n        var chartValueArrs = [];\r\n\r\n        for(var i = 0; i < fxRatesMonth.length; i++) {\r\n            chartValueArrs.push([fxRatesMonth[i].rateActiveDate, fxRatesMonth[i].rate]);\r\n        }\r\n\r\n        return [\r\n            {\r\n                values: chartValueArrs.reverse(),\r\n                color: '#2ca02c'\r\n            }\r\n        ]\r\n\r\n    } //function end\r\n\r\n    $scope.$on('$destroy', function(){\r\n        $timeout.cancel(fxChartTimeout)\r\n    })\r\n\r\n}\r\n","EuropctsGraphController.$inject = ['$stateParams', '$scope', '$timeout'];\r\n\r\nexport default function EuropctsGraphController($stateParams, $scope, $timeout) {\r\n\r\n\tvar vm = this;\r\n\tvar epctGraphTimeout;\r\n\r\n\t$scope.$parent.promise\r\n\t.then(\r\n\t\tfunction(response){\r\n\t\t\tconsole.log('europct graph')\r\n\t\t\t\r\n\t\t\tepctGraphTimeout = $timeout(function() { //required to load correct size of donut graph in view\r\n\t      \t\tvm.donutOptions = {\r\n\t\t            chart: {\r\n\t\t                type: 'pieChart',\t\r\n\t\t                height: 200,\r\n\t\t                donut: true,\r\n\t\t                margin: { top: 0, right: 0, bottom: 0, left: 0 },\r\n\t\t                tooltip: {\r\n\t\t\t\t\t\t  hideDelay: 0\r\n\t\t\t\t\t\t},\r\n\t\t                x: function(d){\r\n\t\t                \treturn d.key;\r\n\t\t                },\r\n\t\t                y: function(d){\r\n\t\t                \treturn d.y;\r\n\t\t                },\r\n\t\t                donutRatio: 0.60,\r\n\t\t\t\t\t\tduration: 500,\r\n\t\t                showLabels: false,\r\n\t\t                showLegend: false,\r\n\t\t                valueFormat: function(d) {\r\n\t\t                \treturn d;\r\n\t\t                }\r\n\t\t            }\r\n\t\t        };\r\n\r\n\t\t        var formalityTotal = function() {\r\n\t\t        \tvar counter = 0;\r\n\t\t        \tObject.keys($scope.formalityData.epct).forEach(function(item){\r\n\t\t        \t\tcounter += $scope.formalityData.epct[item].length;\r\n\t\t        \t})\r\n\t\t        \treturn counter;\r\n\r\n\t\t        }\t\t        \r\n\r\n\t\t        vm.donutData = {\r\n\t\t        \tphases: [\r\n\t\t\t        \t{\r\n\t\t\t        \t\tkey: 'Green', \r\n\t\t\t        \t\ty: $scope.formalityData.epct.Green.length,\r\n\t\t\t        \t\tcolor: '#53ab58'\r\n\t\t\t        \t},\r\n\t\t\t        \t{\r\n\t\t\t        \t\tkey: 'Amber', \r\n\t\t\t        \t\ty: $scope.formalityData.epct.Amber.length,\r\n\t\t\t        \t\tcolor: '#f9b233'\r\n\t\t\t        \t},\r\n\t\t\t        \t{\r\n\t\t\t        \t\tkey: 'Red', \r\n\t\t\t        \t\ty: $scope.formalityData.epct.Red.length,\r\n\t\t\t        \t\tcolor: '#e30613'\r\n\t\t\t        \t},\r\n\t\t\t        \t{\r\n\t\t\t        \t\tkey: 'Grey', \r\n\t\t\t        \t\ty: $scope.formalityData.epct.Grey.length,\r\n\t\t\t        \t\tcolor: '#dbdbdb'\r\n\t\t\t        \t}\r\n\t\t\t        ],\r\n\t\t        \ttotal: formalityTotal()\r\n\t\t        }\r\n\t\t        \t\r\n\r\n\t            var evt = document.createEvent('UIEvents');\r\n\t            evt.initUIEvent('resize', true, false, window, 0);\r\n\t            window.dispatchEvent(evt);\r\n\t           \r\n\t  \t\t}, 300);\r\n\r\n\r\n\t\t} //if patents end\t\r\n\t)\r\n\r\n\t$scope.$on('$destroy', function(){\r\n\t\t$timeout.cancel(epctGraphTimeout);\r\n\t})\r\n}","GrantsGraphController.$inject = ['$stateParams', '$scope', '$timeout'];\r\n\r\nexport default function GrantsGraphController($stateParams, $scope, $timeout) {\r\n\r\n\tvar vm = this;\r\n\tvar grantGraphTimeout;\r\n\r\n\t$scope.$parent.promise\r\n\t.then(\r\n\t\tfunction(response){\r\n\t\t\t console.log('grants graph')\r\n\t\t\t$scope.$parent.dashboardLoaded = true;\r\n\t\t\tgrantGraphTimeout = $timeout(function() { //required to load correct size of donut graph in view\r\n\t      \t\tvm.donutOptions = {\r\n\t\t            chart: {\r\n\t\t                type: 'pieChart',\t\r\n\t\t                height: 200,\r\n\t\t                donut: true,\r\n\t\t                margin: { top: 0, right: 0, bottom: 0, left: 0 },\r\n\t\t                tooltip: {\r\n\t\t\t\t\t\t  hideDelay: 0\r\n\t\t\t\t\t\t},\r\n\t\t                x: function(d){\r\n\t\t                \treturn d.key;\r\n\t\t                },\r\n\t\t                y: function(d){\r\n\t\t                \treturn d.y;\r\n\t\t                },\r\n\t\t                donutRatio: 0.60,\r\n\t\t\t\t\t\tduration: 500,\r\n\t\t                showLabels: false,\r\n\t\t                showLegend: false,\r\n\t\t                valueFormat: function(d) {\r\n\t\t                \treturn d;\r\n\t\t                }\r\n\t\t            }\r\n\t\t        };\r\n\r\n\t\t        var formalityTotal = function() {\r\n\t\t        \tvar counter = 0;\r\n\t\t        \tObject.keys($scope.formalityData.grant).forEach(function(item){\r\n\t\t        \t\tcounter += $scope.formalityData.grant[item].length;\r\n\t\t        \t})\r\n\t\t        \treturn counter;\r\n\r\n\t\t        }\r\n\r\n\t\t        vm.donutData = {\r\n\t\t        \tphases: [\r\n\t\t\t        \t{\r\n\t\t\t        \t\tkey: 'Green', \r\n\t\t\t        \t\ty: $scope.formalityData.grant.Green.length,\r\n\t\t\t        \t\tcolor: '#53ab58'\r\n\t\t\t        \t},\r\n\t\t\t        \t{\r\n\t\t\t        \t\tkey: 'Amber', \r\n\t\t\t        \t\ty: $scope.formalityData.grant.Amber.length,\r\n\t\t\t        \t\tcolor: '#f9b233'\r\n\t\t\t        \t},\r\n\t\t\t        \t{\r\n\t\t\t        \t\tkey: 'Red', \r\n\t\t\t        \t\ty: $scope.formalityData.grant.Red.length,\r\n\t\t\t        \t\tcolor: '#e30613'\r\n\t\t\t        \t},\r\n\t\t\t        \t{\r\n\t\t\t        \t\tkey: 'Grey', \r\n\t\t\t        \t\ty: $scope.formalityData.grant.Grey.length,\r\n\t\t\t        \t\tcolor: '#dbdbdb'\r\n\t\t\t        \t},\r\n\t\t        \t],\r\n\t\t        \ttotal: formalityTotal()\r\n\t        \t}\t\t        \t\r\n\t\t        \r\n\t            var evt = document.createEvent('UIEvents');\r\n\t            evt.initUIEvent('resize', true, false, window, 0);\r\n\t            window.dispatchEvent(evt);\r\n\r\n\t  \t\t}, 300);\r\n\r\n\r\n\t\t} //if patents end\t\r\n\t)\r\n\r\n\t$scope.$on('$destroy', function(){\r\n\t\t$timeout.cancel(grantGraphTimeout);\r\n\t})\r\n}","RenewalsGraphController.$inject = ['$stateParams', '$scope', '$timeout'];\r\n\r\nexport default function RenewalsGraphController($stateParams, $scope, $timeout) {\r\n\r\n\tvar vm = this;\r\n\tvar renewalGraphTimeout;\r\n\r\n\t$scope.$parent.promise\r\n\t.then(\r\n\t\tfunction(response){\r\n \t\t\tconsole.log('renewals graph')\r\n\t\t\trenewalGraphTimeout = $timeout(function() { //required to load correct size of donut graph in view\r\n\t      \t\tvm.donutOptions = {\r\n\t\t            chart: {\r\n\t\t                type: 'pieChart',\t\r\n\t\t                height: 200,\r\n\t\t                donut: true,\r\n\t\t                margin: { top: 0, right: 0, bottom: 0, left: 0 },\r\n\t\t                tooltip: {\r\n\t\t\t\t\t\t  hideDelay: 0\r\n\t\t\t\t\t\t},\r\n\t\t                x: function(d){\r\n\t\t                \treturn d.key;\r\n\t\t                },\r\n\t\t                y: function(d){\r\n\t\t                \treturn d.y;\r\n\t\t                },\r\n\t\t                donutRatio: 0.60,\r\n\t\t\t\t\t\tduration: 500,\r\n\t\t                showLabels: false,\r\n\t\t                showLegend: false,\r\n\t\t                valueFormat: function(d) {\r\n\t\t                \treturn d;\r\n\t\t                }\r\n\t\t            }\r\n\t\t        };\r\n\r\n\t\t        var formalityTotal = function() {\r\n\t\t        \tvar counter = 0;\r\n\t\t        \tObject.keys($scope.formalityData.renewal).forEach(function(item){\r\n\t\t        \t\tcounter += $scope.formalityData.renewal[item].length;\r\n\t\t        \t})\r\n\t\t        \treturn counter;\r\n\r\n\t\t        }\r\n\r\n\t\t        vm.donutData = {\r\n\t\t        \tphases: [\r\n\t\t\t        \t{\r\n\t\t\t        \t\tkey: 'Green', \r\n\t\t\t        \t\ty: $scope.formalityData.renewal.Green.length,\r\n\t\t\t        \t\tcolor: '#53ab58'\r\n\t\t\t        \t},\r\n\t\t\t        \t{\r\n\t\t\t        \t\tkey: 'Amber', \r\n\t\t\t        \t\ty: $scope.formalityData.renewal.Amber.length,\r\n\t\t\t        \t\tcolor: '#f9b233'\r\n\t\t\t        \t},\r\n\t\t\t        \t{\r\n\t\t\t        \t\tkey: 'Red', \r\n\t\t\t        \t\ty: $scope.formalityData.renewal.Red.length,\r\n\t\t\t        \t\tcolor: '#e30613'\r\n\t\t\t        \t},\r\n\t\t\t        \t{\r\n\t\t\t        \t\tkey: 'Blue',\r\n\t\t\t        \t\ty: $scope.formalityData.renewal.Blue.length,\r\n\t\t\t        \t\tcolor: '#0097ce'\r\n\t\t\t        \t},\r\n\t\t\t        \t{\r\n\t\t\t        \t\tkey: 'Black', \r\n\t\t\t        \t\ty: $scope.formalityData.renewal.Black.length,\r\n\t\t\t        \t\tcolor: '#3c3c3b'\r\n\t\t\t        \t},\r\n\t\t\t        \t{\r\n\t\t\t        \t\tkey: 'Grey', \r\n\t\t\t        \t\ty: $scope.formalityData.renewal.Grey.length,\r\n\t\t\t        \t\tcolor: '#dbdbdb'\r\n\t\t\t        \t}\r\n\t\t        \t],\r\n\t\t        \ttotal: formalityTotal()\r\n\r\n\t\t       \t}\t        \r\n\r\n\t            var evt = document.createEvent('UIEvents');\r\n\t            evt.initUIEvent('resize', true, false, window, 0);\r\n\t            window.dispatchEvent(evt);\r\n\r\n\t  \t\t}, 300);\r\n\r\n\t\t\t$scope.$on('$destroy', function(){\r\n\t\t\t\t$timeout.cancel(renewalGraphTimeout);\r\n\t\t\t})\r\n\r\n\t\t}\r\n\t)\r\n\r\n}","VaidationsGraphController.$inject = ['$stateParams', '$scope', '$timeout'];\r\n\r\nexport default function VaidationsGraphController($stateParams, $scope, $timeout) {\r\n\r\n\tvar vm = this;\r\n\tvar validationGraphTimeout;\r\n\r\n\t$scope.$parent.promise\r\n\t.then(\r\n\t\tfunction(response){\r\n\t\t\tconsole.log('validations graph')\r\n\t\t\tvalidationGraphTimeout = $timeout(function() { //required to load correct size of donut graph in view\r\n\t      \t\tvm.donutOptions = {\r\n\t\t            chart: {\r\n\t\t                type: 'pieChart',\t\r\n\t\t                height: 200,\r\n\t\t                donut: true,\r\n\t\t                margin: { top: 0, right: 0, bottom: 0, left: 0 },\r\n\t\t                tooltip: {\r\n\t\t\t\t\t\t  hideDelay: 0\r\n\t\t\t\t\t\t},\r\n\t\t                x: function(d){\r\n\t\t                \treturn d.key;\r\n\t\t                },\r\n\t\t                y: function(d){\r\n\t\t                \treturn d.y;\r\n\t\t                },\r\n\t\t                donutRatio: 0.60,\r\n\t\t\t\t\t\tduration: 500,\r\n\t\t                showLabels: false,\r\n\t\t                showLegend: false,\r\n\t\t                valueFormat: function(d) {\r\n\t\t                \treturn d;\r\n\t\t                }\r\n\t\t            }\r\n\t\t        };\r\n\r\n\t\t        var formalityTotal = function() {\r\n\t\t        \tvar counter = 0;\r\n\t\t        \tObject.keys($scope.formalityData.validation).forEach(function(item){\r\n\t\t        \t\tcounter += $scope.formalityData.validation[item].length;\r\n\t\t        \t})\r\n\t\t        \treturn counter;\r\n\r\n\t\t        }\r\n\r\n\t\t        vm.donutData = {\r\n\t\t        \tphases: [\r\n\t\t\t        \t{\r\n\t\t\t        \t\tkey: 'Green', \r\n\t\t\t        \t\ty: $scope.formalityData.validation.Green.length,\r\n\t\t\t        \t\tcolor: '#53ab58'\r\n\t\t\t        \t},\r\n\t\t\t        \t{\r\n\t\t\t        \t\tkey: 'Grey', \r\n\t\t\t        \t\ty: $scope.formalityData.validation.Grey.length,\r\n\t\t\t        \t\tcolor: '#dbdbdb'\r\n\t\t\t        \t}\r\n\r\n\t\t        \t],\r\n\t\t        \ttotal: formalityTotal()\r\n\r\n\t\t        }\r\n\r\n\t            var evt = document.createEvent('UIEvents');\r\n\t            evt.initUIEvent('resize', true, false, window, 0);\r\n\t            window.dispatchEvent(evt);\r\n\r\n\t  \t\t}, 300);\r\n\t\t}\r\n\r\n\t)\r\n\r\n\t$scope.$on('$destroy', function(){\r\n\t\t$timeout.cancel(validationGraphTimeout);\r\n\t})\r\n}","routes.$inject = ['$stateProvider'];\r\n\r\nexport default function routes($stateProvider) {\r\n\r\n    $stateProvider\r\n    .state('dashboard', {\r\n        url: '/dashboard',\r\n        template: require('html-loader!./html/dashboard.tpl.htm'),\r\n        controller: 'DashboardController',\r\n        controllerAs: '$ctrl'\r\n    })    \r\n    .state('dashboard.content', {\r\n        params: {\r\n            patents: null\r\n        },\r\n        resolve: {\r\n            fxRatesMonth: ['fxService', function(fxService) {\r\n                console.log('shoudl initiate')\r\n                return fxService.fetchFxMonth();\r\n            }]                    \r\n        },\r\n        views: {\r\n            views: {\r\n                'europctsgraph@dashboard': {\r\n                    controller: 'EuropctsGraphController',\r\n                    controllerAs: '$ctrl',\r\n                    templateUrl: require('html-loader!./html/dashboard.europcts-graph.tpl.htm'),         \r\n                },\r\n                'renewalsgraph@dashboard': {\r\n                    controller: 'RenewalsGraphController',\r\n                    controllerAs: '$ctrl',\r\n                    templateUrl: require('html-loader!./html/dashboard.renewals-graph.tpl.htm'),\r\n                },                \r\n                'grantsgraph@dashboard': {\r\n                    controller: 'GrantsGraphController',\r\n                    controllerAs: '$ctrl',\r\n                    templateUrl: require('html-loader!./html/dashboard.grants-graph.tpl.htm'),\r\n                },\r\n                'validationsgraph@dashboard': {\r\n                    controller: 'ValidationsGraphController',\r\n                    controllerAs: '$ctrl',\r\n                    templateUrl: require('html-loader!./html/dashboard.validations-graph.tpl.htm'),\r\n                },                                \r\n                'actionsavailable@dashboard': {\r\n                    controller: 'AvailableActionsController',\r\n                    controllerAs: '$ctrl',\r\n                    templateUrl: require('html-loader!./html/dashboard.actions-available.tpl.htm'),\r\n                },           \r\n                'fxchartwidget@dashboard': {\r\n                    templateUrl: require('html-loader!./html/dashboard.fxchart-widget.tpl.htm'),\r\n                    controller: 'FxChartController',\r\n                    controllerAs: '$ctrl'\r\n                }\r\n            }            \r\n        }\r\n    });\r\n}\r\n\r\n","import './_dashboard.scss';\r\n\r\nimport angular from 'angular';\r\n\r\nimport DashboardService from './services/dashboard.service.js';\r\nimport PatentsRestService from '../portfolio/services/patents.patentsRest.serv.js';\r\nimport CalculateService from '../../global/services/calculate.service.js';\r\nimport CostAnalysisService from '../../global/services/cost-analysis.service.js';\r\nimport TransactionService from '../../features/transactions/services/transactions.service.js';\r\n\r\nimport DashboardController from './controllers/dashboard.controller';\r\nimport AvailableActionsController from './controllers/dashboard.actions-available.controller';\r\nimport FxChartController from './controllers/dashboard.fx-chart.controller';\r\nimport EuropctsDonutController from './controllers/dashboard.europcts-graph.controller';\r\nimport GrantsDonutController from './controllers/dashboard.grants-graph.controller';\r\nimport RenewalsDonutController from './controllers/dashboard.renewals-graph.controller';\r\nimport ValidationsDonutController from './controllers/dashboard.validations-graph.controller';\r\n\r\nimport routing  from './dashboard.routes';\r\nconsole.log('dashboard')\r\nexport default angular.module('ppApp.dashboard', [DashboardService, PatentsRestService, CalculateService, CostAnalysisService, TransactionService]) //import dashboard view controllers\r\n\t.config(routing)\r\n  \t.controller('DashboardController', DashboardController)\r\n  \t.controller('AvailableActionsController', AvailableActionsController)\r\n  \t.controller('FxChartController', FxChartController)\r\n  \t.controller('EuropctsDonutController', EuropctsDonutController)\r\n  \t.controller('GrantsDonutController', GrantsDonutController)\r\n  \t.controller('RenewalsDonutController', RenewalsDonutController)\r\n  \t.controller('ValidationsDonutController', ValidationsDonutController)\r\n  \t.name;\r\n","export default angular.module('services.search-patent-service', []).factory('SearchPatentService', SearchPatentService).name;\r\n\r\nSearchPatentService.$inject = ['$http', '$q']; \r\n\r\nfunction SearchPatentService($http, $q) {\r\n\r\n    var REST_SEARCH_PATENT_SERVICE_URI = ppdomain+'rest-search-patents/';\r\n\r\n    var factory = {\r\n        findPatent: findPatent\r\n    };\r\n\r\n    return factory;\r\n\r\n    function findPatent(patentNo) {\r\n\r\n        var deferred= $q.defer();\r\n        \r\n        var patentItem = REST_SEARCH_PATENT_SERVICE_URI + patentNo;\r\n        \r\n        $http.get(patentItem)\r\n            .then(\r\n                function(response){\r\n                deferred.resolve(response);\r\n            }, function(errResponse) {\r\n                switch(errResponse.status) {\r\n                    case 400:\r\n                        errResponse.data = 'We\\'ve not been able to find that patent in the European Patent Register. Please enter an application number such as EP18123456.2';\r\n                    break;\r\n                    case 404:\r\n                        errResponse.data = 'We’ve not been able to find Patent Application '+patentNo+' in the European Patent Register. Please check the number you’re entering and try again.';\r\n                    break;\r\n                    case 204:\r\n                        errResponse.data = 'It looks like we\\'ve already added Patent Application '+patentNo+' in to the system. You should be able to find it in the List Patents page using the search boxes.';\r\n                    break;\r\n                    default:\r\n                        errResponse.data = null;\r\n                }\r\n                deferred.reject(errResponse);\r\n\r\n                // console.error('$Http Error 'errResponse.status': Unable to fetch  information from EPO')\r\n            }\r\n        )\r\n\r\n\r\n        return deferred.promise;\r\n\r\n    };\r\n}","routes.$inject = ['$stateProvider'];\r\n\r\nexport default function routes($stateProvider) {\r\n\r\n    $stateProvider\r\n    .state('portfolio', {\r\n        url: '/portfolio',\r\n        template: require('html-loader!./html/portfolio.tpl.htm'),\r\n        controller: 'PortfolioController',\r\n        controllerAs: '$ctrl',\r\n        params: {\r\n            navigation: 'portfolio'\r\n        }\r\n    })\r\n}\r\n\r\n","import './_portfolio.scss';\r\n\r\nimport angular from 'angular';\r\n\r\nimport PatentsRestService from './services/patents.patentsRest.serv.js';\r\nimport SearchPatentService from './services/portfolio.search-patent.serv.js';\r\n\r\nimport PortfolioController from './controllers/portfolio.controller';\r\n\r\nimport routing  from './portfolio.routes';\r\n\r\nexport default angular.module('ppApp.portfolio', [PatentsRestService, SearchPatentService]) //import dashboard view controllers\r\n\t.config(routing)\r\n  \t.controller('PortfolioController', PortfolioController)\r\n  \t.name;","export default angular.module('services.sidenav', []).factory('SidenavService', SidenavService).name;\r\n\r\nfunction SidenavService(){\r\n\t\r\n\t\tvar sections = [{\r\n  \t\tname: 'Dashboard',\r\n  \t\ttype: 'link',\r\n  \t\tstate: 'dashboard',\r\n  \t\ticon: 'far fa-tachometer-alt'\r\n\t\t}];    \r\n  \tsections.push({\r\n  \t\tname: 'Portfolio',\r\n  \t\ttype: 'toggle',\r\n  \t\tpages: [\r\n  \t\t\t{\r\n      \t\tname: 'Portfolio',\r\n      \t\ttype: 'link',\r\n      \t\tstate: 'portfolio'\r\n\t\t    },\r\n\t\t    {\r\n\t\t\t\t  name: 'Add Patent',\r\n\t\t\t\t  type: 'link',\r\n\t\t\t\t  state: 'search-patent'\r\n\t\t    }\r\n\t\t  ],\r\n\t\t  icon: 'far fa-folders'\r\n    })\r\n\r\n  \tsections.push({\r\n  \t\t\r\n  \t\tname: 'Transactions',\r\n  \t\ttype: 'toggle',\r\n  \t\tpages: [\r\n  \t\t\t{\r\n            name: 'Current',\r\n            state: 'current-transactions',\r\n            type: 'link',\r\n        },\r\n        {\r\n            name: 'History',\r\n            state: 'transaction-history',\r\n            type: 'link',\r\n        }\r\n      ],\r\n      icon: 'far fa-money-check-alt'\r\n\t})\r\n     \r\n     \t// console.log(sections)\r\n\r\n \tvar self;\r\n\r\n    return self = {\r\n      sections: sections,\r\n\r\n    \ttoggleSelectSection: function (section) {\r\n      \tself.openedSection = (self.openedSection === section ? null : section);\r\n    \t},\r\n      \tisSectionSelected: function (section) {\r\n       \t\treturn self.openedSection === section;\r\n      \t},\r\n      \tselectPage: function (section, page) {\r\n        \tpage && page.url && $location.path(page.url);\r\n          self.currentSection = section;\r\n          self.currentPage = page;\r\n      \t}\r\n    };\r\n\r\n};","import angular from 'angular';\r\n\r\nexport default angular.module('directives.sidenav.menutoggle', []).directive('menuToggle', menuToggle).name;\r\n\r\nfunction menuToggle() {\r\n\r\n    return {\r\n        scope: {\r\n            section: '=',\r\n            context: '='\r\n        },\r\n        template: require('html-loader!../html/sidenav-nav-li.tpl.htm'),\r\n        link: function($scope, $element) {\r\n            var controller = $scope.context\r\n\r\n            $scope.isOpen = function() {\r\n                 return controller.isOpen($scope.section);\r\n            };\r\n            $scope.toggle = function() {\r\n                controller.toggleOpen($scope.section);\r\n            };\r\n        }\r\n    };\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","export default angular.module('directives.sidenav.menuLink', []).directive('menuLink', menuLink).name;\r\n\r\nfunction menuLink() {\r\n    return {\r\n        scope: {\r\n            section: '='\r\n        },\r\n        template: require('html-loader!../html/sidenav-li-item.tpl.htm'),\r\n        link: function ($scope, $element) {\r\n            var controller = $element.parent().controller();\r\n            // $scope.focusSection = function () {\r\n            //     // set flag to be used later when\r\n            //     // $locationChangeSuccess calls openPage()\r\n            //     controller.autoFocusContent = true;\r\n            // };\r\n        }\r\n    };\r\n};\r\n\r\n","export default angular.module('components.sidenav', []).component('sidenav', {\r\n\r\n\t\ttemplate: require('html-loader!../html/sidenav.tpl.htm'),\r\n\t\tcontroller: ['$scope', '$rootScope', '$mdSidenav', '$timeout', 'userService', 'SidenavService',  'ngCart', 'coreService',  'moment', 'fxService', function($scope, $rootScope, $mdSidenav, $timeout, userService, SidenavService, ngCart, coreService, moment, fxService){\r\n\r\n\t\t\tvar vm = this;\r\n\r\n\t\t \tvm.toggleLeft = buildToggler('left');\r\n\t\t    vm.toggleRight = buildToggler('right');\r\n\t\t\tvm.isOpen = isOpen;\r\n\t      \tvm.toggleOpen = toggleOpen;\r\n\t      \tvm.autoFocusContent = false;\r\n\t      \tvm.menu = SidenavService;\r\n\t      \tvm.status = {\r\n\t        \tisFirstOpen: true,\r\n\t        \tisFirstDisabled: false\r\n\t      \t};\r\n\t\t    \r\n\t      \tfunction init() {\r\n\r\n\t\t\t\tuserService.fetchUser()\r\n\t\t\t\t.then(\r\n\t\t\t\t\tfunction(response){\r\n\t\t\t\t\t\tvm.user = response;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfunction(errResponse){\r\n\t\t\t\t\t\tconsole.log(errResponse)\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t    \tfxService.fetchFx()\r\n\t\t    \t.then(\r\n\t\t    \t\tfunction(response){\r\n\t\t    \t\t\tvm.fxRate = response.currentFXRate.rate\r\n\t\t    \t\t},\r\n\t\t    \t\tfunction(errResponse){\r\n\t\t    \t\t\tconsole.log(errResponse)\r\n\t\t    \t\t}\r\n\t\t    \t)\t\r\n\r\n\t\t\t    $timeout(function() {\r\n\t\t\t    \ttimeZoneClocks();\r\n\t\t\t    \tvm.timeLoaded = true;   \r\n\t\t\t    })\t    \t\r\n\r\n\t      \t}\r\n\r\n\r\n\t      \tinit()\r\n\r\n\t      \tfunction isOpen(section) {\r\n\t        \treturn vm.menu.isSectionSelected(section);\r\n\t      \t}\r\n\t      \tfunction toggleOpen(section) {\r\n\t        \tvm.menu.toggleSelectSection(section);\r\n\t      \t}\r\n\r\n\r\n\t\t    function buildToggler(componentId) {\r\n\t\t      \treturn function() {\r\n\t\t        \t$mdSidenav(componentId).toggle();\r\n\t\t      \t};\r\n\t\t    }\r\n\r\n\t\t    function timeZoneClocks() {\r\n\r\n\t\t        var utc = moment.tz(\"Etc/UTC\").format('HH:mm MM/DD/YYYY');\r\n\t\t        var est = moment.tz(\"America/New_York\").format('HH:mm MM/DD/YYYY');\r\n\t\t    \r\n\t\t        var t = $timeout(function() {\r\n\t\t            vm.utcTime = utc;\r\n\t\t            vm.estTime =  est;\r\n\t\t            timeZoneClocks()\r\n\t\t        }, 500);\r\n\r\n\t\t    }\r\n\r\n\t\t\tvm.empty = function() {\r\n\t\t\t\tngCart.empty();\r\n\t\t\t}    \r\n\r\n\t\t\tfunction welcomeMessageModal() {\r\n\t\t\t\tvar modalInstance = $uibModal.open({\r\n\t\t\t\t\ttemplateUrl: 'app/templates/modals/modal.welcome-message.tpl.htm',\r\n\t\t\t\t\tscope: $scope,\r\n\t\t\t\t\tcontrollerAs:'$ctrl',\r\n\t\t\t\t\tcontroller: ['$uibModalInstance', function($uibModalInstance) {\r\n\r\n\t\t\t\t \t  \tthis.dismissWelcomeModal = function () {\r\n\t\t\t\t\t    \t$uibModalInstance.close();\r\n\t\t\t\t\t  \t};\r\n\t\t\t\t\t}]\r\n\t\t\t\t});\r\n\t\t \t}    \r\n\t\t}]\r\n}).name\r\n","import angular from 'angular';\r\n\r\nimport SidenavService from './services/sidenav.service';\r\n\r\nimport MenuToggle from './directives/menu-toggle.directive';\r\nimport MenuLink from './directives/menu-link.directive';\r\n\r\nimport sidenav from './components/sidenav.component';\r\n\r\n// import 'font-awesome/scss/font-awesome.scss';\r\n\r\n\r\nexport default angular.module('ppApp.sidenav', [SidenavService, sidenav, MenuToggle,  MenuLink]) //import dashboard view controllers\r\n  \t.name;\r\n","\r\nimport \"localScripts/js/config.js\";;\r\nimport \"localScripts/js/polyfillers.js\";\r\n\r\nimport \"babel-polyfill\";\r\nimport $ from 'jquery'; //neede to prevent error with slick-carousel\r\nwindow.jQuery = $;\r\nwindow.$ = $;\r\nimport \"jquery/dist/jquery.min.js\";\r\nimport \"angular/angular.min.js\";\r\nimport \"angular-cookies/angular-cookies.min.js\";\r\nimport \"angular-animate/angular-animate.min.js\";\r\nimport \"angular-sanitize/angular-sanitize.js\";\r\nimport \"angular-aria/angular-aria.min.js\";\r\nimport \"angular-material/angular-material.min.js\";\r\nimport 'angular-touch/angular-touch.min.js';\r\nimport \"angular-local-storage/dist/angular-local-storage.min.js\";\r\n\r\nimport \"tether/dist/js/tether.min.js\";\r\nimport \"bootstrap/dist/js/bootstrap.min.js\";\r\nimport \"angular-ui-bootstrap/dist/ui-bootstrap-tpls.js\";\r\nimport \"popper.js/dist/popper.min.js\";\r\n\r\nimport \"moment/min/moment.min.js\";\r\nimport \"moment-timezone/builds/moment-timezone.min.js\";\r\nimport \"moment-timezone/builds/moment-timezone-with-data-2012-2022.min.js\";\r\n// import 'bootstrap/dist/css/bootstrap.css';\r\n\r\nimport \"d3/d3.min.js\";\r\nimport \"nvd3/build/nv.d3.min.js\";\r\nimport \"angular-nvd3/dist/angular-nvd3.min.js\";\r\n\r\nimport angular from 'angular';\r\nimport uirouter from 'angular-ui-router';\r\nimport ngIdle from \"ng-idle/angular-idle.min.js\";\r\nimport ngCart from \"../../assets/js/vendors/ngCart.js\";\r\nimport angularMoment from \"angular-moment\";\r\nimport nvd3 from \"angular-nvd3\";\r\nimport croppie from \"angular-croppie/angular-croppie.js\";\r\n\r\nimport config from '../../app/app.config.js';\r\n\r\nimport userService from '../../app/features/user/services/user.user.serv.js';\r\n\r\nimport coreCtrl from '../../app/global/controllers/core.core.ctrl.js';\r\nimport dashboard from '../../app/features/dashboard/index.js';\r\nimport portfolio from '../../app/features/portfolio/index.js';\r\nimport sidenav from '../../app/features/sidenav/index.js';\r\n\r\nimport '@fortawesome/fontawesome-pro/js/fontawesome'\r\nimport '@fortawesome/fontawesome-pro/js/solid'\r\nimport '@fortawesome/fontawesome-pro/js/regular'\r\nimport '@fortawesome/fontawesome-pro/js/brands'\r\n\r\nimport \"../scss/main.scss\";\r\n\r\n\r\nangular.module('ppApp', ['ui.router', 'ngIdle', 'ngAnimate', 'ui.bootstrap', 'ngMaterial', 'ngTouch', 'angularMoment', 'LocalStorageModule', 'nvd3', 'ngCookies','angularCroppie', 'ngSanitize', uirouter, userService, ngCart, coreCtrl, dashboard, portfolio, sidenav]).config(config).run(startUpRun)\r\n\r\nstartUpRun.$inject = ['Idle', 'userService', '$rootScope', '$timeout'];\r\n\r\nfunction startUpRun(Idle, userService, $rootScope, $timeout) {\r\n\tconsole.log('startUp')\r\n    Idle.watch();\r\n\r\n};"],"sourceRoot":""}