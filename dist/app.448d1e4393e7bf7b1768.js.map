{"version":3,"sources":["webpack:///./app/features/portfolio/controllers/portfolio.controller.js","webpack:///./app/features/sidenav/avatar-default.png","webpack:///./app/features/sidenav/pp_icon.png","webpack:///./node_modules/empty-module sync nonrecursive js$","webpack:///./app/features/dashboard/html/dashboard.action-cost.tpl.htm","webpack:///./app/features/dashboard/html/dashboard.actions-available.tpl.htm","webpack:///./app/features/dashboard/html/dashboard.fxchart-widget.tpl.htm","webpack:///./app/features/dashboard/html/dashboard.graph-donut-widget.tpl.htm","webpack:///./app/features/dashboard/html/dashboard.recent-activity-widget.tpl.htm","webpack:///./app/features/dashboard/html/dashboard.tpl.htm","webpack:///./app/features/portfolio/html/portfolio.tpl.htm","webpack:///./app/features/sidenav/html/sidenav-li-item.tpl.htm","webpack:///./app/features/sidenav/html/sidenav-nav-li.tpl.htm","webpack:///./app/features/sidenav/html/sidenav.tpl.htm","webpack:///./app/global/services/vendors/ngCart.fulfilment.js","webpack:///./app/global/directives/vendors/ngCart.directives.js","webpack:///./assets/js/vendors/ngCart.js","webpack:///./app/app.config.js","webpack:///./app/features/user/services/user.user.serv.js","webpack:///./app/global/services/app.fx.serv.js","webpack:///./app/global/services/app.core.serv.js","webpack:///./app/global/services/app.organiseColour.serv.js","webpack:///./app/features/portfolio/services/patents.patentsRest.serv.js","webpack:///./app/global/controllers/core.core.ctrl.js","webpack:///./app/features/dashboard/services/dashboard.service.js","webpack:///./app/global/services/calculate.service.js","webpack:///./app/global/services/cost-analysis.service.js","webpack:///./app/features/transactions/services/transaction-history.service.js","webpack:///./app/features/transactions/services/current-transactions.service.js","webpack:///./app/features/dashboard/controllers/dashboard.controller.js","webpack:///./app/features/dashboard/controllers/actions-available.controller.js","webpack:///./app/features/dashboard/controllers/donut-chart.controller.js","webpack:///./app/features/dashboard/controllers/fx-chart.controller.js","webpack:///./app/features/dashboard/controllers/action-cost.controller.js","webpack:///./app/features/dashboard/controllers/recent-activity.controller.js","webpack:///./app/features/dashboard/dashboard.routes.js","webpack:///./app/features/dashboard/index.js","webpack:///./app/features/portfolio/services/portfolio.search-patent.serv.js","webpack:///./app/features/portfolio/portfolio.routes.js","webpack:///./app/features/portfolio/index.js","webpack:///./app/features/sidenav/services/sidenav.service.js","webpack:///./app/features/sidenav/directives/menu-toggle.directive.js","webpack:///./app/features/sidenav/directives/menu-link.directive.js","webpack:///./app/features/sidenav/components/sidenav.component.js","webpack:///./app/features/sidenav/index.js","webpack:///./src/js/app.js"],"names":["$","PortfolioController","$scope","$state","$stateParams","$rootScope","$timeout","$uibModal","$mdPanel","$mdDialog","$mdMenu","SearchPatentService","PatentsRestService","vm","this","select","i","selected","rowSelect","event","patent","stateParams","target","hasClass","go","patentId","patentID","form1200generate","prepareGrant","notify","currentTarget","find","id","noSubFilter","obj","key","checkArray","service","prop","some","item","updatePortfolioData","fetchAllPatents","then","response","portfolioData","recentlyAdded","push","slice","pop","promise","filter","filterByPropertiesMatchingAND","data","matchesAND","hasOwnProperty","p3sServices","$$destroyed","length","noPatents","forEach","clientRef","chipOptions","showFilter","mdMenu","$event","open","categories","getItems","array","map","w","idx","arr","indexOf","updateFiltered","value","cat","index","splice","closeDialog","hide","showAddPatent","panelPosition","newPanelPosition","absolute","center","config","attachTo","angular","element","document","body","controller","mdPanelRef","recently","added","foundPatent","findPatent","patentNo","loadingPatent","error","toJson","errResponse","console","queriedPatent","status","searchError","openConfirmModal","templateUrl","appendTo","undefined","controllerAs","$uibModalInstance","$location","$anchorScroll","addPatent","addingPatent","close","savePatent","match","ep_ApplicationNumber","searchPatent","dismissModal","cancelAdd","$on","cancel","toPatentTimeout","position","hasBackdrop","targetEvent","clickOutsideToClose","escapeToClose","focusOnOpen","result","panelRef","portfolioLoaded","sortBy","propertyName","reverse","selectedChip","__webpack_require__","d","__webpack_exports__","$inject","module","exports","p","./index.js","webpackContext","req","webpackContextResolve","e","Error","code","keys","Object","resolve","ngCart_fulfilment","$injector","_obj","settings","setService","setSettings","checkout","orderObj","get","$http","$q","deferred","defer","post","reject","ngCart_directives","ngCart","directive","restrict","scope","name","quantity","quantityMax","price","transclude","attrs","link","inCart","getItemById","q","getQuantity","parseInt","qtyOpt","ngModel","ngCartItem","basketService","patentsRestService","fulfilmentProvider","productData","$cart","items","basketItems","ep_ApplicationNo","_data","serviceType","_name","totalCostUSD","totalCost","dateNowLocalTime","headers","billingDetails","summary","details","reload","$broadcast","statusCode","fetchBasketPatents","firstName","lastName","billingStreet","billingCity","billingState","billingZip","date","dateNowLocalTimeUI","fees","totalProcessingFeesUSD","totalExpressFeesUSD","totalUrgentFeesUSD","totalOfficialFeesUSD","totalPatentPlaceFeesUSD","totalPatents","orderedPatentUIs","vendors_ngCart","provider","$get","run","store","$save","isObject","$restore","init","$window","shipping","taxRate","tax","addItem","order","euroAction","action","p3sServicesWithFees","totalOrderLength","continueBasket","setQuantity","newItem","itemId","getCart","build","getId","setShipping","getShipping","setTaxRate","parseFloat","toFixed","getTaxRate","getTax","getSubTotal","setCart","cart","getTotalItems","count","getTotalUniqueItems","total","getTotal","removeItem","removeItemById","empty","localStorage","isEmpty","toObject","subTotal","storedCart","_self","_id","_price","_quantity","reduceCart","form1200FeeUI","renewalFeeUI","grantFeeUI","set","JSON","stringify","factory","$log","setId","setName","setPrice","setData","prototype","getName","priceFloat","getPrice","relative","quantityInt","info","getData","getItem","fromJson","parse","val","setItem","appConfig","$httpProvider","$urlRouterProvider","$uibModalProvider","$compileProvider","$qProvider","KeepaliveProvider","IdleProvider","localStorageServiceProvider","$mdIconProvider","$mdPanelProvider","defaults","window","ppdomain","defaultFontSet","fontSet","idle","timeout","interval","errorOnUnhandledRejections","setStorageType","setDefaultToCookie","setNotify","user_user_serv","angular_default","a","userService","REST_SERVICE_URI","fetchUser","updateUser","user","put","listUsers","app_fx_serv","fxService","fetchFxWeek","fetchFxMonth","fetchFx","app_core_serv","coreService","getMessages","supressMessages","ppContact","openAppGuide","appGuideOpen","app_organiseColour_serv","OrganiseColourService","getNextColour","colour","color","getCurrColour","patents_patentsRest_serv","actionsArray","property","actionID","number","charCodeAt","toString","substring","generateId","currentStageColour","cssCurrent","nextStageColour","cssNext","updatePatent","deletePatent","delete","fetchPatentItem","flat","filtered","core_core_ctrl","coreCtrl","localStorageService","Idle","Keepalive","$cookies","closeModals","warning","timedout","windowClass","location","log","dashboard_service","DashboardService","sortPatents","patents","Green","Amber","Red","Blue","Black","Grey","Array","isArray","Total","newPatents","serv","concat","string","toLowerCase","capitlized","charAt","toUpperCase","getPatents","setActionCost","saleType","actionCost","el","fee","cartService","replace","serviceCost","fetchActionCost","calculate_service","CalculateService","calculateHours","costband","Date","getTime","hours","greenStartDate","amberStartDate","redStartDate","blueStartDate","renewalStatus","blackStartDate","recentActivity","millisec","seconds","minutes","Math","floor","cost_analysis_service","CostAnalysisService","fetchCa","services","all","transaction_history_service","TransactionHistoryService","fetchTransactionHistory","renewalUIs","o","newType","grantUIs","epctUIs","serviceUIs","actionProgress","currTransStatus","progress","current_transactions_service","CurrentTransactionsService","fetchCurrentTransactions","DashboardController","animate","dashboardData","dashboardLoaded","ActionsAvailableController","setActionCostTmeout","$emit","phaseLoaded","setPhase","phase","availableActions","initialPhase","GraphDonutController","graphtDonutTimeout","patentData","donutOptions","chart","type","height","donut","margin","top","right","bottom","left","tooltip","hideDelay","x","y","donutRatio","duration","showLabels","showLegend","valueFormat","donutData","evt","createEvent","initUIEvent","dispatchEvent","DbFxChartCtrl","fxRatesMonth","fxChartTimeout","lineData","chartValueArrs","rateActiveDate","rate","values","lineOptions","clipEdge","useInteractiveGuideline","xAxis","tickFormat","d3","time","format","showMaxMin","rotateLabels","ticks","xScale","scale","yAxis","axisLabelDistance","keyFormatter","useVoronoi","lines","interactive","showXAxis","showYAxis","callback","ActionCostController","updateCosttimeout","fxTimeFrame","loading","RecentActvityController","fetchStageChanges","fetchTransChanges","setActivityActiveTab","menuItem","activeActivityTab","activeActivityTabResp","activeMenu","changeActivity","activity","activityNotifications","function","currentTransactions","recentActivityData","recentTransArr","lastUpdatedDate","routes","$stateProvider","state","url","template","params","views","graphdonutwidget@dashboard","actionsavailable@dashboard","actioncost@dashboard","actioncostmd@dashboard","fxchartwidget@dashboard","recentactivitywidget@dashboard","dashboard","portfolio_search_patent_serv","REST_SEARCH_PATENT_SERVICE_URI","patentItem","portfolio_routes_routes","navigation","portfolio","portfolio_controller","sidenav_service","self","sections","icon","pages","toggleSelectSection","section","openedSection","isSectionSelected","selectPage","page","path","currentSection","currentPage","menu_toggle_directive","context","$element","isOpen","toggle","toggleOpen","menu_link_directive","parent","sidenav_component","component","$mdSidenav","SidenavService","moment","buildToggler","componentId","toggleLeft","toggleRight","menu","autoFocusContent","isFirstOpen","isFirstDisabled","fxRate","currentFXRate","timeZoneClocks","utc","tz","est","utcTime","estTime","timeLoaded","sidenav","startUpRun","watch","jQuery","uirouter"],"mappings":"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","file":"app.448d1e4393e7bf7b1768.js","sourcesContent":["PortfolioController.$inject = ['$scope', '$state', '$stateParams','$rootScope', '$timeout', '$uibModal', '$mdPanel', '$mdDialog', '$mdMenu', 'SearchPatentService',  'PatentsRestService'];\r\n\r\nexport default function PortfolioController($scope, $state, $stateParams, $rootScope, $timeout, $uibModal, $mdPanel, $mdDialog, $mdMenu, SearchPatentService, PatentsRestService) {\r\n\r\n    var vm = this;\r\n\r\n    $scope.promise = PatentsRestService.fetchAllPatents();\r\n    $scope.filter = {};\r\n\r\n    function select(i) {\r\n        vm.selected = i;\r\n    }\r\n\r\n    select($stateParams.patentId)\r\n\r\n    function uniqueArray(array) {\r\n        return array.filter(function(item, pos, self) {\r\n            return self.indexOf(item) == pos;\r\n        })\r\n    }\r\n\r\n    function rowSelect(event, patent){\r\n\r\n        vm.stateParams = $stateParams;\r\n        if($(event.target).hasClass('generateForm1200')) {\r\n            $state.go('portfolio.modal.patent', {patentId: patent.patentID, form1200generate: 1, prepareGrant: 0}, {notify: false})\r\n        }\r\n\r\n        if($(event.target).hasClass('prepareGrant')) {\r\n            $state.go('portfolio.modal.patent', {patentId: patent.patentID, prepareGrant: 1, form1200generate: 0}, {notify: false})\r\n        }        \r\n\r\n        if(!$(event.target).hasClass('cartbtn') && !$(event.target).hasClass('generateForm1200') && !$(event.target).hasClass('prepareGrant')) {\r\n            var id = ($($(event.currentTarget).find('a'))); //find the anchor tag within row (patentApplicationNumber)\r\n            var patentId = id[0].id; //gets data from data-id\r\n            $state.go('portfolio.modal.patent', {patentId: patent.patentID, form1200generate: null}, {notify: false})            \r\n        }\r\n\r\n    };\r\n\r\n    function noSubFilter(obj) {\r\n        for (var key in obj) {\r\n            if (obj[key]) { //if one of the $scope.filter ($scope.filter) properties evaluates to true (is selected) return false \r\n                return false;\r\n            }\r\n        }\r\n        return true; //if no subfilters return true. This will result in all filtered data items being returned a true value\r\n    }\r\n\r\n    function checkArray(obj, service, prop) {\r\n        return service.some(function(item) { //if filter[curretStageColour][red]\r\n            return obj[prop][item[prop]] === true;\r\n        })\r\n    }\r\n\r\n    $scope.filterByPropertiesMatchingAND = function (data) { //all data sent from filter \r\n        var matchesAND = true; //set macthes to true (default)\r\n\r\n        for (var obj in $scope.filter) { //$scope.filter is populated by $scope.filter within the panel controller below. Scope filter properties are initiated from front-end. currentStageColour/serviceType\r\n\r\n            if( $scope.filter.hasOwnProperty(obj) ) {\r\n                if (noSubFilter($scope.filter[obj])) continue; //Check if there are any sub filter options with the value of true, if so, break from loop to return value of true\r\n                if (!checkArray($scope.filter, data.p3sServices, obj)) { //If the property from the data matches the property from $scope.filter ($scope.filter) return false. It will not turn up in the table\r\n                    matchesAND = false;\r\n                    break; //break from the loop and return matchesAND which would now return false\r\n                }\r\n                \r\n            }\r\n        }\r\n        return matchesAND;\r\n    }; \r\n\r\n    function updatePortfolioData() {\r\n        PatentsRestService.fetchAllPatents()\r\n        .then(function(response) {\r\n            $scope.portfolioData = response;            \r\n            vm.recentlyAdded.push(response.slice(-1).pop())\r\n        })        \r\n\r\n    }\r\n\r\n    $scope.promise //assigned promise to scope so child state can also resolve this promise to invoke functions\r\n    .then(function(response) {\r\n        if ($scope.$$destroyed) throw \"Scope destroyed\";\r\n        return response;\r\n    })\r\n    .then(\r\n        function(response){\r\n\r\n            if(!response.length) {\r\n                vm.noPatents = true;\r\n            }\r\n\r\n            response.forEach(function(data){\r\n                if(data.clientRef == '') {\r\n                    data.clientRef = '[No Client Reference Provided]'\r\n                }\r\n            })\r\n\r\n            vm.select = select;\r\n            vm.selected = 0;\r\n            vm.stateParams = $stateParams.patentId; \r\n            vm.rowSelect = rowSelect;\r\n            vm.chipOptions = [];\r\n            vm.showFilter = showFilter;\r\n            vm.showAddPatent = showAddPatent;\r\n            vm.portfolioLoaded = true;\r\n            vm.sortBy = sortBy;\r\n            $scope.selectedChip = selectedChip;\r\n            $scope.portfolioData = response;\r\n            $scope.portfolioLoaded = false;\r\n\r\n            vm.propertyName = 'ep_ApplicationNumber';\r\n            vm.reverse = false;\r\n\r\n            function sortBy(propertyName) {\r\n                vm.reverse = (vm.propertyName === propertyName) ? !vm.reverse : false;\r\n                vm.propertyName = propertyName;\r\n            };\r\n\r\n            function selectedChip(prop, value, cat) {\r\n                if(cat == 'Euro-PCT') {cat = 'epct'}\r\n                $scope.filter[cat][prop] = false;\r\n                // $scope.portfolioData = $scope.portfolioData;\r\n            }\r\n\r\n            function showFilter(mdMenu, $event) {\r\n         \r\n                mdMenu.open($event)\r\n                $scope.categories = ['serviceType', 'currentStageColour'];     \r\n\r\n                //return items to filter panel\r\n                $scope.getItems = function (obj, array) { //obj is cat currentStageColour or serviceType\r\n                    return (array || []).map(function (w) {\r\n                        return w.p3sServices[0][obj]; //select property in p3sservices \r\n                    }).filter(function (w, idx, arr) {\r\n                        if (typeof w === 'undefined') {\r\n                            return false;\r\n                        }\r\n                        return arr.indexOf(w) === idx;\r\n                    });\r\n                };\r\n\r\n                $scope.updateFiltered = function(prop, value, cat) {\r\n                    if(value === true) {\r\n                        if(cat === 'epct') {cat = 'Euro-PCT'};\r\n                        vm.chipOptions.push({cat: cat, value: value, prop: prop})\r\n                    } \r\n                    if(value === false) {\r\n                        var index = vm.chipOptions.indexOf(cat);\r\n                        vm.chipOptions.splice(index, 1);\r\n                    }\r\n                }\r\n\r\n                $scope.closeDialog = function() {\r\n                    $mdDialog.hide();                            \r\n                }\r\n\r\n            } //showFilter function end\r\n\r\n\r\n            function showAddPatent($event) {\r\n\r\n                var panelPosition = $mdPanel.newPanelPosition()\r\n                    .absolute()\r\n                    .center();\r\n\r\n                var config = {\r\n                    attachTo: angular.element(document.body),\r\n                    controller: ['mdPanelRef', '$scope', function(mdPanelRef, $scope) {\r\n\r\n                        $scope.recently = {\r\n                            added: []\r\n                        }\r\n                        $scope.foundPatent = false;\r\n\r\n                        $scope.findPatent = function(patentNo) {\r\n                            $scope.loadingPatent = true;\r\n                            SearchPatentService.findPatent(patentNo)\r\n                            .then(\r\n                                function(response) {\r\n                                    $scope.foundPatent = response.data;\r\n                                    $scope.loadingPatent = false;\r\n                                    $scope.error = false;\r\n                                    var patentJson = angular.toJson(response)\r\n                                },\r\n                                function(errResponse) {\r\n                                    console.error('Error finding patent. Error message : ', errResponse)\r\n                                    $scope.queriedPatent = false;\r\n                                    $scope.loadingPatent = false;\r\n                                    $scope.error = true;\r\n                                    // $state.go('search-patent', {}, {reload: false});\r\n                                    if(errResponse.status == 412) { //already added patent\r\n                                        $scope.searchError = 'It looks like we\\'ve already added Patent Application '+patentNo+' in to the system.  You should be able to find it in the List Patents page using the search boxes.';\r\n                                    } \r\n                                    if(errResponse.status == 409){ //incorrect check digit\r\n                                        $scope.searchError = 'It looks like the provided check digit differs from the check digit found at the European Patent Register. Please make sure the check digit is correct and try again.';\r\n                                    }\r\n                                    if(errResponse.status == 400) { //incorrect syntax\r\n                                        $scope.searchError = 'We\\'ve not been able to find that patent in the European Patent Register. Please enter an application number such as EP18123456.2';\r\n                                    }\r\n\r\n\r\n                                }\r\n                            )\r\n\r\n                        }  \r\n\r\n                        $scope.openConfirmModal = function(patent) {\r\n\r\n                            var modalInstance = $uibModal.open({\r\n                                templateUrl: 'app/templates/modals/modal.confirm-found-patent.tpl.htm',\r\n                                appendTo: undefined,\r\n                                controllerAs: '$ctrl',\r\n                                controller: ['$uibModalInstance', '$location', '$anchorScroll', function($uibModalInstance, $location, $anchorScroll) {\r\n\r\n                                    this.addPatent = function () {\r\n                                        vm.addingPatent = true;\r\n                                        $uibModalInstance.close();\r\n                                        PatentsRestService.savePatent(patent)\r\n                                        .then(\r\n                                            function(response){\r\n                                                \r\n                                                updatePortfolioData();\r\n\r\n                                                var match = response.find(function(item){\r\n                                                    return item.ep_ApplicationNumber == patent.ep_ApplicationNumber;\r\n                                                });\r\n\r\n                                                $scope.recently.added.push(match);\r\n                                                $scope.foundPatent = false;\r\n                                                $scope.searchPatent = '';\r\n\r\n\r\n                                            },\r\n                                            function(errResponse){\r\n                                                console.error('Error while saving Patent');\r\n                                            }\r\n                                        )\r\n\r\n                                    };\r\n\r\n                                 \r\n\r\n                                    this.dismissModal = function () {\r\n                                        $uibModalInstance.close();\r\n                                    };\r\n\r\n                                    this.cancelAdd = function() {\r\n                                        $uibModalInstance.close();                  \r\n                                    }\r\n\r\n                                }]\r\n                            })\r\n                        }\r\n\r\n                        $scope.$on('$destroy', function(){\r\n                            $timeout.cancel(toPatentTimeout)\r\n                        })                        \r\n\r\n                    }],\r\n                    controllerAs: '$ctrl',\r\n                    position: panelPosition,\r\n                    // animation: panelAnimation,\r\n                    hasBackdrop: true,\r\n                    targetEvent: $event,\r\n                    templateUrl: 'app/templates/portfolio/add-patent.tpl.htm',\r\n                    clickOutsideToClose: true,\r\n                    escapeToClose: true,\r\n                    focusOnOpen: true\r\n                };\r\n                $mdPanel.open(config)\r\n                .then(\r\n                    function(result) {\r\n                        panelRef = result;\r\n                    },\r\n                    function(error){\r\n                        console.error('Error occured when opening panel: ',error)\r\n                    }\r\n                );\r\n\r\n            } //showAddPatentPanel end]\r\n\r\n        }\r\n    )\r\n\r\n    //SEARCH ADD PATENT\r\n\r\n}","module.exports = __webpack_public_path__ + \"56426137b684cf1a7870e159148934a3.png\";","module.exports = __webpack_public_path__ + \"4803db4b92d3112ff026b67d8b01b03a.png\";","var map = {\n\t\"./index.js\": \"./node_modules/empty-module/index.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/empty-module sync js$\";","module.exports = \"<div class=\\\"widget-panel\\\">\\r\\n\\t<div class=\\\"widget-panel__body bg-white d-flex flex-column\\\">\\r\\n\\t\\t<div class=\\\"row m-b-md\\\">\\r\\n\\t\\t\\t<div class=\\\"col-xl-12 d-flex align-items-center justify-content-between\\\">\\r\\n\\t\\t\\t\\t<h3 class=\\\"font-h3 font-weight-bold\\\">Action Cost</h3>\\r\\n\\t\\t\\t\\t<h4 class=\\\"pill-radius bg-phase-green txt-white font-body p-default\\\" data-ng-if=\\\"$ctrl.fxTimeFrame\\\" data-ng-bind=\\\"$ctrl.fxTimeFrame\\\"></h4>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div data-ng-if=\\\"$ctrl.actionCost == undefined && !$ctrl.loading\\\" class=\\\"animate-show\\\">\\r\\n\\t\\t\\t<div class=\\\"row bg-no-data d-flex flex-grow-1 justify-content-center align-items-center\\\">\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-12 d-flex align-items-center justify-content-center z-index-1\\\">\\r\\n\\t\\t\\t\\t\\t<p class=\\\"font-body font-weight-bold\\\">Currently no fee breakdown information available</p>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"d-flex flex-grow-1 justify-content-center align-items-center\\\">\\r\\n\\t\\t\\t<div data-ng-if=\\\"$ctrl.loading\\\">\\r\\n\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t<i class=\\\"fas fa-cog fa-spin fa-2x\\\"></i>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div data-ng-if=\\\"!$ctrl.loading\\\" class=\\\"d-flex flex-column flex-grow-1\\\" data-ng-hide=\\\"$ctrl.actionCost == undefined\\\">\\r\\n\\t\\t\\t\\t<uib-tabset type=\\\"pills\\\" active=\\\"fxPeriodActiveTabs\\\" class=\\\"m-b-md\\\">\\r\\n\\t\\t\\t\\t\\t<uib-tab heading=\\\"Today\\\" class=\\\"font-body\\\" index=\\\"0\\\" data-ng-hide=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12 d-flex justify-content-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"text-center mr-5\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"font-h3 m-b-xs\\\">USD</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"font-h2\\\">$ {{$ctrl.actionCost.serviceCost.subTotalUSD | number: 2 }}</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"text-center d-flex align-items-center justify-content-center mr-5\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-exchange-alt fa-3x txt-grey m-t-xs m-b-xs\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"font-h3 m-b-xs\\\">EUR</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"font-h2\\\">€ {{$ctrl.actionCost.serviceCost.subTotalEUR | number: 2 }}</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</uib-tab>\\r\\n\\t\\t\\t\\t\\t<uib-tab heading=\\\"Yesterday\\\" class=\\\"font-body\\\" index=\\\"1\\\"  data-ng-hide=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12 d-flex justify-content-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"text-center mr-5\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"font-h3 m-b-xs\\\">USD</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"font-h2\\\">$ {{$ctrl.actionCost.serviceCost.costHistoryUI.subTotalUSDYesterday | number: 2 }}</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"text-center d-flex align-items-center justify-content-center mr-5\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-exchange-alt fa-3x txt-grey m-t-xs m-b-xs\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"font-h3 m-b-xs\\\">EUR</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"font-h2\\\">€ {{$ctrl.actionCost.serviceCost.costHistoryUI.subTotalEURYesterday | number: 2 }}</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</uib-tab>\\r\\n\\t\\t\\t\\t\\t<uib-tab heading=\\\"Last week\\\" class=\\\"font-body\\\" index=\\\"2\\\" data-ng-hide=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12 d-flex justify-content-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"text-center mr-5\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"font-h3 m-b-xs\\\">USD</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"font-h2\\\">$ {{$ctrl.actionCost.serviceCost.costHistoryUI.subTotalUSDLastWeek | number: 2 }}</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"text-center d-flex align-items-center mr-5\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-exchange-alt fa-3x txt-grey m-t-xs m-b-xs\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"font-h3 m-b-xs\\\">EUR</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"font-h2\\\">€ {{$ctrl.actionCost.serviceCost.costHistoryUI.subTotalEURLastWeek | number: 2 }}</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</uib-tab>\\t\\r\\n\\t\\t\\t\\t\\t<uib-tab heading=\\\"Last Mth\\\" class=\\\"font-body\\\" index=\\\"3\\\" data-ng-hide=\\\"true\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12 d-flex justify-content-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"text-center mr-5\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"font-h3 m-b-xs\\\">USD</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"font-h2\\\">$ {{$ctrl.actionCost.serviceCost.costHistoryUI.subTotalUSDLastMonth | number: 2 }}</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"text-center d-flex align-items-center mr-5\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-exchange-alt fa-3x txt-grey m-t-xs m-b-xs\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"font-h3 m-b-xs\\\">EUR</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"font-h2\\\">€ {{$ctrl.actionCost.serviceCost.costHistoryUI.subTotalEURLastMonth | number: 2 }}</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</uib-tab>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</uib-tabset>\\r\\n\\t\\t\\t\\t<div class=\\\"row m-b-md d-md-none d-lg-none d-xl-block\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-12 col-lg-12 col-xl-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ul class=\\\"panel-nav d-flex justify-content-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"pill-radius panel-nav__list-item list-item--plain mr-5\\\" data-ng-init=\\\"$ctrl.fxTimeFrame = 'Today'; fxPeriodActiveTabs = 0\\\" data-ng-click=\\\"$ctrl.fxTimeFrame = 'Today'; fxPeriodActiveTabs = 0\\\" data-ng-hide=\\\"$ctrl.fxTimeFrame == 'Today'\\\">Today</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"pill-radius panel-nav__list-item list-item--plain mr-5\\\" data-ng-click=\\\"$ctrl.fxTimeFrame = 'Yesterday'; fxPeriodActiveTabs = 1\\\" data-ng-hide=\\\"$ctrl.fxTimeFrame == 'Yesterday'\\\">Yesterday</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"pill-radius panel-nav__list-item list-item--plain mr-5\\\" data-ng-click=\\\"$ctrl.fxTimeFrame = 'Last Week'; fxPeriodActiveTabs = 2\\\" data-ng-hide=\\\"$ctrl.fxTimeFrame == 'Last Week'\\\">Last Week</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"pill-radius panel-nav__list-item list-item--plain mr-5\\\" data-ng-click=\\\"$ctrl.fxTimeFrame = 'Last Mth'; fxPeriodActiveTabs = 3\\\" data-ng-hide=\\\"$ctrl.fxTimeFrame == 'Last Mth'\\\">Last Mth</li>\\r\\n\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xl-8 text-left\\\">\\r\\n\\t\\t\\t\\t\\t\\t<p class=\\\"font-h4 font-weight-bold\\\">Four week variation: \\r\\n\\t\\t\\t\\t\\t\\t\\t<span  class=\\\"font-h4 text-right m-l-xs\\\" data-ng-class=\\\"$ctrl.actionCost.serviceCost.subTotalUSD <= $ctrl.actionCost.serviceCost.costHistoryUI.subTotalUSDLastMonth ? 'txt-phase-green': 'txt-phase-red'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-caret-down fa-sm\\\" data-ng-if=\\\"$ctrl.actionCost.serviceCost.subTotalUSD < $ctrl.actionCost.serviceCost.costHistoryUI.subTotalUSDLastMonth\\\"></i>\\r\\n\\t\\t                    \\t<i class=\\\"fa fa-caret-up fa-sm\\\" data-ng-if=\\\"$ctrl.actionCost.serviceCost.subTotalUSD > $ctrl.actionCost.serviceCost.costHistoryUI.subTotalUSDLastMonth\\\"></i>\\r\\n\\t\\t                    \\t$ {{($ctrl.actionCost.serviceCost.costHistoryUI.subTotalUSDLastMonth - $ctrl.actionCost.serviceCost.subTotalUSD | number: 2)  || '0.00'}}\\r\\n\\t\\t                    </span>\\r\\n\\t                \\t</p>     \\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-xl-4 text-right\\\">\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"row m-t-sm\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-xl-12 d-flex justify-content-end align-items-center\\\">\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"d-flex justify-content-between align-items-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div data-ng-show=\\\"$ctrl.cartService == 'renewal'\\\">\\r\\n\\t\\t\\t\\t\\t \\t\\t\\t<ngcart-addtocart id=\\\"{{$ctrl.actionCost.patentID}}\\\" class=\\\"cartbtn\\\" name=\\\"service.renewal\\\" price=\\\"{{$ctrl.actionCost.serviceCost.subTotalUSD}}\\\" quantity=\\\"1\\\" quantity-max=\\\"10\\\" data=\\\"$ctrl.patent\\\">\\r\\n\\t\\t\\t\\t \\t\\t\\t\\t</ngcart-addtocart>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div data-ng-show=\\\"$ctrl.cartService == 'form1200'\\\">\\r\\n\\t\\t\\t\\t\\t \\t\\t\\t<ngcart-addtocart id=\\\"{{$ctrl.actionCost.patentID}}\\\" class=\\\"cartbtn\\\" name=\\\"service.form1200\\\" price=\\\"{{$ctrl.actionCost.serviceCost.subTotalUSD}}\\\" quantity=\\\"1\\\" quantity-max=\\\"10\\\" data=\\\"$ctrl.patent\\\">\\r\\n\\t\\t\\t\\t \\t\\t\\t\\t</ngcart-addtocart>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div data-ng-show=\\\"$ctrl.actionCost.serviceStatus !== null\\\">\\r\\n\\t\\t\\t\\t        \\t\\t<button class=\\\"btn btn--lg btn--green pill-radius m-l-sm\\\" data-ui-sref=\\\"portfolio.patent({patentId: $ctrl.actionCost.patentID})\\\">View Patent</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t        \\t<transaction-link data-ng-show=\\\"$ctrl.actionCost.serviceStatus == ('Payment in progress' || 'EPO Instructed')\\\" trans-id=\\\"{{$ctrl.actionCost.patentID}}\\\"></transaction-link>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div><!-- valid action cost body end-->\\r\\n\\t</div>\\r\\n</div>\";","module.exports = \"<div class=\\\"widget-panel\\\">\\r\\n    <uib-tabset type=\\\"pills\\\" class=\\\"pills bg-white panel-shadow-radius d-flex flex-column flex-grow-1\\\" active=\\\"$ctrl.availableActions\\\"> <!-- data-ng-show=\\\"$ctrl.phaseLoaded && $ctrl.patents !== '' && $ctrl.selectedPatent !== ''\\\" -->\\r\\n        <div class=\\\"row d-flex flex-grow-1\\\">\\r\\n            <div class=\\\"col-md-12 d-flex flex-grow-1 justify-content-between\\\">                      \\r\\n                <div class=\\\"p-panel p-b-none\\\">\\r\\n                    <h3 class=\\\"font-h3 m-r-sm font-weight-bold\\\">Actions Available</h3>\\r\\n                </div>  \\r\\n                <nav class=\\\"m-r-lg\\\">\\r\\n                    <ul class=\\\"panel-nav\\\">\\r\\n                        <li class=\\\"txt-phase-green green panel-nav__colour-item font-weight-medium\\\" data-ng-init=\\\"$ctrl.availableActions = 0;\\\" data-ng-class=\\\"{'active': $ctrl.availableActions === 0}\\\" data-ng-click=\\\"$ctrl.availableActions = 0; $ctrl.setPhase('Green')\\\">Green ({{$ctrl.patents.Green.length || '0'}})</li>\\r\\n                        <li class=\\\"txt-phase-amber amber panel-nav__colour-item font-weight-medium\\\" data-ng-class=\\\"{'active': $ctrl.availableActions === 1}\\\" data-ng-click=\\\"$ctrl.availableActions = 1; $ctrl.setPhase('Amber')\\\">Amber ({{$ctrl.patents.Amber.length || '0'}})</li>\\r\\n                        <li class=\\\"txt-phase-red red panel-nav__colour-item font-weight-medium\\\" data-ng-class=\\\"{'active': $ctrl.availableActions === 2}\\\" data-ng-click=\\\"$ctrl.availableActions = 2; $ctrl.setPhase('Red')\\\">Red ({{$ctrl.patents.Red.length || '0'}})</li>\\r\\n                        <li class=\\\"txt-phase-blue blue panel-nav__colour-item font-weight-medium\\\" data-ng-class=\\\"{'active': $ctrl.availableActions === 3}\\\" data-ng-click=\\\"$ctrl.availableActions = 3; $ctrl.setPhase('Blue')\\\">Blue ({{$ctrl.patents.Blue.length || '0'}})</li>\\r\\n                        <li class=\\\"txt-phase-black black panel-nav__colour-item font-weight-medium\\\" data-ng-class=\\\"{'active': $ctrl.availableActions === 4}\\\" data-ng-click=\\\"$ctrl.availableActions = 4; $ctrl.setPhase('Black')\\\">Black ({{$ctrl.patents.Black.length || '0'}})</li>                     \\r\\n                    </ul>\\r\\n                </nav>              \\r\\n            </div>  \\r\\n                \\r\\n        </div>      \\r\\n        <uib-tab data-ng-repeat=\\\"(key, value) in $ctrl.patents track by $index\\\" data-ng-hide=\\\"true\\\" index=\\\"$index\\\">\\r\\n            <div data-ng-if=\\\"$ctrl.patents[key].length > 0\\\" class=\\\"scrollable-area dashboard-table scrollable-area--no-shadow animate-show\\\">\\r\\n                <table class=\\\"t-data sticky-table\\\">\\r\\n                    <thead class=\\\"sticky-thead\\\">                    \\r\\n                        <tr class=\\\"t-data__row\\\">\\r\\n                            <th class=\\\"t-data__th border-t-none sticky-th\\\">App No.</th>\\r\\n                            <th class=\\\"t-data__th border-t-none\\\">Client Ref</th>\\r\\n                            <th class=\\\"t-data__th border-t-none\\\">Current Stage</th>\\r\\n                            <th class=\\\"t-data__th border-t-none\\\">Next Stage</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody class=\\\"sticky-tbody\\\">\\r\\n                        <tr class=\\\"t-data__row t-data__row--select\\\" data-ng-repeat=\\\"item in $ctrl.patents[key] track by $index\\\" data-ng-click=\\\"$ctrl.setActionCost(item)\\\">\\r\\n                            <td class=\\\"t-data__td sticky-td\\\" data-ng-bind=\\\"item.ep_ApplicationNumber\\\"> </td>\\r\\n                            <td class=\\\"t-data__td\\\" data-ng-bind=\\\"item.clientRef || '[No Client Reference Provided]'\\\"></td>\\r\\n                            <td class=\\\"t-data__td\\\" data-ng-class=\\\"item.p3sServices[0].cssCurrent\\\">{{item.p3sServices[0].currentStageColour}}: {{$ctrl.date | date:'MM-dd-yy'}}</td> \\r\\n                            <td class=\\\"t-data__td\\\" data-ng-class=\\\"item.p3sServices[0].cssNext\\\">{{item.p3sServices[0].nextStageColour}}: {{item.p3sServices[0].costBandEndDate | date:'MM-dd-yy'}}</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n            <div data-ng-if=\\\"$ctrl.patents[key].length == 0\\\" class=\\\"animate-show\\\">\\r\\n                <div class=\\\"row flex-grow-1\\\">\\r\\n                    <div class=\\\"col-md-12 d-flex justify-content-center align-items-center z-index-1\\\">\\r\\n                        <div class=\\\"bg-no-data d-flex align-items-center justify-content-center\\\">\\r\\n                            <p class=\\\"font-body font-weight-bold text-center\\\">Currently there aren't any patents in this phase</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>      \\r\\n        </uib-tab>  \\r\\n    </uib-tabset>\\r\\n</div>\\r\\n\\r\\n\";","module.exports = \"<div class=\\\"widget-panel\\\">\\r\\n\\t<div class=\\\"widget-panel__body bg-white\\\">\\r\\n\\t\\t<div class=\\\"row m-b-md\\\">\\r\\n\\t\\t\\t<div class=\\\"col-md-12\\\">\\r\\n\\t\\t\\t\\t<h3 class=\\\"font-h3\\\"><span class=\\\"font-weight-bold\\\">FX Chart</span> - USD:EUR</h3>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<nvd3 options=\\\"$ctrl.lineOptions\\\" data=\\\"$ctrl.lineData\\\" class=\\\"with-transitions\\\"></nvd3> <!--xAxisTickFormat=\\\"xAxisTickFormatFunction()\\\"-->\\r\\n\\t</div>\\r\\n</div>\";","module.exports = \"<div class=\\\"widget-panel widget-panel-sq\\\">\\r\\n\\t<div class=\\\"widget-panel__body bg-white d-flex flex-column\\\">\\r\\n\\t\\t<div class=\\\"row m-b-md\\\">\\r\\n\\t\\t\\t<div class=\\\"col-xl-12\\\">\\r\\n\\t\\t\\t\\t<h3 class=\\\"font-h3 font-weight-bold\\\">Total Patents</h3>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"row d-flex flex-grow-1 just-content-center align-items-center\\\">\\r\\n\\t\\t\\t<div class=\\\"col-md-12 col-lg-8 col-xl-8\\\">\\r\\n\\t\\t\\t\\t<nvd3 options=\\\"$ctrl.donutOptions\\\" data=\\\"$ctrl.donutData\\\" class=\\\"with-transitions\\\"></nvd3>\\r\\n\\t\\t\\t\\t<div class=\\\"donut-inner\\\">\\r\\n\\t\\t\\t\\t\\t<h4 class=\\\"font-h4 font-weight-bold\\\">Total</h4>\\r\\n\\t\\t\\t\\t\\t<span class=\\\"font-h2 font-weight-bold\\\">{{$ctrl.patentData.Total || 0}}</span>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<!--check whether it works when its back online-->\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-md-6 col-lg-4 col-xl-4 d-none d-md-none d-lg-block\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"d-flex align-items-center h-100\\\">\\r\\n\\t\\t\\t\\t\\t<ul class=\\\"nav flex-column font-h4\\\">\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"m-b-sm\\\"><i class=\\\"txt-phase-green fas fa-square m-r-xs\\\"></i><span>Green: <span data-ng-bind=\\\"$ctrl.patentData.Green.length || '0'\\\"></span></span></li>\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"m-b-sm\\\"><i class=\\\"txt-phase-amber fas fa-square m-r-xs\\\"></i><span>Amber: <span data-ng-bind=\\\"$ctrl.patentData.Amber.length || '0'\\\"></span></span></li>\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"m-b-sm\\\"><i class=\\\"txt-phase-red fas fa-square m-r-xs\\\"></i><span>Red: <span data-ng-bind=\\\"$ctrl.patentData.Red.length || '0'\\\"></span></span></li>\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"m-b-sm\\\"><i class=\\\"txt-phase-blue fas fa-square m-r-xs\\\"></i><span>Blue: <span data-ng-bind=\\\"$ctrl.patentData.Blue.length || '0'\\\"></span></span></li>\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"m-b-sm\\\"><i class=\\\"txt-phase-black fas fa-square m-r-xs\\\"></i><span>Black: <span data-ng-bind=\\\"$ctrl.patentData.Black.length || '0'\\\"></span></span></li>\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"m-b-sm\\\"><i class=\\\"txt-phase-grey fas fa-square m-r-xs\\\"></i><span>Grey: <span data-ng-bind=\\\"$ctrl.patentData.Grey.length || '0'\\\"></span></span></li>\\r\\n\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\";","module.exports = \"<div class=\\\"widget-panel\\\">\\r\\n\\t<uib-tabset type=\\\"pills\\\" class=\\\"pills bg-white panel-shadow-radius d-flex flex-column flex-grow-1\\\" active=\\\"$ctrl.activeActivityTab\\\"> \\r\\n\\t\\t<div class=\\\"row d-flex flex-grow-1\\\">\\r\\n\\t\\t\\t<div class=\\\"col-md-12 d-flex flex-grow-1 justify-content-between\\\">\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\\"p-panel p-b-none\\\">\\r\\n\\t\\t\\t\\t\\t<h3 class=\\\"font-h3 font-weight-bold\\\">Recent Activity</h3>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<nav class=\\\"m-r-lg\\\">\\r\\n\\t\\t\\t\\t\\t<ul class=\\\"panel-nav\\\">\\r\\n\\t\\t\\t\\t\\t\\t<li data-ng-repeat=\\\"item in $ctrl.activityNotifications track by $index\\\" class=\\\"panel-nav__temp-item py-4\\\" data-ng-click=\\\"$ctrl.setActivityActiveTab(item.activity, $ctrl.activeActivityTab); $ctrl.activeActivityTab = item.index; $ctrl.changeActivity(item.activity)\\\" data-ng-class=\\\"{active : $ctrl.activeMenu == item.activity}\\\">{{item.activity}}</li>\\r\\n\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t</nav>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<uib-tab data-ng-hide=\\\"true\\\" index=\\\"0\\\">\\r\\n\\t\\t\\t<div class=\\\"row bg-no-data\\\" data-ng-show=\\\"$ctrl.recentActivityData.length === 0\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-12 col-lg-12 d-flex align-items-center justify-content-center z-index-1\\\">\\r\\n\\t\\t\\t\\t\\t<p class=\\\"font-weight-bold\\\">There is no recent activity to report</p>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t    \\t<div data-ng-hide=\\\"$ctrl.recentActivityData.length === 0\\\" class=\\\"scrollable-area dashboard-table scrollable-area--no-shadow animate-show\\\">\\r\\n\\t\\t\\t\\t<table class=\\\"t-data sticky-table\\\">\\r\\n\\t\\t\\t\\t\\t<thead class=\\\"sticky-thead\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr class=\\\"t-data__row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<th class=\\\"t-data__th border-t-none sticky-th\\\">App No.</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th class=\\\"t-data__th border-t-none\\\">Client Ref</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th class=\\\"t-data__th border-t-none\\\">Current Cost</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th class=\\\"t-data__th border-t-none\\\">Next Stage</th>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</thead>\\r\\n                    <tbody class=\\\"sticky-tbody\\\">\\r\\n                    \\t<tr class=\\\"t-data__row t-data__row--select\\\" data-ng-repeat=\\\"patent in $ctrl.recentActivityData\\\">\\r\\n\\t                    \\t<td class=\\\"t-data__td sticky-td\\\" data-ng-bind=\\\"patent.ep_ApplicationNumber\\\">\\r\\n\\t                    \\t\\t\\r\\n\\t                    \\t</td>\\r\\n\\t                    \\t<td class=\\\"t-data__td\\\" data-ng-bind=\\\"patent.clientRef || '[No Client Reference Provided]'\\\">\\r\\n\\t                    \\t\\t\\r\\n\\t                    \\t</td>\\r\\n\\r\\n\\t                    \\t<td class=\\\"t-data__td font-weight-medium\\\" data-ng-class=\\\"patent.p3sServices[0].cssCurrent\\\">\\r\\n\\t                    \\t\\t{{patent.p3sServices[0].currentStageColour}}: {{$ctrl.date | date:'MM-dd-yy'}}\\r\\n\\t                    \\t</td>\\r\\n\\t                    \\t<td class=\\\"t-data__td font-weight-medium\\\" data-ng-class=\\\"patent.p3sServices[0].cssNext\\\">\\r\\n\\t                    \\t\\t{{patent.p3sServices[0].nextStageColour}}: {{patent.p3sServices[0].costBandEndDate | date:'MM-dd-yy'}}\\r\\n\\t                    \\t</td>\\t\\t\\t\\t                    \\t\\t\\t\\t\\t                    \\t\\t\\t\\t\\t                    \\t\\t\\t\\t\\t                    \\t\\r\\n                    \\t</tr>\\r\\n                    </tbody>\\r\\n    \\t\\t\\t</table>\\r\\n        \\t</div>\\t\\t<!--row end-->\\t\\t\\r\\n\\t\\t</uib-tab>\\r\\n\\t    <uib-tab data-ng-hide=\\\"true\\\" index=\\\"1\\\">\\r\\n\\t\\t\\t<div class=\\\"row bg-no-data\\\" data-ng-show=\\\"$ctrl.recentTransArr.length === 0\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-12 col-lg-12 d-flex align-items-center justify-content-center z-index-1\\\">\\r\\n\\t\\t\\t\\t\\t<p class=\\\"font-weight-bold\\\">There is no recent activity to report</p>\\r\\n\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t    <div data-ng-hide=\\\"$ctrl.recentTransArr.length === 0\\\"  class=\\\"scrollable-area dashboard-table scrollable-area--no-shadow animate-show\\\">\\r\\n\\t\\t\\t\\t<table class=\\\"t-data sticky-table\\\">\\r\\n\\t\\t\\t\\t\\t<thead class=\\\"sticky-thead\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr class=\\\"t-data__row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<th class=\\\"t-data__th border-t-none sticky-th\\\">Trans ID</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th class=\\\"t-data__th border-t-none\\\">Trans Date</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th class=\\\"t-data__th border-t-none\\\">Patents</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th class=\\\"t-data__th border-t-none\\\">Total</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th class=\\\"t-data__th border-t-none\\\">Trans status</th>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</thead>\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<tbody class=\\\"sticky-tbody\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr class=\\\"t-data__row t-data__row--select\\\"  data-ng-repeat=\\\"trans in $ctrl.recentTransArr\\\" data-ui-sref=\\\"current-transactions.current-transaction-item({transId: trans.id})\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<td class=\\\"t-data__td sticky-th\\\">{{trans.p3S_TransRef}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td class=\\\"t-data__td\\\">{{trans.transStartDate | date:'MM-dd-yy'}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td class=\\\"t-data__td\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span data-ng-repeat=\\\"item in trans.renewalUIs\\\" data-ng-if=\\\"trans.renewalUIs.length == 1\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{item.patentUI.patentApplicationNumber}}<br>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<select data-ng-if=\\\"trans.renewalUIs.length > 1\\\" data-ng-options=\\\"item.patentUI.patentApplicationNumber for item in trans.renewalUIs\\\" data-ng-model=\\\"data.selectedOption\\\" class=\\\"pill-radius form-control\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled selected>Multiple</option>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td class=\\\"t-data__td\\\">$ {{trans.transAmount_USD | number: 2 }}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td class=\\\"t-data__td\\\">{{trans.latestTransStatus}}</td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</uib-tab>\\t\\t\\t\\t\\r\\n\\t</uib-tabset>\\r\\n</div>\";","module.exports = \"<div class=\\\"m-b-xl d-flex flex-column flex-grow-1\\\">\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col-sm-12\\\">\\r\\n\\t\\t\\t<h1 class=\\\"font-h1 lh-default\\\">Dashboard</h1>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div data-ng-hide=\\\"$ctrl.dashboardLoaded\\\" class=\\\"animate-hide d-flex flex-column justify-content-center align-items-center flex-grow-1\\\">\\r\\n        <i class=\\\"fas fa-cog fa-spin fa-2x m-b-xs\\\"></i>\\r\\n        <p>We are just preparing your dashboard</p>\\r\\n\\t</div>\\r\\n\\t<div data-ng-show=\\\"$ctrl.dashboardLoaded\\\" class=\\\"animate-show\\\">\\r\\n\\t\\t<div class=\\\"row m-b-xl lg-m-b-md widget-row-top\\\">\\r\\n\\t\\t\\t<div class=\\\"col-md-12 col-lg-12 col-xl-7 md-m-b-md lg-m-b-md\\\">\\r\\n\\t\\t\\t\\t<div ui-view=\\\"actionsavailable\\\" class=\\\"h-100\\\"></div>\\r\\n\\t\\t\\t</div>\\t            \\r\\n\\t\\t\\t<div class=\\\"col-xl-5 d-none d-xl-flex flex-column lg-m-b-md\\\">\\r\\n\\t\\t\\t\\t<div ui-view=\\\"actioncost\\\" class=\\\"h-100\\\"></div>\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t \\t\\t<div class=\\\"col-md-12 col-lg-6 d-xl-none md-m-b-md\\\">\\r\\n\\t\\t\\t\\t<div ui-view=\\\"actioncostmd\\\" class=\\\"h-100\\\"></div>\\r\\n\\t\\t\\t</div>\\t\\t\\r\\n\\t\\t\\t<div class=\\\"col-md-12 col-lg-6 col-xl-5 d-md-none d-lg-block d-xl-none\\\">\\r\\n\\t\\t\\t\\t<div ui-view=\\\"graphdonutwidget\\\" class=\\\"h-100\\\"></div>\\r\\n\\t\\t\\t</div>\\t\\t\\t\\t\\t\\r\\n\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"row m-b-xl lg-m-b-md widget-row-middle\\\">\\r\\n\\t\\t\\t<div class=\\\"col-md-12 col-lg-12 col-xl-7 m-b-md-md\\\">\\r\\n\\t\\t\\t\\t<div ui-view=\\\"recentactivitywidget\\\" class=\\\"h-100\\\"></div>\\r\\n\\t\\t\\t</div>\\t\\t\\r\\n\\r\\n\\t\\t\\t<div class=\\\"col-md-12 col-lg-6 col-xl-5  d-md-block d-lg-none d-xl-block\\\">\\r\\n\\t\\t\\t\\t<div ui-view=\\\"graphdonutwidget\\\" class=\\\"h-100\\\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"row m-b-xl d-md-none d-lg-block\\\">\\r\\n\\t\\t\\t<div class=\\\"col-md-12 col-lg-12 col-xl-12 lg-m-b-md \\\">\\r\\n\\t\\t\\t\\t<div ui-view=\\\"fxchartwidget\\\" class=\\\"h-100\\\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\";","module.exports = \"<div data-ng-show=\\\"data.length === 0\\\" class=\\\"col-md-12\\\">\\r\\n    <div class=\\\"bg-white p-a-sm\\\">\\r\\n        <p class=\\\"font-weight-medium\\\">We are sorry but no results were returned from you search criteria. Please try again.</p>\\r\\n    </div>\\r\\n</div>\\r\\n<div data-ng-hide=\\\"$ctrl.portfolioLoaded\\\" class=\\\"animate-hide d-flex flex-column justify-content-center align-items-center flex-grow-1\\\">\\r\\n    <i class=\\\"fas fa-cog fa-spin fa-2x m-b-xs\\\"></i>\\r\\n    <p>We are just fetching your patents</p>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div data-ng-show=\\\"$ctrl.portfolioLoaded\\\" class=\\\"animate-show container__scrollable-area\\\">\\r\\n    <div class=\\\"p-l-3 p-r-3 p-tb-sm br-tx-1\\\">                            \\r\\n        <div class=\\\"d-flex justify-content-between align-items-center\\\">\\r\\n            <div class=\\\"d-flex\\\">\\r\\n                <h1 class=\\\"font-h1 lh-default m-r-lg\\\">Portfolio</h1>\\r\\n            </div>\\r\\n            <div class=\\\"d-flex align-items-center\\\">\\r\\n                <md-chips data-ng-model=\\\"$ctrl.chipOptions\\\" readonly=\\\"true\\\" md-removable=\\\"true\\\" class=\\\"text-capitalize font-weight-medium cursor-pointer\\\" md-on-remove=\\\"selectedChip($chip.prop, $chip.value, $chip.cat); getItems($chip.cat, portfolioData)\\\">\\r\\n                    <md-chip-template>\\r\\n                        <strong class=\\\"font-body\\\"><span data-ng-show=\\\"{{$chip.prop}} == 'epct'\\\">Euro-PCT</span><span data-ng-hide=\\\"{{$chip.prop}} == 'epct'\\\">{{$chip.prop}}</span></strong>\\r\\n                        <em class=\\\"font-body\\\" data-ng-if=\\\"$chip.cat ==='serviceType'\\\">(action)</em><em class=\\\"font-body\\\" data-ng-if=\\\"$chip.cat ==='currentStageColour'\\\">(phase)</em>                     \\r\\n                    </md-chip-template>\\r\\n                    <!-- <md-icon><i class=\\\"d-flex input-group-text pill-radius fa fa-search\\\"></i></md-icon> -->\\r\\n                </md-chips>\\r\\n                <div class=\\\"m-r-lg\\\">\\r\\n                    <div class=\\\"input-group mb-2 m-r-sm\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control pill-radius\\\" name=\\\"portfolioSearch\\\" data-ng-model=\\\"searchPortfolio\\\" placeholder=\\\"Search Portfolio...\\\" autocomplete=\\\"off\\\">\\r\\n                        <div class=\\\"input-group-append\\\">\\r\\n                            <div class=\\\"input-group-text\\\">\\r\\n                                <i class=\\\"fa fa-search fa-2x\\\"></i>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>                    \\r\\n                </div>\\r\\n                <div>\\r\\n                    <md-menu md-position-mode=\\\"target-right target\\\">\\r\\n                        <md-button class=\\\"icon-stretch icon-stretch--icon black pill-radius\\\" data-ng-click=\\\"$ctrl.showFilter($mdMenu, $event)\\\">\\r\\n                            <span class=\\\"icon-text\\\">Filter</span>              \\r\\n                            <i class=\\\"fal fa-filter fa-2x cursor-pointer icon\\\"></i> \\r\\n                        </md-button>\\r\\n                        <md-menu-content class=\\\"container-filter-list\\\">\\r\\n                            <md-list class=\\\"box\\\" data-ng-repeat=\\\"cat in categories\\\" ng-init=\\\"filter[cat]={}\\\">\\r\\n                                <md-subheader class=\\\"md-no-sticky\\\">\\r\\n                                    <h2 class=\\\"font-h3\\\">{{cat == 'currentStageColour' ? 'Current Stage Colour' : 'European Action'}}</h2>\\r\\n                                </md-subheader>\\r\\n                                <md-list-item data-ng-repeat=\\\"value in getItems(cat, portfolioData)\\\">\\r\\n                                    <md-checkbox class=\\\"md-secondary\\\" data-ng-model=\\\"filter[cat][value]\\\" data-ng-change=\\\"updateFiltered(value, filter[cat][value], cat);\\\"> <!--used to update filtered patents totals, not filter portfolio-->\\r\\n                                    </md-checkbox>\\r\\n                                    <p>({{(filtered | filter:value:true).length}})&nbsp;\\r\\n                                        <span class=\\\"text-capitalize\\\" data-ng-if=\\\"value == 'GREY'\\\">Grey</span>\\r\\n                                        <span class=\\\"text-capitalize\\\" data-ng-if=\\\"value == 'epct'\\\">Euro-PCT</span>\\r\\n                                        <span class=\\\"text-capitalize\\\" data-ng-if=\\\"value !== 'epct' && value !== 'GREY'\\\">{{value}}</span>\\r\\n                                    </p>\\r\\n                                </md-list-item>\\r\\n                                <md-divider></md-divider>\\r\\n                            </md-list>\\r\\n                            <div layout=\\\"row\\\" class=\\\"demo-dialog-button\\\">\\r\\n                                <md-button md-autofocus flex class=\\\"md-primary\\\" data-ng-click=\\\"closeDialog();\\\">\\r\\n                                    Close\\r\\n                                </md-button>\\r\\n                            </div>\\r\\n                        </md-menu-content>\\r\\n                    </md-menu>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <md-button class=\\\"icon-stretch icon-stretch--icon green pill-radius\\\" data-ng-click=\\\"$ctrl.showAddPatent($event)\\\">\\r\\n                        <span class=\\\"icon-text\\\">Add Patent</span>\\r\\n\\r\\n                            <i class=\\\"fal fa-plus fa-2x txt-white cursor-pointer icon\\\"></i>\\r\\n                        </span>\\r\\n                    </md-button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"scrollable-area scrollable-area--full-height\\\">\\r\\n        <table class=\\\"t-data sticky-table\\\">\\r\\n            <thead class=\\\"sticky-thead\\\">\\r\\n                <tr class=\\\"t-data__row t-data__row--select\\\">\\r\\n                    <th class=\\\"t-data__th t-data__th--sm sticky-th\\\" data-ng-click=\\\"$ctrl.sortBy('ep_ApplicationNumber');\\\">\\r\\n                        <span>App No.</span>\\r\\n                        <span data-ng-show=\\\"$ctrl.propertyName == 'ep_ApplicationNumber' && !$ctrl.reverse\\\">\\r\\n                            <i class=\\\"fas fa-angle-down fa-lg\\\"></i>\\r\\n                        </span>\\r\\n                        <span data-ng-show=\\\"$ctrl.propertyName == 'ep_ApplicationNumber' && $ctrl.reverse\\\">\\r\\n                            <i class=\\\"fas fa-angle-up fa-lg\\\"></i>\\r\\n                        </span>\\r\\n                    </th>\\r\\n                    <th class=\\\"t-data__th t-data__th--md\\\" data-ng-click=\\\"$ctrl.sortBy('clientRef');\\\">\\r\\n                        <span>Client Ref</span>\\r\\n                        <span data-ng-show=\\\"$ctrl.propertyName == 'clientRef' && !$ctrl.reverse\\\">\\r\\n                            <i class=\\\"fas fa-angle-down fa-lg\\\"></i>\\r\\n                        </span>\\r\\n                        <span data-ng-show=\\\"$ctrl.propertyName == 'clientRef' && $ctrl.reverse\\\">\\r\\n                            <i class=\\\"fas fa-angle-up fa-lg\\\"></i>\\r\\n                        </span>                          \\r\\n                    </th>\\r\\n                    <th class=\\\"t-data__th t-data__th--md\\\" data-ng-click=\\\"$ctrl.sortBy('shortTitle');\\\">\\r\\n                        <span>Client Description</span>\\r\\n                        <span data-ng-show=\\\"$ctrl.propertyName == 'shortTitle' && !$ctrl.reverse\\\">\\r\\n                            <i class=\\\"fas fa-angle-down fa-lg\\\"></i>\\r\\n                        </span>\\r\\n                        <span data-ng-show=\\\"$ctrl.propertyName == 'shortTitle' && $ctrl.reverse\\\">\\r\\n                            <i class=\\\"fas fa-angle-up fa-lg\\\"></i>\\r\\n                        </span>                          \\r\\n                    </th>                    \\r\\n                    <th class=\\\"t-data__th t-data__th--sm\\\">\\r\\n                        <span>European Action</span>\\r\\n                    </th>\\r\\n                    <th class=\\\"t-data__th t-data__th--md\\\">\\r\\n                        <span>Patent Place Status</span>                        \\r\\n                    </th>\\r\\n                    <th class=\\\"t-data__th t-data__th--sm\\\">\\r\\n                        <span>Current Phase</span>\\r\\n                    </th>\\r\\n                    <th class=\\\"t-data__th t-data__th--sm\\\">\\r\\n                        <span>Next Phase</span>    \\r\\n                    </th>                    \\r\\n                    <th class=\\\"t-data__th t-data__th--md\\\">\\r\\n                        <span></span>\\r\\n                    </th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            \\r\\n            <tbody class=\\\"sticky-tbody\\\">\\r\\n                <tr data-ng-repeat=\\\"patent in filtered=(portfolioData | filter:filterByPropertiesMatchingAND | filter:searchPortfolio) | orderBy:$ctrl.propertyName:$ctrl.reverse as Result\\\" data-ng-click=\\\"$ctrl.rowSelect($event, patent); $ctrl.select(patent.patentID)\\\"  class=\\\"t-data__row t-data__row--select\\\" data-ng-class=\\\"{active: patent.patentID == $ctrl.selected}\\\">\\r\\n                    <td class=\\\"t-data__td t-data__td--sm sticky-td\\\">\\r\\n                        <a class=\\\"t-data__a\\\" data-ng-bind=\\\"patent.ep_ApplicationNumber\\\" data-ng-attr-id=\\\"{{patent.patentID}}\\\"></a>\\r\\n                    </td>\\r\\n                    <td class=\\\"t-data__td t-data__td--md\\\">\\r\\n                        <span class=\\\"txt-grey\\\" data-ng-if=\\\"patent.clientRef == ''\\\">[No client reference provided]</span>\\r\\n                        <span data-ng-if=\\\"patent.clientRef !== ''\\\">{{patent.clientRef}}</span>\\r\\n                    </td>\\r\\n                    <td class=\\\"t-data__td t-data__td--md\\\">\\r\\n                        <span class=\\\"txt-grey\\\" data-ng-if=\\\"patent.shortTitle == ''\\\">[No client reference provided]</span>\\r\\n                        <span data-ng-if=\\\"patent.shortTitle !== ''\\\">{{patent.shortTitle}}</span>\\r\\n                    </td>\\r\\n                    <td class=\\\"t-data__th--sm\\\">\\r\\n                        <table data-ng-if=\\\"patent.p3sServices.length == 1\\\">\\r\\n                            <tr>\\r\\n                                <td data-ng-repeat=\\\"item in patent.p3sServices track by $index\\\"  class=\\\"t-data__td\\\">\\r\\n                                    <div class=\\\"d-flex justify-content-left btn-underlined-selector\\\">\\r\\n                                        <span data-ng-bind=\\\"item.serviceType\\\" data-ng-if=\\\"item.serviceType !== 'postgrant' && item.serviceType !== 'epct'\\\" class=\\\"text-capitalize\\\"></span>\\r\\n                                        <span data-ng-if=\\\"item.serviceType == 'epct'\\\" class=\\\"text-capitalize\\\">Euro-PCT</span>\\r\\n                                        <span data-ng-if=\\\"item.serviceType == 'postgrant'\\\" class=\\\"text-capitalize\\\">----</span>\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </table>\\r\\n                        <table data-ng-if=\\\"patent.p3sServices.length > 1\\\">\\r\\n                            <tr data-ng-repeat=\\\"item in patent.p3sServices track by $index\\\">\\r\\n                                <td class=\\\"t-data__td\\\">\\r\\n                                    <div class=\\\"d-flex justify-content-left btn-underlined-selector\\\">\\r\\n                                        <span data-ng-bind=\\\"item.serviceType\\\" class=\\\"text-capitalize\\\"></span>\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </table>                                \\r\\n                    </td><!--when multiple services begin-->                    \\r\\n                    <td class=\\\"t-data__td--md p-t-none p-b-none\\\" >\\r\\n                        <table data-ng-if=\\\"patent.p3sServices.length == 1\\\">\\r\\n                            <tr>\\r\\n                                <td data-ng-repeat=\\\"item in patent.p3sServices track by $index\\\" class=\\\"t-data__td\\\">\\r\\n                                    <div data-ng-if=\\\"!item.isUrgentAttention\\\"> <!-- cover manual processing-->\\r\\n                                        <span data-ng-bind=\\\"item.serviceStatusUI\\\" class=\\\"font-weight-medium\\\"></span>\\r\\n                                    </div>\\r\\n                                    <div data-ng-if=\\\"item.isUrgentAttention\\\"> <!-- cover manual processing-->\\r\\n                                        <p class=\\\"txt-phase-red\\\">URGENT ACTION REQUIRED</p>\\r\\n                                    </div>                                            \\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </table>                       \\r\\n                        <table data-ng-if=\\\"patent.p3sServices.length > 1\\\">\\r\\n                            <tr data-ng-repeat=\\\"item in patent.p3sServices track by $index\\\">\\r\\n                                <td class=\\\"t-data__td\\\">\\r\\n                                    <div data-ng-if=\\\"!item.isUrgentAttention\\\"> <!-- cover manual processing-->\\r\\n                                        <span data-ng-bind=\\\"item.serviceStatusUI\\\" class=\\\"font-weight-medium\\\"></span>\\r\\n                                    </div>\\r\\n                                    <div data-ng-if=\\\"item.isUrgentAttention\\\"> <!-- cover manual processing-->\\r\\n                                        <p class=\\\"txt-phase-red\\\">URGENT ACTION REQUIRED</p>\\r\\n                                    </div>                                            \\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </table>                         \\r\\n                    </td><!--patent place status-->\\r\\n                    <td class=\\\" t-data__td--sm\\\">\\r\\n                        <table data-ng-if=\\\"patent.p3sServices.length == 1\\\">\\r\\n                            <td data-ng-repeat=\\\"item in patent.p3sServices track by $index\\\" class=\\\"t-data__td\\\">\\r\\n                                <div data-ng-if=\\\"item.saleType === 'Online' || item.saleType === 'Offline'\\\">\\r\\n                                    <div class=\\\"d-flex flex-column\\\">\\r\\n                                        <div class=\\\"d-flex justify-content-start align-items-center\\\"><!--display costs-->\\r\\n                                            <p class=\\\"font-weight-bold m-r-sm\\\"><i class=\\\"fas fa-circle m-r-xs\\\" data-ng-class=\\\"item.cssCurrent\\\"></i>$ {{item.currentStageCostUSD | number: 2}}</p>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div data-ng-if=\\\"item.saleType !== 'Online' && item.saleType !== 'Offline' && item.serviceStatus !== 'Epct being generated'\\\">\\r\\n                                    <p class=\\\"txt-grey\\\">N/A</p>\\r\\n                                </div>                                \\r\\n                            </td>\\r\\n                        </table>\\r\\n                        <table data-ng-if=\\\"patent.p3sServices.length > 1\\\">\\r\\n                            <tr data-ng-repeat=\\\"item in patent.p3sServices track by $index\\\">\\r\\n                                <td class=\\\"t-data__td\\\">\\r\\n                                    <div data-ng-if=\\\"item.saleType === 'Online' || item.saleType === 'Offline'\\\">\\r\\n                                        <div class=\\\"d-flex flex-column\\\">\\r\\n                                            <div class=\\\"d-flex justify-content-start align-items-center\\\"><!--display costs-->\\r\\n                                                <p class=\\\"font-weight-bold m-r-sm\\\"><i class=\\\"fas fa-circle m-r-xs\\\" data-ng-class=\\\"item.cssCurrent\\\"></i>$ {{item.currentStageCostUSD | number: 2}}</p>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div data-ng-if=\\\"item.saleType !== 'Online' && item.saleType !== 'Offline' && item.serviceStatus !== 'Epct being generated'\\\">\\r\\n                                        <p class=\\\"txt-grey\\\">N/A</p>\\r\\n                                    </div>                                \\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </table>                                \\r\\n                    </td><!--when multiple services begin-->     \\r\\n                    <td class=\\\"t-data__th--sm\\\">\\r\\n                        <table data-ng-if=\\\"patent.p3sServices.length == 1\\\">\\r\\n                            <td data-ng-repeat=\\\"item in patent.p3sServices track by $index\\\" class=\\\"t-data__td\\\">\\r\\n                                <div data-ng-if=\\\"item.saleType === 'Online' || item.saleType === 'Offline'\\\">\\r\\n                                    <div class=\\\"d-flex flex-column\\\">\\r\\n                                        <div class=\\\"d-flex justify-content-start align-items-center\\\"><!--display costs-->\\r\\n\\r\\n                                            <p data-ng-if=\\\"(!item.isUrgentAttention && item.currentStageColour !== 'Black' && (item.saleType === 'Online' || item.saleType === 'Offline')) || (!item.isUrgentAttention && item.currentStageColour == 'Black' && (item.saleType === 'Online' || item.saleType === 'Offline'))\\\" class=\\\"font-weight-bold\\\"><i class=\\\"fas fa-circle m-r-xs\\\" data-ng-class=\\\"item.cssNext\\\"></i> $ {{item.nextStageCostUSD | number: 2}}</p> \\r\\n                                            <p data-ng-if=\\\"item.isUrgentAttention && item.currentStageColour == 'Black' && item.serviceType === 'renewal'\\\" class=\\\"font-weight-bold\\\">LAPSE</p> <!--if current colour is black and urgent attention required. Means that it is the second stage of black and is renewal-->\\r\\n                                            <p data-ng-if=\\\"item.isUrgentAttention && item.currentStageColour == 'Red' && item.serviceType !== 'renewal'\\\" class=\\\"font-weight-bold\\\">LAPSE</p> <!--if current colour is black and urgent attention required. Means that it is the second stage of black-->\\r\\n                                        </div>    \\r\\n                                    </div>\\r\\n                                </div>                            \\r\\n                                <div data-ng-if=\\\"item.saleType !== 'Online' && item.saleType !== 'Offline' && item.serviceStatus !== 'Epct being generated'\\\">\\r\\n                                    <p class=\\\"txt-grey\\\">N/A</p>\\r\\n                                </div>\\r\\n                            </td>\\r\\n                        </table>\\r\\n                        <table data-ng-if=\\\"patent.p3sServices.length > 1\\\">\\r\\n                            <tr data-ng-repeat=\\\"item in patent.p3sServices track by $index\\\">\\r\\n                                <td class=\\\"t-data__td\\\">\\r\\n                                    <div data-ng-if=\\\"item.saleType === 'Online' || item.saleType === 'Offline'\\\">\\r\\n                                        <div class=\\\"d-flex flex-column\\\">\\r\\n                                            <div class=\\\"d-flex justify-content-start align-items-center\\\"><!--display costs-->\\r\\n\\r\\n                                                <p data-ng-if=\\\"(!item.isUrgentAttention && item.currentStageColour !== 'Black' && (item.saleType === 'Online' || item.saleType === 'Offline')) || (!item.isUrgentAttention && item.currentStageColour == 'Black' && (item.saleType === 'Online' || item.saleType === 'Offline'))\\\" class=\\\"font-weight-bold\\\"><i class=\\\"fas fa-circle m-r-xs\\\" data-ng-class=\\\"item.cssNext\\\"></i> $ {{item.nextStageCostUSD | number: 2}}</p> \\r\\n                                                <p data-ng-if=\\\"item.isUrgentAttention && item.currentStageColour == 'Black' && item.serviceType === 'renewal'\\\" class=\\\"font-weight-bold\\\">LAPSE</p> <!--if current colour is black and urgent attention required. Means that it is the second stage of black and is renewal-->\\r\\n                                                <p data-ng-if=\\\"item.isUrgentAttention && item.currentStageColour == 'Red' && item.serviceType !== 'renewal'\\\" class=\\\"font-weight-bold\\\">LAPSE</p> <!--if current colour is black and urgent attention required. Means that it is the second stage of black-->\\r\\n                                            </div>    \\r\\n                                        </div>\\r\\n                                    </div>                            \\r\\n                                    <div data-ng-if=\\\"item.saleType !== 'Online' && item.saleType !== 'Offline' && item.serviceStatus !== 'Epct being generated'\\\">\\r\\n                                        <p class=\\\"txt-grey\\\">N/A</p>\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </table>                                \\r\\n                    </td><!--when multiple services begin-->     \\r\\n                    <td class=\\\"t-data__td t-data__td--md\\\">\\r\\n                        <table data-ng-if=\\\"patent.p3sServices.length == 1\\\">\\r\\n                            <tr>\\r\\n                                <td>\\r\\n                                    <div class=\\\"d-flex justify-content-center btn-underlined-selector\\\" data-ng-repeat=\\\"item in patent.p3sServices track by $index\\\">\\r\\n                                        <div data-ng-if=\\\"item.serviceType == 'epct'\\\">\\r\\n                                            <a data-ng-if=\\\"item.saleType == 'Online' && (item.serviceStatus === 'Epct available' || item.serviceStatus === 'Epct rejected')\\\" class=\\\"btn btn--bordered btn-underlined generateForm1200\\\">Generate Form 1200</a>\\r\\n\\r\\n                                            <ngcart-addtocart id=\\\"{{item.actionID}}\\\" class=\\\"tablebtn\\\" name=\\\"epct\\\" price=\\\"{{item.currentStageCostUSD}}\\\" quantity=\\\"1\\\" quantity-max=\\\"10\\\" data=\\\"patent\\\" data-ng-if=\\\"item.saleType == 'Online' && item.serviceStatus == 'Epct saved'\\\"> <!--secret to different button labels checkngcartdirective.js-->\\r\\n                                            </ngcart-addtocart>\\r\\n                                        </div>\\r\\n                                        <div data-ng-if=\\\"item.serviceType == 'renewal'\\\">\\r\\n                                            <ngcart-addtocart id=\\\"{{item.actionID}}\\\" class=\\\"tablebtn\\\" name=\\\"renewal\\\" price=\\\"{{item.currentStageCostUSD}}\\\" quantity=\\\"1\\\" quantity-max=\\\"10\\\" data=\\\"patent\\\" data-ng-if=\\\"item.saleType == 'Online' && item.serviceStatus == 'Show price'\\\"> <!--secret to different button labels checkngcartdirective.js-->\\r\\n                                            </ngcart-addtocart>\\r\\n                                            \\r\\n                                        </div>\\r\\n                                        <div data-ng-if=\\\"item.serviceType == 'grant'\\\">\\r\\n                                            <a data-ng-if=\\\"item.saleType == 'Online' && item.serviceStatus === 'Grant available'\\\" class=\\\"btn btn--bordered btn-underlined prepareGrant\\\" data-ng-click=\\\"$ctrl.prepareGrant(patent.patentID)\\\">Prepare Grant\\r\\n                                            </a>\\r\\n                                            <ngcart-addtocart id=\\\"{{item.actionID}}\\\" class=\\\"tablebtn\\\" name=\\\"grant\\\" price=\\\"{{item.currentStageCostUSD}}\\\" quantity=\\\"1\\\" quantity-max=\\\"10\\\" data=\\\"patent\\\" data-ng-if=\\\"item.saleType == 'Online' && item.serviceStatus == 'Grant saved'\\\"> <!--secret to different button labels checkngcartdirective.js-->\\r\\n                                            </ngcart-addtocart>\\r\\n                                        </div>          \\r\\n                                                                                  \\r\\n                                        <p class=\\\"font-weight-medium\\\" data-ng-class=\\\"item.isUrgentAttention ? 'txt-phase-red' : ''\\\" data-ng-if=\\\"item.saleType == 'Offline'\\\">Call +44 203 696 0949</p>\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </table>\\r\\n                        <table data-ng-if=\\\"patent.p3sServices.length > 1\\\">\\r\\n                            <tr data-ng-repeat=\\\"item in patent.p3sServices track by $index\\\">\\r\\n                                <td class=\\\"t-data__td\\\">\\r\\n                                    <div class=\\\"d-flex justify-content-center btn-underlined-selector\\\">\\r\\n\\r\\n                                        <div data-ng-if=\\\"item.serviceType == 'renewal'\\\">\\r\\n                                            <ngcart-addtocart id=\\\"{{item.actionID}}\\\" class=\\\"tablebtn\\\" name=\\\"renewal\\\" price=\\\"{{item.currentStageCostUSD}}\\\" quantity=\\\"1\\\" quantity-max=\\\"10\\\" data=\\\"patent\\\" data-ng-if=\\\"item.saleType == 'Online' && item.serviceStatus == 'Show price'\\\"> <!--secret to different button labels checkngcartdirective.js-->\\r\\n                                            </ngcart-addtocart>\\r\\n                                        </div>\\r\\n                                        <div data-ng-if=\\\"item.serviceType == 'grant'\\\">\\r\\n                                            <a data-ng-if=\\\"item.saleType == 'Online' && item.serviceStatus === 'Grant available'\\\" class=\\\"btn btn--bordered btn-underlined prepareGrant\\\" data-ng-click=\\\"$ctrl.prepareGrant(patent.patentID)\\\">Prepare Grant\\r\\n                                            </a>\\r\\n                                            <ngcart-addtocart id=\\\"{{item.actionID}}\\\" class=\\\"tablebtn\\\" name=\\\"grant\\\" price=\\\"{{item.currentStageCostUSD}}\\\" quantity=\\\"1\\\" quantity-max=\\\"10\\\" data=\\\"patent\\\" data-ng-if=\\\"item.saleType == 'Online' && item.serviceStatus == 'Grant saved'\\\"> <!--secret to different button labels checkngcartdirective.js-->\\r\\n                                            </ngcart-addtocart>\\r\\n                                        </div>                                                \\r\\n                                        <p class=\\\"font-weight-medium\\\" data-ng-class=\\\"item.isUrgentAttention ? 'txt-phase-red' : ''\\\" data-ng-if=\\\"item.saleType == 'Offline'\\\">Call +44 203 696 0949</p>\\r\\n                                        <p class=\\\"invisible\\\" data-ng-if=\\\"item.saleType !== 'Online' && item.serviceStatus !== 'Show price' && item.serviceStatus !== 'Grant available'\\\">Fill space</p>\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </table>\\r\\n                    </td>\\r\\n                </tr>\\r\\n                <tr data-ng-show=\\\"Result.length==0\\\">\\r\\n                    <td class=\\\"t-data__td text-left\\\" colspan=\\\"8\\\">\\r\\n                        No Results Found\\r\\n                    </td>\\r\\n                </tr>                                   \\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div><!-- response table end-->\\r\\n</div>\\r\\n\\r\\n<div data-ui-view=\\\"modal\\\" autoscroll=\\\"false\\\"></div>\";","module.exports = \"<md-button class=\\\"d-flex align-items-center\\\" data-ui-sref-active=\\\"active\\\" data-ui-sref=\\\"{{section.state}}\\\" ng-click=\\\"focusSection()\\\">\\r\\n\\t<i class=\\\"{{section.icon}}\\\"></i><span class=\\\"m-l-xs font-h4\\\">{{section.name}}</span>\\r\\n\\t<span class=\\\"md-visually-hidden\\\" data-ng-if=\\\"isSelected()\\\">current page</span>\\r\\n</md-button>\\r\\n\\r\\n\";","module.exports = \"<md-button class=\\\"md-button-toggle font-weight-medium justify-content-center align-items-center\\\" data-ng-click=\\\"toggle()\\\" aria-controls=\\\"side-menu-{{section.name}}\\\" flex layout=\\\"row\\\" aria-expanded=\\\"{{isOpen()}}\\\">\\r\\n    <i class=\\\"{{section.icon}}\\\"></i><span class=\\\"txt-white m-l-xs font-h4\\\">{{section.name}}</span>\\r\\n\\t<md-icon md-font-set=\\\"fas fa-chevron-down\\\" class=\\\"md-toggle-icon txt-white font-h4 d-flex align-items-center\\\" data-ng-class=\\\"{'toggled' : isOpen()}\\\"></md-icon>\\r\\n</md-button>\\r\\n<ul data-ng-show=\\\"isOpen()\\\" id=\\\"side-menu-{{section.name}}\\\" class=\\\"nav menu-toggle-list w-100\\\">\\r\\n    <li data-ng-repeat=\\\"page in section.pages\\\" class=\\\"font-weight-medium\\\">\\r\\n        <menu-link section=\\\"page\\\"></menu-link>\\r\\n    </li>\\r\\n</ul>\";","module.exports = \"<div class=\\\"fade long-fade show\\\"> <!--top nav-->\\r\\n    <div layout=\\\"row\\\" class=\\\"closed-sidenav border-grey-xs--btm\\\">\\r\\n    \\t<div class=\\\"closed-sidenav--inner d-flex justify-content-between\\\">\\r\\n\\t\\t\\t<span class=\\\"d-flex cursor-pointer m-r-lg align-items-center\\\" data-ng-click=\\\"$ctrl.toggleLeft()\\\">\\r\\n\\t\\t    \\t<i class=\\\"fas fa-bars fa-2x txt-black\\\"></i>\\r\\n\\t\\t\\t    <p class=\\\"txt-black m-l-sm font-h4\\\">Menu</p>\\r\\n\\t\\t\\t</span>\\r\\n\\t    \\t<div class=\\\"d-flex\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"d-flex justify-content-between align-items-center m-r-lg\\\">\\r\\n\\t\\t\\t\\t\\t<span class=\\\"m-r-xs font-h4 txt-black\\\"><span class=\\\"font-weight-bold\\\">EST:</span> {{$ctrl.est}}</span> \\r\\n\\t\\t\\t\\t\\t<span class=\\\"font-h4 txt-black\\\"><span class=\\\"font-weight-bold\\\">UTC:</span> {{$ctrl.utc}}</span>\\r\\n\\t\\t\\t\\t</div>\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\\"d-flex justify-content-between align-items-center\\\">\\r\\n\\t\\t\\t\\t\\t<span class=\\\"m-r-md font-h4 txt-black\\\"><span class=\\\"font-weight-bold m-r-xs\\\">USD - EUR</span>{{$ctrl.fxRate}}</span> \\r\\n\\t\\t\\t\\t</div>\\r\\n\\t    \\t</div>\\r\\n\\t\\t\\t<div class=\\\"d-flex justify-content-end align-items-center\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"d-flex justify-content-between align-items-center m-r-md\\\">\\t\\t\\t\\r\\n<!-- \\t\\t\\t\\t\\t<i class=\\\"far fa-info-circle fa-2x cursor-pointer\\\" data-ng-click=\\\"$ctrl.openGuide()\\\"></i> -->\\r\\n\\t\\t\\t\\t\\t<md-tooltip md-delay=\\\"500\\\" md-direction=\\\"bottom\\\">App Guide</md-tooltip>\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<a data-ui-sref=\\\"basket\\\" class=\\\"m-r-md\\\">\\r\\n\\t\\t\\t\\t\\t<ngcart-summary class=\\\"font-body txt-black\\\"></ngcart-summary>\\r\\n\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t<p class=\\\"txt-black\\\">\\r\\n\\t\\t\\t\\t\\t\\t<a data-ui-sref=\\\"profile\\\" class=\\\"font-weight-medium font-h4\\\">{{$root.user.firstName}}</a> | \\r\\n\\t\\t\\t\\t\\t\\t<a class=\\\"font-h4 txt-black inline-link\\\" data-ng-click=\\\"$ctrl.empty()\\\" data-ng-href=\\\"http://localhost:8080/p3sweb/resources/j_spring_security_logout\\\">Logout</a>\\r\\n\\t\\t\\t\\t\\t</p>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n  \\t</div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div><!--side-nav-->\\r\\n \\t<section flex>\\r\\n\\t    <md-sidenav class=\\\"md-sidenav-left bg-phase-grey\\\" md-component-id=\\\"left\\\" md-disable-backdrop md-whiteframe=\\\"3\\\">\\r\\n      \\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t      \\t<div class=\\\"col-md-12\\\">\\r\\n\\t\\t      \\t\\t<div class=\\\"bg-phase-grey p-v-sm-h-lg flex-grow-1 d-flex justify-content-between align-items-center\\\">\\r\\n\\t\\t\\t      \\t\\t<img src=\\\"\" + require(\"../pp_icon.png\") + \"\\\" alt=\\\"patent place icon small\\\">\\r\\n\\t\\t\\t      \\t\\t<span class=\\\"cursor-pointer\\\" data-ng-click=\\\"$ctrl.toggleLeft()\\\"><i class=\\\"fas fa-times fa-2x txt-white\\\"></i></span>\\r\\n\\t\\t\\t      \\t</div>\\t\\r\\n\\t      \\t\\t</div>\\r\\n\\t      \\t</div>\\t    \\t\\t\\t\\r\\n      \\t \\t<md-content class=\\\"bg-phase-grey\\\">\\r\\n\\t      \\t \\t<div layout=\\\"column\\\" class=\\\"p-pill-tabs m-b-sm p-a-sm\\\">\\r\\n\\t      \\t \\t\\t\\r\\n\\t\\t      \\t \\t<div class=\\\"d-flex justify-content-center align-items-center m-b-sm\\\">\\t\\t      \\t \\t\\r\\n\\t\\t      \\t \\t\\t<a class=\\\"nav-link\\\" data-ui-sref=\\\"profile\\\">\\t\\t\\t\\r\\n\\t\\t      \\t \\t\\t\\t<img data-ng-src=\\\"{{$ctrl.avatarimage}}\\\" data-ng-if=\\\"$ctrl.avatarimage\\\" alt=\\\"users profile pic\\\" class=\\\"profile-pic-radius\\\" width=\\\"104\\\">\\r\\n\\t\\t      \\t \\t\\t\\t<img src=\\\"\" + require(\"../avatar-default.png\") + \"\\\" data-ng-if=\\\"!$ctrl.avatarimage\\\" alt=\\\"users profile pic\\\" class=\\\"profile-pic-radius\\\" width=\\\"104\\\">\\r\\n\\t      \\t \\t\\t\\t</a>\\r\\n\\t\\t      \\t \\t</div>\\r\\n\\t      \\t \\t\\t<div class=\\\"d-flex justify-content-center align-items-center\\\">\\r\\n\\t      \\t \\t\\t\\t<a class=\\\"nav-link nav-link--white d-flex justify-content-center align-items-center font-h4 font-weight-bold\\\" data-ui-sref=\\\"profile\\\">\\r\\n\\t\\t\\t      \\t \\t\\t{{$ctrl.user.firstName}} {{$ctrl.user.lastName}}\\r\\n\\t\\t      \\t \\t\\t</a>\\r\\n\\t      \\t \\t\\t</div>\\r\\n\\t      \\t \\t\\t<div class=\\\"d-flex justify-content-center align-items-center\\\">\\r\\n\\t\\t      \\t \\t\\t<span class=\\\"font-body text-center\\\">{{$ctrl.user.business.businessName}}</span>\\r\\n\\t\\t      \\t \\t</div>\\r\\n\\t      \\t \\t</div>\\r\\n\\t      \\t \\t<div layout=\\\"column\\\" class=\\\" d-flex justify-content-center\\\">\\r\\n\\t      \\t \\t\\t<nav class=\\\"nav\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ul class=\\\"side-menu w-100\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<li data-ng-repeat=\\\"section in $ctrl.menu.sections\\\" class=\\\"font-body font-weight-medium\\\" data-ui-sref-active=\\\"active\\\" data-ng-class=\\\"{'parentActive' : $ctrl.isSectionSelected(section)}\\\">\\r\\n\\t                        \\t<menu-link section=\\\"section\\\" data-ng-if=\\\"section.type === 'link'\\\"></menu-link>\\r\\n\\t        \\t\\t\\t\\t\\t<menu-toggle section=\\\"section\\\" data-ng-if=\\\"section.type === 'toggle'\\\" context=\\\"$ctrl\\\"></menu-toggle>\\r\\n\\t\\t\\t\\t\\t        </li>\\r\\n\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t</nav>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</md-content>\\r\\n\\t    </md-sidenav>\\r\\n  \\t</section>\\r\\n  \\r\\n    <div layout=\\\"column\\\" class=\\\"closed-sidenav-side bg-phase-grey\\\">\\r\\n\\t  \\t<div class=\\\"text-center w-100 p-tb-20\\\">\\r\\n\\t  \\t\\t<a data-ui-sref=\\\"dashboard\\\">\\r\\n\\t  \\t\\t\\t<img width=\\\"35\\\" src=\\\"\" + require(\"../pp_icon.png\") + \"\\\">\\r\\n\\t  \\t\\t</a>\\r\\n\\t    </div>\\r\\n\\t\\t<ul class=\\\"nav flex-column\\\">\\r\\n\\t\\t\\t<li class=\\\"nav-item\\\" data-ui-sref-active=\\\"active\\\">\\r\\n\\t\\t\\t\\t<a class=\\\"nav-link p-tb-md d-flex justify-content-center align-items-center\\\" data-ui-sref=\\\"dashboard\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"far fa-tachometer-alt fa-2x d-none d-xl-block\\\"></i>\\r\\n\\t\\t\\t\\t\\t<i class=\\\"far fa-tachometer-alt fa-2x d-xl-none\\\"></i>\\r\\n\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t<md-tooltip md-delay=\\\"500\\\" md-direction=\\\"right\\\">Dashboard</md-tooltip>\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t\\t<li class=\\\"nav-item\\\" data-ui-sref-active=\\\"active\\\">\\r\\n\\t\\t\\t\\t<a class=\\\"nav-link p-tb-md d-flex justify-content-center align-items-center\\\" data-ui-sref=\\\"portfolio\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"far fa-folders fa-2x d-none d-xl-block\\\"></i>\\r\\n\\t\\t\\t\\t\\t<i class=\\\"far fa-folders fa-2x d-xl-none d-lg-inline-block\\\"></i>\\r\\n\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t<md-tooltip md-delay=\\\"500\\\" md-direction=\\\"right\\\">Portfolio</md-tooltip>\\r\\n\\t\\t\\t</li>\\t\\t\\t\\r\\n\\t\\t\\t<li class=\\\"nav-item\\\" data-ui-sref-active=\\\"active\\\">\\r\\n\\t\\t\\t\\t<a class=\\\"nav-link p-tb-md d-flex justify-content-center align-items-center\\\" data-ui-sref=\\\"current-transactions\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"far fa-money-check-alt fa-2x d-none d-xl-block\\\"></i>\\r\\n\\t\\t\\t\\t\\t<i class=\\\"far fa-money-check-alt fa-2x d-xl-none d-lg-inline-block\\\"></i>\\r\\n\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t<md-tooltip md-delay=\\\"500\\\" md-direction=\\\"right\\\">Transactions</md-tooltip>\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t</ul>\\r\\n\\t\\t<div class=\\\"text-center position-bottom w-100 m-b-sm\\\">\\r\\n<!-- \\t\\t\\t<button data-ng-click=\\\"$ctrl.openGuide()\\\" class=\\\"m-b-sm btn btn-no-bg\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"far fa-info-circle fa-2x txt-white\\\"></i>\\r\\n\\t\\t\\t\\t<md-tooltip md-delay=\\\"500\\\" md-direction=\\\"right\\\">App Guide</md-tooltip>\\r\\n\\t\\t\\t</button> -->\\r\\n\\t\\t</div>\\r\\n  \\t</div>\\r\\n</div>\\r\\n\";","export default angular.module('ngCart.fulfilment', [])\r\n\r\n.service('fulfilmentProvider', ['$injector', '$state', '$timeout', function($injector, $state, $timeout){\r\n\r\n    this._obj = {\r\n        service : undefined,\r\n        settings : undefined\r\n    };\r\n  \r\n    this.setService = function(service){\r\n        this._obj.service = service;\r\n    };\r\n  \r\n    this.setSettings = function(settings){\r\n        this._obj.settings = settings;\r\n    };\r\n  \r\n    this.checkout = function(orderObj){\r\n        var provider = $injector.get('ngCart.fulfilment.' + this._obj.service);\r\n        return provider.checkout(this._obj.settings,orderObj);\r\n    };\r\n      \r\n}])\r\n\r\n.service('ngCart.fulfilment.http', ['$http','$state', '$q', function($http, $state, $q){\r\n\r\n        \r\n        this.checkout = function(service, patent){\r\n\r\n            var deferred = $q.defer();\r\n            $http.post('http://localhost:8080/p3sweb/rest-prepare-banktransfer/', patent)\r\n            .then(\r\n                function(response){\r\n                    deferred.resolve(response.data);\r\n                },\r\n                function(errResponse){\r\n                    console.error('Error submitting POST request to rest-prepare-banktransfer/. Error: ', errResponse)\r\n                    deferred.reject(errResponse);\r\n                }\r\n            );\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n }]).name\r\n\r\n\r\n\r\n","'use strict';\r\n\r\nimport fulfilment from '../../services/vendors/ngCart.fulfilment.js';\r\n\r\nexport default angular.module('ngCart.directives', [fulfilment])\r\n\r\n.controller('CartController',['$scope', 'ngCart', '$state', function($scope, ngCart, $state) {\r\n    $scope.ngCart = ngCart;\r\n}])\r\n\r\n.directive('ngcartAddtocart', ['ngCart', function(ngCart){\r\n    return {\r\n        restrict : 'E',\r\n        controller : 'CartController',\r\n        scope: {\r\n            id:'@',\r\n            name:'@',\r\n            quantity:'@',\r\n            quantityMax:'@',\r\n            price:'@',\r\n            data:'='\r\n        },\r\n        transclude: true,\r\n        templateUrl: function(element, attrs) {\r\n            if ( typeof attrs.templateUrl == 'undefined' ) {\r\n                return '../app/global/html/ngCart/addtocart.htm';\r\n            } else {\r\n                return attrs.templateUrl;\r\n            }\r\n        },\r\n        link:function(scope, element, attrs){\r\n\r\n            scope.attrs = attrs;\r\n            scope.inCart = function(){\r\n                return  ngCart.getItemById(attrs.id);\r\n            };\r\n\r\n            if (scope.inCart()){\r\n                scope.q = ngCart.getItemById(attrs.id).getQuantity();\r\n            } else {\r\n                scope.q = parseInt(scope.quantity);\r\n            }\r\n\r\n            scope.qtyOpt =  [];\r\n            for (var i = 1; i <= scope.quantityMax; i++) {\r\n                scope.qtyOpt.push(i);\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n}])\r\n\r\n.directive('ngcartCart', [function(){\r\n    return {\r\n        restrict : 'E',\r\n        scope: {\r\n            ngModel: '='\r\n        },\r\n        controller : 'CartController',\r\n        templateUrl: function(element, attrs) {\r\n            if ( typeof attrs.templateUrl == 'undefined' ) {\r\n                return '../app/global/html/ngCart/cart.htm';\r\n            } else {\r\n                return attrs.templateUrl;\r\n            }\r\n        },\r\n        link:function(scope, element, attrs){\r\n\r\n        }\r\n    };\r\n}])\r\n\r\n.directive('ngcartSummary', [function(){\r\n    return {\r\n        restrict : 'E',\r\n        controller : 'CartController',\r\n        scope: {},\r\n        transclude: true,\r\n        templateUrl: function(element, attrs) {\r\n            if ( typeof attrs.templateUrl == 'undefined' ) {\r\n                return '../app/global/html/ngCart/summary.htm';\r\n            } else {\r\n                return attrs.templateUrl;\r\n            }\r\n        }\r\n    };\r\n}])\r\n\r\n.directive('ngcartCheckout', ['ngCart', 'ngCartItem', 'basketService', 'patentsRestService', '$rootScope', '$timeout',  '$state', function(ngCart, ngCartItem, basketService, patentsRestService, $rootScope, $timeout,  $state){\r\n    return {\r\n        restrict : 'E',\r\n        scope: {\r\n            service:'@',\r\n            settings:'=',\r\n            ngModel: '='\r\n        },\r\n        controller : ('CartController', ['$scope', 'ngCart', 'fulfilmentProvider', 'basketService','$state', function($scope, ngCart, fulfilmentProvider, basketService, $state) {\r\n\r\n            $scope.ngCart = ngCart;\r\n            $scope.productData = ngCart.$cart.items;\r\n\r\n\r\n\r\n            $scope.basketItems = function() {\r\n                return [] = Object.keys($scope.productData).map(function(data, index){\r\n                    var obj = {};\r\n                    obj.ep_ApplicationNo = $scope.productData[data]._data.ep_ApplicationNumber;\r\n                    obj.patentID = $scope.productData[data]._data.patentID;\r\n                    obj.serviceType = $scope.productData[data]._name;\r\n                    return obj;\r\n                })\r\n            };\r\n\r\n            $scope.checkout = function () {\r\n\r\n                var orderObj = {\r\n                    basketItems: $scope.basketItems(),\r\n                    totalCostUSD: ngCart.totalCost(),\r\n                    dateNowLocalTime: null\r\n                };\r\n\r\n                fulfilmentProvider.setService($scope.service);\r\n                fulfilmentProvider.setSettings($scope.settings);\r\n\r\n                fulfilmentProvider.checkout(orderObj)\r\n                    .then(function (data, status, headers, config) {\r\n                            data.billingDetails = $scope.summary.billingDetails;\r\n                            $state.go('bank-transfer-preparation', {orderObj:orderObj, details: data}, {reload: false});                            \r\n                        },\r\n                        function (data, status, headers, config) {\r\n                            $rootScope.$broadcast('ngCart:checkout_failed', {\r\n                                statusCode: status,\r\n                                error: data\r\n                            });\r\n                        }\r\n                    );\r\n            };\r\n        }]),\r\n        link: function(scope, element, attrs) {\r\n            \r\n            $rootScope.$on('ngCart:itemRemoved', function() {\r\n               fetchBasketPatents();\r\n            });\r\n\r\n            fetchBasketPatents();\r\n\r\n            function fetchBasketPatents(orderObj) {\r\n                var orderObj = {};\r\n                orderObj.basketItems = scope.basketItems();\r\n                basketService.fetchBasketPatents(orderObj)\r\n                .then(\r\n                    function(response){\r\n\r\n                        scope.summary = {\r\n                            firstName: response.firstName,\r\n                            lastName: response.lastName,\r\n                            billingDetails: {\r\n                                billingStreet: response.billingStreet,\r\n                                billingCity: response.billingCity,\r\n                                billingState: response.billingState,\r\n                                billingZip: response.billingZip,\r\n                            },\r\n                            date: response.dateNowLocalTimeUI,\r\n                            fees: {\r\n                                totalProcessingFeesUSD: response.totalProcessingFeesUSD,\r\n                                totalExpressFeesUSD: response.totalExpressFeesUSD,\r\n                                totalUrgentFeesUSD: response.totalUrgentFeesUSD,\r\n                                totalOfficialFeesUSD: response.totalOfficialFeesUSD,\r\n                                totalPatentPlaceFeesUSD: (function(){\r\n                                    return response.totalCostUSD - response.totalOfficialFeesUSD;\r\n                                }()),\r\n                                totalCostUSD: response.totalCostUSD\r\n                            },\r\n                            totalPatents: response.orderedPatentUIs.length\r\n                        };\r\n\r\n                    },\r\n                    function(errResponse){\r\n                        console.error('Error: Unable to fetch basket details: ', errResponse);\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        transclude: true,\r\n        templateUrl: function(element, attrs) {\r\n            if ( typeof attrs.templateUrl == 'undefined' ) {\r\n                return '../app/global/html/ngCart/checkout.htm';\r\n            } else {\r\n                return attrs.templateUrl;\r\n            }\r\n        }\r\n    };\r\n}]).name\r\n\r\n\r\n","'use strict';\r\n\r\nimport directives from '../../../app/global/directives/vendors/ngCart.directives.js';\r\n\r\nexport default angular.module('ngCart', [directives])\r\n\r\n    .config([function () {\r\n\r\n    }])\r\n\r\n    .provider('$ngCart', function () {\r\n        this.$get = function () {\r\n        };\r\n    })\r\n\r\n    .run(['$rootScope', 'ngCart','ngCartItem', 'store', function ($rootScope, ngCart, ngCartItem, store) {\r\n\r\n        $rootScope.$on('ngCart:change', function(){\r\n            ngCart.$save();\r\n        });\r\n\r\n        if (angular.isObject(store.get('cart'))) {\r\n            ngCart.$restore(store.get('cart'));\r\n\r\n        } else {\r\n            ngCart.init();\r\n        }\r\n\r\n    }])\r\n\r\n    .service('ngCart', ['$rootScope', '$window', 'ngCartItem', 'store', '$uibModal', '$state', function ($rootScope, $window, ngCartItem, store, $uibModal, $state) {\r\n\r\n        var vm = this;\r\n\r\n        this.init = function(){\r\n            this.$cart = {\r\n                shipping : null,\r\n                taxRate : null,\r\n                tax : null,\r\n                items : []\r\n            };\r\n        };\r\n\r\n        this.addItem = function (id, name, price, quantity, data) {\r\n\r\n            var inCart = this.getItemById(id);\r\n\r\n            var modalInstance = $uibModal.open({\r\n                templateUrl: 'app/templates/modals/modal.confirm-add-action.tpl.htm',\r\n                appendTo: undefined,\r\n                controllerAs: '$ctrl',\r\n                controller: ['$uibModalInstance', function($uibModalInstance) {\r\n\r\n                    this.order = {}\r\n                    this.order.price = price;\r\n\r\n                    if(data.p3sServices) {\r\n\r\n                        this.order.euroAction = data.p3sServices.map(function(item){\r\n                            if(action.serviceType === 'epct') { action.serviceType = 'Euro-PCT'; }\r\n                            return  item.serviceType;\r\n                        })\r\n                    }\r\n                    if(data.p3sServicesWithFees) {\r\n                        this.order.euroAction = data.p3sServicesWithFees.map(function(item){\r\n                            if(action.serviceType === 'epct') { action.serviceType = 'Euro-PCT'; }\r\n                            return  item.serviceType;\r\n                        })\r\n                    }\r\n\r\n                    this.order.ep_ApplicationNumber = data.ep_ApplicationNumber;\r\n                    this.order.totalOrderLength = vm.getItems().length;\r\n                    this.order.totalCost = vm.totalCost();\r\n\r\n                    this.continueBasket =  function() {\r\n                        $state.go('basket', {})\r\n                        $uibModalInstance.close();\r\n                    }\r\n\r\n                    this.dismissModal = function () {\r\n                        $uibModalInstance.close();\r\n                    };\r\n\r\n                }]\r\n            })\r\n\r\n            if (typeof inCart === 'object'){\r\n                //Update quantity of an item if it's already in the cart\r\n                inCart.setQuantity(quantity, false);\r\n                $rootScope.$broadcast('ngCart:itemUpdated', inCart);\r\n            } else {\r\n                var newItem = new ngCartItem(id, name, price, quantity, data);\r\n                this.$cart.items.push(newItem);\r\n                $rootScope.$broadcast('ngCart:itemAdded', newItem);\r\n            }\r\n\r\n            $rootScope.$broadcast('ngCart:change', {});\r\n        };\r\n\r\n        this.getItemById = function (itemId) {\r\n            var items = this.getCart().items;\r\n            var build = false;\r\n\r\n            angular.forEach(items, function (item) {\r\n                if  (item.getId() === itemId) {\r\n                    build = item;\r\n                }\r\n            });\r\n            return build;\r\n        };\r\n\r\n        this.setShipping = function(shipping){\r\n            this.$cart.shipping = shipping;\r\n            return this.getShipping();\r\n        };\r\n\r\n        this.getShipping = function(){\r\n            if (this.getCart().items.length == 0) return 0;\r\n            return  this.getCart().shipping;\r\n        };\r\n\r\n        this.setTaxRate = function(taxRate){\r\n            this.$cart.taxRate = +parseFloat(taxRate).toFixed(2);\r\n            return this.getTaxRate();\r\n        };\r\n\r\n        this.getTaxRate = function(){\r\n            return this.$cart.taxRate\r\n        };\r\n\r\n        this.getTax = function(){\r\n            return +parseFloat(((this.getSubTotal()/100) * this.getCart().taxRate )).toFixed(2);\r\n        };\r\n\r\n        this.setCart = function (cart) {\r\n            this.$cart = cart;\r\n            return this.getCart();\r\n        };\r\n\r\n        this.getCart = function(){\r\n            return this.$cart;\r\n        };\r\n\r\n        this.getItems = function(){\r\n            return this.getCart().items;\r\n        };\r\n\r\n        this.getTotalItems = function () {\r\n            var count = 0;\r\n            var items = this.getItems();\r\n            angular.forEach(items, function (item) {\r\n                count += item.getQuantity();\r\n            });\r\n            return count;\r\n        };\r\n\r\n        this.getTotalUniqueItems = function () {\r\n            return this.getCart().items.length;\r\n        };\r\n\r\n        this.getSubTotal = function(){\r\n            var total = 0;\r\n            angular.forEach(this.getCart().items, function (item) {\r\n                total += item.getTotal();\r\n            });\r\n            return +parseFloat(total).toFixed(2);\r\n        };\r\n\r\n        this.totalCost = function () {\r\n            // console.log('this.getShipping()', this.getShipping()) BEEEN REMOVED\r\n            return +parseFloat(this.getSubTotal() + this.getTax()).toFixed(2);\r\n        };\r\n\r\n        this.removeItem = function (index) {\r\n            var item = this.$cart.items.splice(index, 1)[0] || {};\r\n            $rootScope.$broadcast('ngCart:itemRemoved', item);\r\n            $rootScope.$broadcast('ngCart:change', {});\r\n\r\n\r\n        };\r\n\r\n        this.removeItemById = function (id) {\r\n\r\n            var item;\r\n            var cart = this.getCart();\r\n            angular.forEach(cart.items, function (item, index) {\r\n                if(item.getId() === id) {\r\n                    item = cart.items.splice(index, 1)[0] || {};\r\n                }\r\n            });\r\n            this.setCart(cart);\r\n            $rootScope.$broadcast('ngCart:itemRemoved', item);\r\n            $rootScope.$broadcast('ngCart:change', {});\r\n\r\n            var modalInstance = $uibModal.open({\r\n                templateUrl: 'app/templates/modals/modal.confirm-remove-action.tpl.htm',\r\n                appendTo: undefined,\r\n                controllerAs: '$ctrl',\r\n                controller: ['$uibModalInstance', function($uibModalInstance) {\r\n                    this.dismissModal = function () {\r\n                        $uibModalInstance.close();\r\n                    };\r\n\r\n                }]\r\n            })\r\n\r\n        };\r\n\r\n        this.empty = function () {\r\n            \r\n            $rootScope.$broadcast('ngCart:change', {});\r\n            this.$cart.items = [];\r\n            $window.localStorage.removeItem('cart');\r\n        };\r\n        \r\n        this.isEmpty = function () {\r\n            \r\n            return (this.$cart.items.length > 0 ? false : true);\r\n            \r\n        };\r\n\r\n        this.toObject = function() {\r\n\r\n            if (this.getItems().length === 0) return false;\r\n\r\n            var items = [];\r\n            angular.forEach(this.getItems(), function(item){\r\n                items.push (item.toObject());\r\n            });\r\n\r\n            return {\r\n                shipping: this.getShipping(),\r\n                tax: this.getTax(),\r\n                taxRate: this.getTaxRate(),\r\n                subTotal: this.getSubTotal(),\r\n                totalCost: this.totalCost(),\r\n                items:items\r\n            }\r\n        };\r\n\r\n\r\n        this.$restore = function(storedCart){\r\n            var _self = this;\r\n            _self.init();\r\n            _self.$cart.shipping = storedCart.shipping;\r\n            _self.$cart.tax = storedCart.tax;\r\n\r\n            angular.forEach(storedCart.items, function (item) {\r\n                _self.$cart.items.push(new ngCartItem(item._id,  item._name, item._price, item._quantity, item._data));\r\n            });\r\n            this.$save();\r\n        };\r\n\r\n        this.$save = function () {\r\n\r\n            var reduceCart = this.getCart().items.map(function(item){\r\n                if(!item._data.p3sServices) { //logic to prevent error of object loop\r\n                    item._data.p3sServicesWithFees.map(function(prop){                    \r\n                        if(prop.form1200FeeUI) {\r\n                            prop.form1200FeeUI.data = null;\r\n                        }\r\n\r\n                        if(prop.renewalFeeUI) {\r\n                            prop.renewalFeeUI.data = null;\r\n                        }\r\n\r\n                        if(prop.grantFeeUI) {\r\n                            prop.grantFeeUI.data = null;\r\n                        }\r\n                    })\r\n\r\n                } \r\n                return item;\r\n            })\r\n            return store.set('cart', JSON.stringify(reduceCart));\r\n        }\r\n\r\n    }])\r\n\r\n    .factory('ngCartItem', ['$rootScope', '$log', function ($rootScope, $log) {\r\n\r\n        var item = function (id, name, price, quantity, data) {\r\n            this.setId(id);\r\n            this.setName(name);\r\n            this.setPrice(price);\r\n            this.setQuantity(quantity);\r\n            this.setData(data);\r\n        };\r\n\r\n\r\n        item.prototype.setId = function(id){\r\n            if (id)  this._id = id;\r\n            else {\r\n                $log.error('An ID must be provided');\r\n            }\r\n        };\r\n\r\n        item.prototype.getId = function(){\r\n            return this._id;\r\n        };\r\n\r\n\r\n        item.prototype.setName = function(name){\r\n            if (name)  this._name = name;\r\n            else {\r\n                $log.error('A name must be provided');\r\n            }\r\n        };\r\n        item.prototype.getName = function(){\r\n            return this._name;\r\n        };\r\n\r\n        item.prototype.setPrice = function(price){\r\n            var priceFloat = parseFloat(price);\r\n            if (priceFloat) {\r\n                if (priceFloat <= 0) {\r\n                    $log.error('A price must be over 0');\r\n                } else {\r\n                    this._price = (priceFloat);\r\n                }\r\n            } else {\r\n                $log.error('A price must be provided');\r\n            }\r\n        };\r\n        item.prototype.getPrice = function(){\r\n            return this._price;\r\n        };\r\n\r\n\r\n        item.prototype.setQuantity = function(quantity, relative){\r\n\r\n\r\n            var quantityInt = parseInt(quantity);\r\n            if (quantityInt % 1 === 0){\r\n                if (relative === true){\r\n                    this._quantity  += quantityInt;\r\n                } else {\r\n                    this._quantity = quantityInt;\r\n                }\r\n                if (this._quantity < 1) this._quantity = 1;\r\n\r\n            } else {\r\n                this._quantity = 1;\r\n                $log.info('Quantity must be an integer and was defaulted to 1');\r\n            }\r\n\r\n\r\n        };\r\n\r\n        item.prototype.getQuantity = function(){\r\n            return this._quantity;\r\n        };\r\n\r\n        item.prototype.setData = function(data){\r\n            if (data) this._data = data;\r\n        };\r\n\r\n        item.prototype.getData = function(){\r\n            if (this._data) return this._data;\r\n            else $log.info('This item has no data');\r\n        };\r\n\r\n\r\n        item.prototype.getTotal = function(){\r\n            return +parseFloat(this.getQuantity() * this.getPrice()).toFixed(2);\r\n        };\r\n\r\n        item.prototype.toObject = function() {\r\n            return {\r\n                id: this.getId(),\r\n                name: this.getName(),\r\n                price: this.getPrice(),\r\n                quantity: this.getQuantity(),\r\n                data: this.getData(),\r\n                total: this.getTotal()\r\n            }\r\n        };\r\n\r\n        return item;\r\n\r\n    }])\r\n\r\n    .service('store', ['$window', function ($window) {\r\n\r\n        return {\r\n\r\n            get: function (key) {\r\n                if ( $window.localStorage.getItem(key) )  {\r\n                    var cart = angular.fromJson( $window.localStorage.getItem(key) ) ;\r\n                    return JSON.parse(cart);\r\n                }\r\n                return false;\r\n\r\n            },\r\n\r\n\r\n            set: function (key, val) {\r\n\r\n                if (val === undefined) {\r\n                    $window.localStorage.removeItem(key);\r\n                } else {\r\n                    $window.localStorage.setItem( key, angular.toJson(val) );\r\n                }\r\n                return $window.localStorage.getItem(key);\r\n            }\r\n        }\r\n    }])\r\n\r\n    .controller('CartController',['$scope', 'ngCart', function($scope, ngCart) {\r\n\r\n        $scope.ngCart = ngCart;\r\n\r\n    }])\r\n\r\n    .value('version', '1.0.0').name;\r\n","appConfig.$inject = ['$httpProvider', '$urlRouterProvider', '$uibModalProvider', '$compileProvider' ,'$qProvider', 'KeepaliveProvider', 'IdleProvider', 'localStorageServiceProvider', '$mdIconProvider', '$mdPanelProvider'];\r\n\r\nexport default function appConfig($httpProvider, $urlRouterProvider, $uibModalProvider, $compileProvider, $qProvider, KeepaliveProvider, IdleProvider, localStorageServiceProvider, $mdIconProvider, $mdPanelProvider) {\r\n\r\n    if (!$httpProvider.defaults.headers.get) {\r\n        $httpProvider.defaults.headers.get = {};    \r\n    }    \r\n\r\n    window.ppdomain = \"http://localhost:8080/p3sweb/\";\r\n\r\n    $httpProvider.defaults.headers.get['If-Modified-Since'] = 'Mon, 26 Jul 1997 05:00:00 GMT';\r\n\r\n    $mdIconProvider\r\n        .defaultFontSet('FontAwesome')\r\n        .fontSet('fa', 'FontAwesome');\r\n\r\n\r\n    IdleProvider.idle(500);\r\n    IdleProvider.timeout(30);\r\n    KeepaliveProvider.interval(20);\r\n\r\n\r\n\r\n    $qProvider.errorOnUnhandledRejections(false);\r\n\r\n    localStorageServiceProvider\r\n        .setStorageType('sessionStorage')\r\n        .setDefaultToCookie(false)\r\n        .setNotify(true, true)\r\n\r\n}","import angular from 'angular';\r\n\r\nexport default angular.module('services.user-service', []).factory('userService', userService).name\r\n\r\nuserService.$inject = ['$http', '$q']; \r\n\r\nfunction userService($http, $q) {\r\n\r\n    var REST_SERVICE_URI = ppdomain+'rest-user/'; //variable declared before function are initiated\r\n\r\n    var factory = {\r\n        fetchUser: fetchUser,\r\n        updateUser: updateUser,\r\n        listUsers: listUsers\r\n\r\n    };\r\n\r\n    return factory;\r\n\r\n    function fetchUser() {\r\n    \r\n        var deferred = $q.defer();\r\n         $http.get(REST_SERVICE_URI)\r\n            .then(\r\n            function (response) {\r\n                deferred.resolve(response.data);\r\n            },\r\n            function(errResponse){\r\n                console.error('Error while fetching user');\r\n                deferred.reject(errResponse);\r\n            }\r\n        );\r\n\r\n        return deferred.promise;\r\n    };\r\n\r\n    var config = {headers:  {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n        }\r\n    };\r\n\r\n    function updateUser(user) {\r\n\r\n        var deferred = $q.defer();\r\n        $http.put(REST_SERVICE_URI, user, config)\r\n            .then(\r\n            function (response) {\r\n                deferred.resolve(response.data);\r\n            },\r\n            function(errResponse){\r\n                deferred.reject(errResponse);\r\n            }\r\n        );\r\n        return deferred.promise;\r\n    };\r\n\r\n    function listUsers() {\r\n\r\n        var deferred = $q.defer();\r\n\r\n        $http.get(ppdomain+'rest-users/')\r\n            .then(\r\n            function (response) {\r\n                deferred.resolve(response.data);\r\n            },\r\n            function(errResponse){\r\n                deferred.reject(errResponse);\r\n            }\r\n        );\r\n        return deferred.promise;\r\n    };\r\n\r\n}\r\n\r\n","export default angular.module('services.fx-service', []).factory('fxService', fxService).name;\r\n\r\nfxService.$inject = ['$q', '$http'];\r\n\r\nfunction fxService($q, $http) {\r\n\t\r\n\tvar factory = {\r\n\t\tfetchFxWeek: fetchFxWeek,\r\n\t\tfetchFxMonth: fetchFxMonth,\r\n\t\tfetchFx: fetchFx\r\n\t};\r\n\r\n\treturn factory;\t\r\n\r\n\tfunction fetchFx() {\r\n\r\n\t\tvar deferred = $q.defer()\r\n\r\n\t\t$http.get(ppdomain+'rest-fxrate/')\r\n\t\t.then(\r\n\t\t\tfunction(response){\r\n\t\t\t\tdeferred.resolve(response.data)\r\n\t\t\t},\r\n\t\t\tfunction(errResponse){\r\n\t\t\t\tdeferred.reject(errResponse.data)\r\n\t\t\t}\r\n\t\t)\r\n\t\treturn deferred.promise;\r\n\t}\r\n\r\n\tfunction fetchFxWeek() {\r\n\r\n\t\tvar deferred = $q.defer()\r\n\r\n\t\t$http.get(ppdomain+'rest-fxrates/week')\r\n\t\t.then(\r\n\t\t\tfunction(response){\r\n\t\t\t\tdeferred.resolve(response.data)\r\n\t\t\t},\r\n\t\t\tfunction(errResponse){\r\n\t\t\t\tdeferred.reject(errResponse.data)\r\n\t\t\t}\r\n\t\t)\r\n\t\treturn deferred.promise;\r\n\t}\r\n\r\n\r\n\tfunction fetchFxMonth() {\r\n\r\n\t\tvar deferred = $q.defer()\r\n\r\n\t\t$http.get(ppdomain+'rest-fxrates/month')\r\n\t\t.then(\r\n\t\t\tfunction(response){\r\n\t\t\t\tdeferred.resolve(response.data)\r\n\t\t\t},\r\n\t\t\tfunction(errResponse){\r\n\t\t\t\tdeferred.reject(errResponse.data)\r\n\t\t\t}\r\n\t\t)\r\n\t\treturn deferred.promise;\r\n\t}\r\n}","import fxService from './app.fx.serv.js';\r\n\r\nexport default angular.module('services.core-service', [fxService]).factory('coreService', coreService).name;\r\n\r\ncoreService.$inject = ['$q', '$timeout', 'fxService', '$http'];\r\n\r\nfunction coreService($q, $timeout, fxService, $http) {\r\n\r\n    var REST_SERVICE_URI = ppdomain+'partner-details/'; \r\n\r\n    var factory = {\r\n        getMessages: getMessages,\r\n        supressMessages: supressMessages,        \r\n        ppContact: ppContact,\r\n        openAppGuide: openAppGuide,\r\n        appGuideOpen: false\r\n    };\r\n\r\n    function ppContact() {\r\n        var deferred = $q.defer();\r\n        $http.get(REST_SERVICE_URI)\r\n        .then(\r\n            function(response){\r\n                deferred.resolve(response.data)\r\n            },\r\n            function(errResponse){\r\n                deferred.resolve(errResponse)\r\n            }\r\n        );\r\n        return deferred.promise;\r\n    }\r\n\r\n    function getMessages() {\r\n        var deferred = $q.defer();\r\n        $http.get(ppdomain+'login-messages/')\r\n        .then(\r\n            function (response) {\r\n                deferred.resolve(response.data);\r\n            },\r\n            function(errResponse){\r\n                console.error('Error while fetching messages');\r\n                deferred.reject(errResponse);\r\n            }\r\n        );\r\n\r\n        return deferred.promise;\r\n    };\r\n\r\n\r\n\r\n    function supressMessages(id) {\r\n        var deferred = $q.defer();\r\n        $http.post(ppdomain+'suppress-login-messages/' , id)\r\n        .then(\r\n            function(response){\r\n                deferred.resolve(response);\r\n            }, \r\n            function(errResponse){\r\n                deferred.reject(errResponse);\r\n            }\r\n        );\r\n        return deferred.promise;\r\n    };    \r\n\r\n    function openAppGuide() {\r\n        return factory.appGuideOpen = !factory.appGuideOpen;\r\n    }\r\n\r\n    return factory;\r\n\r\n}\r\n","export default angular.module('services.organise-colour-service', []).factory('OrganiseColourService', OrganiseColourService).name\r\n\r\nOrganiseColourService.$inject = ['$http', '$q'];\r\n\r\nfunction OrganiseColourService($http, $q) {\r\n\r\n    var factory = {\r\n        getNextColour:  getNextColour,\r\n        getCurrColour:  getCurrColour\r\n\r\n    }\r\n\r\n    function getCurrColour(colour, item) {\r\n\r\n        var color;\r\n\r\n        if(item === 'text') {\r\n            switch(colour) {\r\n                case 'Green':\r\n                    color =  'txt-phase-green'\r\n                break;\r\n                case 'Amber':\r\n                    color =  'txt-phase-amber'\r\n                break;\r\n                case 'Red':\r\n                    color = 'txt-phase-red'\r\n                break;\r\n                case 'Blue':\r\n                    color =  'txt-phase-blue'\r\n                break;\r\n                case 'Black':\r\n                    color = 'txt-phase-black'\r\n            } //switch end\r\n\r\n        }\r\n\r\n        if(item === 'bg') {\r\n            switch(colour) {\r\n                case 'Green':\r\n                    color =  'bg-phase-green'\r\n                break;\r\n                case 'Amber':\r\n                    color =  'bg-phase-amber'\r\n                break;\r\n                case 'Red':\r\n                    color = 'bg-phase-red'\r\n                break;\r\n                case 'Blue':\r\n                    color =  'bg-phase-blue'\r\n                break;\r\n                case 'Black':\r\n                    color = 'bg-phase-black'\r\n            } //switch end\r\n           \r\n        }\r\n\r\n        return color\r\n    }\r\n\r\n    function getNextColour(colour, item) {\r\n        var color;\r\n\r\n        if(item === 'bg') {\r\n            switch(colour) {\r\n                case 'Green':\r\n                    color =  'bg-phase-amber'\r\n                break;\r\n                case 'Amber':\r\n                    color =  'bg-phase-red'\r\n                break;\r\n                case 'Red':\r\n                    color = 'bg-phase-blue'\r\n                break;\r\n                case 'Blue':\r\n                    color =  'bg-phase-black'\r\n                break;\r\n                case 'Black':\r\n                    color = 'bg-white'\r\n            } //switch end\r\n           \r\n        }\r\n         return color\r\n    }    \r\n\r\n    return factory;\r\n\r\n}","import OrganiseColourService from '../../../global/services/app.organiseColour.serv.js'\r\n\r\nexport default angular.module('services.patents-rest-service', [OrganiseColourService]).factory('PatentsRestService', PatentsRestService).name\r\n\r\nPatentsRestService.$inject = ['$http', '$q', 'OrganiseColourService'];\r\n\r\nfunction PatentsRestService($http, $q, OrganiseColourService) {\r\n\r\n    var REST_SERVICE_URI = ppdomain+'rest-patents/'; \r\n\r\n    var factory = {\r\n        fetchAllPatents: fetchAllPatents,\r\n        updatePatent: updatePatent,\r\n        savePatent: savePatent,\r\n        deletePatent: deletePatent,\r\n        fetchPatentItem: fetchPatentItem\r\n    };\r\n\r\n    return factory;\r\n\r\n    var actionsArray = [];\r\n\r\n    function fetchAllPatents() {\r\n\r\n        var deferred = $q.defer();\r\n         $http.get(ppdomain+'rest-patents-portfolio/')\r\n            .then(\r\n            function (response) {\r\n\r\n                var generateId = function(service) {\r\n                    var number = '';\r\n                    for (var i = 0; i < service.length; i++) {\r\n                        number += service.charCodeAt(i).toString();\r\n                    }\r\n                    return parseInt(number.substring(2, 9)); //skip decimal\r\n                }\r\n\r\n                response.data.map(function(patent){\r\n                    return patent.p3sServices.map(function(property){\r\n                        property.actionID = patent.patentID + generateId(property.serviceType); //generate unique id based on patent id and service type (get char codes)\r\n                        if(property.currentStageColour) {\r\n                            property.cssCurrent = OrganiseColourService.getCurrColour(property.currentStageColour, 'text')\r\n                        }\r\n                        if(property.nextStageColour) {\r\n                            property.cssNext = OrganiseColourService.getCurrColour(property.nextStageColour, 'text')\r\n                        }\r\n                        return property;\r\n                    })\r\n                })\r\n\r\n                actionsArray = response.data.map(function(patent){\r\n                    return patent.p3sServices.map(function(action){\r\n                        var obj = {};\r\n                        obj.patentID = patent.patentID;\r\n                        obj.serviceType = action.serviceType;\r\n                        obj.actionID = action.actionID\r\n                        return obj;\r\n                    })\r\n                })\r\n\r\n                deferred.resolve(response.data);\r\n\r\n            },\r\n            function(errResponse){\r\n                console.error('Error: Unable to fetch all patents. Error Response:', errResponse)\r\n                deferred.reject(errResponse);\r\n            }\r\n        );\r\n\r\n        return deferred.promise;\r\n    };\r\n\r\n    function fetchPatentItem(id) {\r\n\r\n        var deferred = $q.defer();\r\n        $http.get(ppdomain+'rest-patent/'+ id)\r\n            .then(\r\n            function (response) {\r\n\r\n                if(actionsArray === undefined || typeof actionsArray === 'undefined') {\r\n                    deferred.reject(response.data);\r\n                }\r\n                if(actionsArray.length) {\r\n                    response.data.p3sServicesWithFees.map(function(property){\r\n                        var item = actionsArray.flat().filter(function(action){\r\n                            return action.serviceType === property.serviceType && id == action.patentID;\r\n                        }).map(function(filtered){\r\n                            return filtered.actionID\r\n                        })\r\n\r\n                        property.actionID = item[0];\r\n\r\n                        if(property.currentStageColour) {\r\n                            property.cssCurrent = OrganiseColourService.getCurrColour(property.currentStageColour, 'text');\r\n                        }\r\n                        if(property.nextStageColour) {\r\n                            property.cssNext = OrganiseColourService.getCurrColour(property.nextStageColour, 'text');\r\n                        }\r\n                        return property;\r\n                    \r\n                    })\r\n\r\n                     deferred.resolve(response.data);\r\n                }\r\n\r\n               \r\n            },\r\n            function(errResponse){\r\n                console.error('Error: Unable to fetch patent. Error Response:', errResponse)\r\n                deferred.reject(errResponse);\r\n            }\r\n        );\r\n\r\n        return deferred.promise;\r\n    };    \r\n\r\n    function updatePatent(patent, id) {\r\n        //quick fix for resolving issues with converting circule structure to JSON(loop) \r\n        if(patent.p3sServicesWithFees.length > 1) {\r\n            patent.p3sServicesWithFees.map(function(action){\r\n                action.grantFeeUI = null;\r\n            })\r\n        }\r\n        var deferred = $q.defer();\r\n        $http.put(REST_SERVICE_URI+id, patent)\r\n            .then(\r\n            function (response) {\r\n                deferred.resolve(response.data);\r\n            },\r\n            function(errResponse){\r\n                console.error('Error: Unable to update patent. Error Response:', errResponse)\r\n                deferred.reject(errResponse);\r\n            }\r\n        );\r\n        return deferred.promise;\r\n    };\r\n\r\n    function savePatent(patent) {\r\n        var deferred= $q.defer();\r\n        $http.post(ppdomain+'rest-patents/', patent)\r\n            .then(function(response){\r\n                deferred.resolve(response.data);\r\n            }, function(errResponse) {\r\n                console.error('Error: Unable to save patent. Error Response:', errResponse)\r\n                deferred.reject(errResponse);\r\n            }\r\n        );\r\n        return deferred.promise;\r\n    };\r\n\r\n    function deletePatent(id) {\r\n        var deferred = $q.defer();\r\n        $http.delete(REST_SERVICE_URI+id)\r\n            .then(\r\n            function (response) {\r\n                deferred.resolve(response.data);\r\n            },\r\n            function(errResponse){\r\n                console.error('Error: Unable to delete patent. Error Response:', errResponse)\r\n                deferred.reject(errResponse);\r\n            }\r\n        );\r\n        return deferred.promise;\r\n    };\r\n\r\n\r\n}\r\n\r\n","import coreService from '../services/app.core.serv.js';\r\nimport PatentsRestService from '../../features/portfolio/services/patents.patentsRest.serv.js';\r\n\r\nexport default angular.module('ppApp.core', [coreService, PatentsRestService]).controller('coreCtrl', coreCtrl).name\r\n\r\ncoreCtrl.$inject = ['$uibModal', '$scope', 'coreService', 'localStorageService', '$timeout', 'PatentsRestService', 'Idle', 'Keepalive', '$http', '$cookies'];\r\n\r\nfunction coreCtrl($uibModal, $scope, coreService, localStorageService, $timeout, PatentsRestService, Idle, Keepalive, $http, $cookies) {\r\n\r\n\tvar vm = this;\r\n\r\n\tvar urgentResponse = [];\r\n\tvar systemResponse = [];\r\n\tvar patentsFound = true;\r\n\tvar userTimedOut = false;\r\n\tvar messageArr = [];\r\n\r\n\t$scope.$on('Keepalive', function() {\r\n\t\t$http.get(ppdomain+'keep-session-alive/');\r\n\t});\r\n\r\n\t$scope.$on('IdleStart', function() {\r\n\t\t\r\n\t  \tcloseModals();\r\n\r\n\t  \t$scope.warning = $uibModal.open({\r\n\t\t  \ttemplateUrl: 'app/templates/modals/modal.idle.tpl.htm',\r\n\t  \t\twindowClass: 'modal-danger',\r\n\t\t\tappendTo: undefined\r\n\t    });\r\n\t});\r\n\r\n  \t$scope.$on('IdleEnd', function() {\r\n\t  \tcloseModals();\r\n\t});\r\n\r\n\t$scope.$on('IdleTimeout', function() {\r\n\r\n\t  \tcloseModals();\r\n\r\n     \tngCart.empty();\r\n    \t$http.post('http://localhost:8080/p3sweb/resources/j_spring_security_logout')\r\n      \t.then(\r\n      \t\tfunction(response){\r\n      \t\t  \twindow.location.reload('http://localhost:8080/p3sweb/login');\r\n      \t\t},\r\n          \tfunction(errResponse) {\r\n            \tconsole.log(errResponse)\r\n          \t}    \r\n\t\t)    \t\r\n      \t\r\n\t});\r\n\r\n    function init() {\r\n\r\n\r\n        PatentsRestService.fetchAllPatents()\r\n        .then(\r\n            function(response){\r\n                if(response.length === 0) {\r\n                    welcomeMessageModal();\r\n                }\r\n            },\r\n            function(errResponse){\r\n                console.log(errResponse)\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    init();\r\n\r\n\tfunction welcomeMessageModal() {\r\n\t\tvar modalInstance = $uibModal.open({\r\n\t\t\ttemplateUrl: 'app/templates/modals/modal.welcome-message.tpl.htm',\r\n\t\t\tscope: $scope,\r\n\t\t\tcontrollerAs:'$ctrl',\r\n\t\t\tcontroller: ['$uibModalInstance', function($uibModalInstance) {\r\n\r\n\t\t \t  \tthis.dismissModal = function () {\r\n\t\t\t    \t$uibModalInstance.close();\r\n\t\t\t  \t};\r\n\t\t\t}]\r\n\t\t});\r\n \t}\r\n\r\n\tfunction closeModals() {\r\n\t    if ($scope.warning) {\r\n\t      \t$scope.warning.close();\r\n\t      \t$scope.warning = null;\r\n\t    }\r\n\r\n\t    if ($scope.timedout) {\r\n\t      $scope.timedout.close();\r\n\t      $scope.timedout = null;\r\n\t    }\r\n\t}\r\n\r\n}","import angular from 'angular';\r\n\r\nexport default angular.module('services.DashboardService', []).factory('DashboardService', DashboardService).name;\r\n\r\nDashboardService.$inject = ['$http', '$q', 'PatentsRestService']\r\n\r\nfunction DashboardService($http, $q, PatentsRestService) {\r\n\r\n    var factory = {\r\n        sortPatents: sortPatents,\r\n        getPatents: {},\r\n        setActionCost: setActionCost,\r\n        fetchActionCost: fetchActionCost,\r\n        actionCost: '',\r\n    };\r\n\r\n    return factory;\r\n\r\n\r\n\r\n    function sortPatents(patents) {\r\n\r\n        var obj = {\r\n            Green: [],\r\n            Amber: [],\r\n            Red: [],\r\n            Blue: [],\r\n            Black: [],\r\n            Grey: []\r\n        }\r\n\r\n        for(var property in obj) {\r\n            if(obj.hasOwnProperty(property)){\r\n                if(Array.isArray(obj[property])) {\r\n                    obj[property].length = 0;\r\n                } else {\r\n                    obj[property] = 0; //for totoal obj.Total\r\n                }\r\n            }\r\n        }\r\n\r\n        obj.Total = patents.length;\r\n\r\n        var newPatents = patents.map(function(patent){\r\n            return patent.p3sServices.map(function(serv){\r\n                return {                \r\n                    patentID: patent.patentID,\r\n                    ep_ApplicationNumber: patent.ep_ApplicationNumber,\r\n                    clientRef: patent.clientRef,\r\n                    p3sServices: [serv]\r\n                }\r\n            })\r\n        })\r\n\r\n\r\n        var result = [].concat(...newPatents);\r\n\r\n        result.forEach(function(patent){\r\n            patent.p3sServices.forEach(function(action, idx){\r\n                var string = action.currentStageColour.toLowerCase();\r\n                var capitlized = string.charAt(0).toUpperCase() + string.slice(1);\r\n                obj[capitlized].push(patent);\r\n            })\r\n        })\r\n\r\n        factory.getPatents = obj;\r\n    }\r\n\r\n\r\n    function setActionCost(patent) {\r\n\r\n        if(patent === undefined || patent.saleType === 'Not In Progress') {\r\n            factory.actionCost = undefined;\r\n            return\r\n        }\r\n\r\n        var action = patent.p3sServices[0].serviceType;\r\n\r\n        PatentsRestService.fetchPatentItem(patent.patentID)\r\n        .then(\r\n            function(patent){\r\n\r\n                var service = patent.p3sServicesWithFees.filter(function(el){\r\n                    return el.serviceType == action;\r\n                });\r\n\r\n                var fee = Object.keys(service[0]).find(function(el){\r\n                    if(el.indexOf('FeeUI') > 0 && service[0][el] !== null) {\r\n                        return true;\r\n                    }\r\n                    return false\r\n                })\r\n\r\n                if(service[0][fee]) {\r\n\r\n                    if(service[0].saleType === 'Online' || service[0].saleType === 'Offline') {\r\n                        patent.cartService = fee.replace('FeeUI','');\r\n                        patent.serviceCost = service[0][fee];\r\n                    }\r\n                }\r\n\r\n                return patent\r\n            }\r\n        )\r\n        .then(\r\n            function(patent){\r\n                factory.actionCost = patent;\r\n        })\r\n\r\n    }\r\n\r\n    function fetchActionCost() {\r\n        return factory.actionCost;\r\n    }\r\n    \r\n\r\n};","export default angular.module('services.calculate', []).factory('CalculateService', CalculateService).name;\r\n\r\nCalculateService.$inject = ['$q', '$timeout'];\r\n\r\nfunction CalculateService($q, $timeout) {\r\n\r\n\tvar factory = {\r\n\t\tcalculateHours: calculateHours,\r\n\t\trecentActivity: recentActivity\r\n\t};\r\n\r\n\treturn factory;\r\n\r\n\tfunction calculateHours(costband, response) {\r\n\r\n\t\tvar date = new Date().getTime();\r\n\t\tvar hours = '';\r\n\r\n        switch(costband) {\r\n            case 'Green':\r\n            \thours =  date - response.greenStartDate;\r\n\t\t\tbreak;\r\n\t\t\tcase 'Amber':\r\n\t\t\t\thours =  date - response.amberStartDate;\r\n\t\t\tbreak;\r\n\t\t\tcase 'Red':\r\n\t\t\t\thours =  date - response.redStartDate;\r\n\t\t\tbreak;\r\n\t\t\tcase 'Blue':\r\n\t\t\t\thours =  date - response.blueStartDate;\r\n\t\t\tbreak;\r\n\t\t\tcase 'Black':\r\n\t\t\t\tif(data.renewalStatus == 'Show price') {\r\n\t\t\t\t\thours =  date - response.blackStartDate;\r\n\t\t\t\t} \t\t\t\t\t\t\t\r\n\t\t} //switch end\r\n\r\n\t\treturn hours;\t\t\r\n\t}\r\n\r\n\tfunction recentActivity(millisec) {\r\n\t\t\r\n        var seconds = (millisec / 1000).toFixed(0);\r\n        var minutes = Math.floor(seconds / 60);\r\n        var hours = \"\";\r\n\r\n        if (minutes > 59) {\r\n            hours = Math.floor(minutes / 60);\r\n            hours = (hours >= 10) ? hours : \"0\" + hours;\r\n            minutes = minutes - (hours * 60);\r\n            minutes = (minutes >= 10) ? minutes : \"0\" + minutes;\r\n        }\r\n\r\n        seconds = Math.floor(seconds % 60);\r\n        seconds = (seconds >= 10) ? seconds : \"0\" + seconds;\r\n\r\n        if (hours !== '' && hours < 48) { //if within 48 hours\r\n            return true;\r\n        }\r\n\r\n    } //recentActivity end\r\n\r\n}","export default angular.module('services.cost-analysis', []).factory('CostAnalysisService', CostAnalysisService).name;\r\n\r\nCostAnalysisService.$inject = ['$http', '$q'];\r\n\r\nfunction CostAnalysisService($http, $q) {\r\n\r\n    var factory = {\r\n        fetchCa: fetchCa\r\n    }\r\n\r\n    function fetchCa(patentID, services) {\r\n\r\n        var array = [];\r\n        var deferred = $q.defer();\r\n\r\n        var obj = {};\r\n\r\n        services.forEach(function(data){ //for multiple services for single patent\r\n            if(data.saleType == 'Not In Progress') { return; }\r\n            obj[data.serviceType] = data; \r\n            if(data.serviceType == 'epct') {      \r\n                array.push($http.get(ppdomain+'rest-form1200-cost-analysis/'+patentID))\r\n\r\n            }\r\n            if(data.serviceType == 'renewal') {\r\n                array.push($http.get(ppdomain+'rest-cost-analysis/'+patentID))\r\n            }\r\n            if(data.serviceType == 'grant') {\r\n                array.push($http.get(ppdomain+'rest-grant-cost-analysis/'+patentID))\r\n            }            \r\n        })\r\n\r\n        $q.all(array)\r\n        .then(\r\n            function(response){\r\n                response.map(function(action, idx){\r\n                    action.info = Object.keys(obj)[idx]\r\n                    return action;\r\n                })\r\n                deferred.resolve(response);\r\n            },\r\n            function(errResponse){\r\n                console.error('Error: Unable to fetch cost analysis')\r\n                deferred.reject(errResponse)\r\n            }\r\n        )\r\n\r\n        return deferred.promise;\r\n\r\n        // return \r\n    }\r\n\r\n    return factory;\r\n\r\n}","export default angular.module('services.transaction-history', []).factory('TransactionHistoryService', TransactionHistoryService).name;\r\n\r\nTransactionHistoryService.$inject = ['$http', '$q'];\r\n\r\nfunction TransactionHistoryService($http, $q) {\r\n\r\n\tvar REST_SERVICE_URI = ppdomain+'rest-historic-transactions/';\r\n\r\n\tvar factory = {\r\n\t\tfetchTransactionHistory: fetchTransactionHistory, \r\n\t\tactionProgress: actionProgress\r\n\t};\r\n\r\n\treturn factory;\r\n\r\n\tfunction fetchTransactionHistory() {\r\n\r\n\t\tvar deferred = $q.defer();\r\n\t\t$http.get(REST_SERVICE_URI)\r\n\t\t.then(\r\n\t\t\tfunction(response){\r\n                response.data.map(function(el){\r\n                \tif(el.renewalUIs.length) {\r\n\t                \tel.renewalUIs.map(function(o){ \r\n\t                \t\to.newType = 'Renewal';\r\n\t                \t})\r\n                \t}\r\n                \tif(el.grantUIs.length) {\r\n\t                \tel.grantUIs.map(function(o){ \r\n\t                \t\to.newType = 'Grant';\r\n\t                \t})\r\n                \t}\r\n                \tif(el.epctUIs.length) {\r\n\t                \tel.epctUIs.map(function(o){ \r\n\t                \t\to.newType = 'Euro-PCT';\r\n\t                \t})\r\n                \t}                \t\r\n                    el.serviceUIs = [];\r\n                    el.serviceUIs = el.serviceUIs.concat(el.renewalUIs, el.grantUIs, el.epctUIs)\r\n                    return el;\r\n   \r\n                })\r\n                deferred.resolve(response.data);\r\n\t\t\t},\r\n\t\t\tfunction(errResponse){\r\n\t\t\t\tconsole.error('Error: unable to fetch transacrtion history: Error msg: ', errResponse)\r\n\t\t\t\tdeferred.reject(errResponse);\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\treturn deferred.promise;\r\n\r\n\t};\r\n\r\n\tfunction actionProgress(currTransStatus) {\r\n\r\n\t\tvar progress = 0;\r\n\r\n\t\tswitch(currTransStatus) {\r\n    \t\tcase 'Initiated':\r\n    \t\t\tprogress = 14;\r\n    \t\tbreak;\r\n    \t\tcase 'Awaiting Funds':\r\n    \t\t\tprogress = 28;\r\n\t\t\tbreak;\r\n    \t\tcase 'Funds Received':\r\n    \t\t\tprogress = 42;\r\n\t\t\tbreak;\t\r\n    \t\tcase 'Funds Sent':\r\n    \t\t\tprogress = 56;\r\n\t\t\tbreak;\t\r\n    \t\tcase 'EPO Received':\r\n    \t\t\tprogress = 70;\r\n\t\t\tbreak;\t\r\n    \t\tcase 'EPO Instructed':\r\n    \t\t\tprogress = 84;\r\n\t\t\tbreak;\r\n    \t\tcase 'Completed':\r\n    \t\t\tprogress = 100;\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn progress;\r\n\r\n\t};\r\n\r\n}","export default angular.module('services.current-transactions', []).factory('CurrentTransactionsService', CurrentTransactionsService).name;\r\n\r\nCurrentTransactionsService.$inject = ['$http', '$q'];\r\n\r\nfunction CurrentTransactionsService($http, $q) {\r\n\r\n\tvar REST_SERVICE_URI = ppdomain+'rest-current-transactions/';\r\n\r\n\tvar factory = {\r\n\t\tfetchCurrentTransactions:fetchCurrentTransactions,\r\n\t\tactionProgress: actionProgress\r\n\t};\r\n\r\n\treturn factory;\r\n\r\n\tfunction fetchCurrentTransactions() {\r\n\r\n\t\tvar deferred = $q.defer();\r\n\t\t$http.get(REST_SERVICE_URI)\r\n\t\t.then(\r\n\t\t\tfunction(response){\r\n                response.data.map(function(el){\r\n                \tif(el.renewalUIs.length) {\r\n\t                \tel.renewalUIs.map(function(o){ \r\n\t                \t\to.newType = 'Renewal';\r\n\t                \t})\r\n                \t}\r\n                \tif(el.grantUIs.length) {\r\n\t                \tel.grantUIs.map(function(o){ \r\n\t                \t\to.newType = 'Grant';\r\n\t                \t})\r\n                \t}\r\n                \tif(el.epctUIs.length) {\r\n\t                \tel.epctUIs.map(function(o){ \r\n\t                \t\to.newType = 'Euro-PCT';\r\n\t                \t})\r\n                \t}\r\n                    el.serviceUIs = [];\r\n                    el.serviceUIs = el.serviceUIs.concat(el.renewalUIs, el.grantUIs, el.epctUIs)\r\n                    return el;\r\n   \r\n                })\r\n\t\t\t\tdeferred.resolve(response.data);\r\n\t\t\t},\r\n\t\t\tfunction(errResponse){\r\n\t\t\t\tconsole.error('Error: unable to fetch current transactions: Error msg: ', errResponse)\r\n\t\t\t\tdeferred.reject(errResponse);\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\treturn deferred.promise;\r\n\r\n\t};\r\n\r\n\tfunction actionProgress(currTransStatus) {\r\n\r\n\t\tvar progress = 0;\r\n\t\t\r\n\t\tswitch(currTransStatus) {\r\n    \t\tcase 'Initiated':\r\n    \t\t\tprogress = 14;\r\n    \t\tbreak;\r\n    \t\tcase 'Awaiting Funds':\r\n    \t\t\tprogress = 28;\r\n\t\t\tbreak;\r\n    \t\tcase 'Funds Received':\r\n    \t\t\tprogress = 42;\r\n\t\t\tbreak;\t\r\n    \t\tcase 'Funds Sent':\r\n    \t\t\tprogress = 56;\r\n\t\t\tbreak;\t\r\n    \t\tcase 'EPO Received':\r\n    \t\t\tprogress = 70;\r\n\t\t\tbreak;\t\r\n    \t\tcase 'EPO Instructed':\r\n    \t\t\tprogress = 84;\r\n\t\t\tbreak;\r\n    \t\tcase 'Completed':\r\n    \t\t\tprogress = 100;\r\n\t\t\tbreak;\t       \t\t\t\t\t    \t\t\t    \t\t\t    \t\t\t\r\n\r\n\t\t}\r\n\r\n\t\treturn progress;\r\n\r\n\t};\r\n\r\n}","DashboardController.$inject = ['$state',  '$timeout', '$scope', 'DashboardService', 'PatentsRestService'];\r\n\r\nexport default function DashboardController($state, $timeout, $scope, DashboardService, PatentsRestService) {\r\n\r\n    var vm = this;\r\n\r\n    vm.animate = false;\r\n    vm.date = new Date().getTime();\r\n\r\n    var promise = PatentsRestService.fetchAllPatents();\r\n\r\n    promise.then(\r\n        function(response){\r\n            DashboardService.sortPatents(response);\r\n            $scope.dashboardData = response;\r\n            vm.dashboardLoaded = true;\r\n            $state.go('dashboard.content', {patents: response}, {reload: false});\r\n        }\r\n    )\r\n\r\n    $scope.$on('updatePatent', function(e, o){\r\n        $scope.$broadcast('updateCost');\r\n    })\r\n\r\n}","ActionsAvailableController.$inject = ['$scope', '$timeout', 'DashboardService']\r\n\r\nexport default function ActionsAvailableController($scope, $timeout, DashboardService) {\r\n\r\n\tvar vm = this;\r\n\r\n\tvm.phaseLoaded = true;\r\n\r\n    vm.date = new Date();\r\n    vm.setActionCost = setActionCost;\r\n    vm.setPhase = setPhase\r\n\r\n    vm.patents = (function(){\r\n        var obj = {}\r\n        for(var property in DashboardService.getPatents) {\r\n            if(DashboardService.getPatents.hasOwnProperty(property)) {\r\n                if(Array.isArray(DashboardService.getPatents[property])) {\r\n                    obj[property] = DashboardService.getPatents[property].filter(function(el){\r\n                        return el.p3sServices[0].saleType === 'Online' || el.p3sServices[0].saleType === 'Offline';\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        return obj;\r\n    }())\r\n\r\n    vm.availableActions = 0;\r\n    var setActionCostTmeout;\r\n\r\n    function initialPhase(){\r\n        for(var property in vm.patents) {\r\n            if(vm.patents.hasOwnProperty(property)) {\r\n                if(vm.patents[property].length > 0) {\r\n                    return vm.patents[property][0];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function setPhase(phase) {\r\n        setActionCost(vm.patents[phase][0])\r\n    }\r\n\r\n    function setActionCost(patent) {\r\n        DashboardService.setActionCost(patent)\r\n        setActionCostTmeout = $timeout(function(){\r\n            $scope.$emit('updatePatent')\r\n        })\r\n    }\r\n\r\n    $scope.$on('$destroy', function(){\r\n        $timeout.cancel(setActionCostTmeout)\r\n    })\r\n\r\n    setActionCost(initialPhase())\r\n\r\n}","GraphDonutController.$inject = ['$scope', '$timeout', 'DashboardService', '$stateParams'];\r\n\r\nexport default function GraphDonutController($scope, $timeout, DashboardService, $stateParams) {\r\n\r\n\tvar vm = this;\r\n\tvar graphtDonutTimeout;\r\n\r\n\tfunction init() {\r\n\r\n\t\tif($stateParams.patents.length > 0) {\r\n\t\t\tvm.patentData = DashboardService.getPatents;\r\n\t\t\tgraphtDonutTimeout = $timeout(function() { //required to load correct size of donut graph in view\r\n\t      \t\tvm.donutOptions = {\r\n\t\t            chart: {\r\n\t\t                type: 'pieChart',\t\r\n\t\t                height: 200,\r\n\t\t                donut: true,\r\n\t\t                margin: { top: 0, right: 0, bottom: 0, left: 0 },\r\n\t\t                tooltip: {\r\n\t\t\t\t\t\t  hideDelay: 0\r\n\t\t\t\t\t\t},\r\n\t\t                x: function(d){\r\n\t\t                \treturn d.key;\r\n\t\t                },\r\n\t\t                y: function(d){\r\n\t\t                \treturn d.y;\r\n\t\t                },\r\n\t\t                donutRatio: 0.60,\r\n\t\t\t\t\t\tduration: 500,\r\n\t\t                showLabels: false,\r\n\t\t                showLegend: false,\r\n\t\t                valueFormat: function(d) {\r\n\t\t                \treturn d;\r\n\t\t                }\r\n\t\t            }\r\n\t\t        };\r\n\r\n\t\t        vm.donutData = [\r\n\t\t        \t{\r\n\t\t        \t\tkey: 'Green', \r\n\t\t        \t\ty: vm.patentData.Green.length,\r\n\t\t        \t\tcolor: '#53ab58'\r\n\t\t        \t},\r\n\t\t        \t{\r\n\t\t        \t\tkey: 'Amber', \r\n\t\t        \t\ty: vm.patentData.Amber.length,\r\n\t\t        \t\tcolor: '#f9b233'\r\n\t\t        \t},\r\n\t\t        \t{\r\n\t\t        \t\tkey: 'Red', \r\n\t\t        \t\ty: vm.patentData.Red.length,\r\n\t\t        \t\tcolor: '#e30613'\r\n\t\t        \t},\r\n\t\t        \t{\r\n\t\t        \t\tkey: 'Blue',\r\n\t\t        \t\ty: vm.patentData.Blue.length,\r\n\t\t        \t\tcolor: '#0097ce'\r\n\t\t        \t},\r\n\t\t        \t{\r\n\t\t        \t\tkey: 'Black', \r\n\t\t        \t\ty: vm.patentData.Black.length,\r\n\t\t        \t\tcolor: '#3c3c3b'\r\n\t\t        \t},\r\n\t\t        \t{\r\n\t\t        \t\tkey: 'Grey', \r\n\t\t        \t\ty: vm.patentData.Grey.length,\r\n\t\t        \t\tcolor: '#dbdbdb'\r\n\t\t        \t}\r\n\t\t        ]\r\n\r\n\r\n\t\t            var evt = document.createEvent('UIEvents');\r\n\t\t            evt.initUIEvent('resize', true, false, window, 0);\r\n\t\t            window.dispatchEvent(evt);\r\n\r\n\t  \t\t}, 1000);\r\n\r\n\r\n\t\t} //if patents end\t\r\n\t}\r\n\r\n\tinit()\r\n\r\n\r\n\r\n\t$scope.$on('$destroy', function(){\r\n\t\t$timeout.cancel(graphtDonutTimeout);\r\n\t})\r\n}","DbFxChartCtrl.$inject = ['$scope', '$timeout', 'fxRatesMonth'];\r\n\r\nexport default function DbFxChartCtrl($scope, $timeout, fxRatesMonth) {\r\n\r\n    var vm = this;\r\n    var fxChartTimeout;\r\n\r\n    function init() {\r\n\r\n        fxChartTimeout = $timeout(function() {\r\n\r\n            vm.lineData = lineData;\r\n            vm.lineOptions = {\r\n                chart: {\r\n                    type: 'lineChart',\r\n                    height: 450,\r\n                    margin : {\r\n                        top: 20,\r\n                        right: 20,\r\n                        bottom: 55,\r\n                        left: 55\r\n                    },\r\n                    clipEdge: false,\r\n                    tooltip: {\r\n                      hideDelay: 0\r\n                    },                      \r\n                    showLegend: false,\r\n                    x: function(d, i){ \r\n                        return d[0]},\r\n                    y: function(d){ return d[1]; },\r\n                    useInteractiveGuideline: true,\r\n                    xAxis: {\r\n                        tickFormat: function (d, i) {\r\n                            return d3.time.format('%x')(new Date(d));\r\n                        },\r\n\r\n                        showMaxMin: false,\r\n                        rotateLabels: -30,\r\n                        ticks: 24        \r\n                    },\r\n                    xScale: d3.time.scale(),\r\n                    yAxis: {\r\n                        tickFormat: function(d){\r\n                            return d3.format('.04f')(d);\r\n                        },\r\n                        axisLabelDistance: -10,\r\n                        ticks: 10,\r\n                        showMaxMin: false\r\n                    },\r\n                    tooltip: {\r\n                        keyFormatter: function(d) {\r\n                            return d3.time.format('%x')(new Date(d));\r\n                        }\r\n                    },                      \r\n                    useVoronoi: false,\r\n                    lines: {\r\n                        interactive: true\r\n                    },\r\n                    showXAxis: true,\r\n                    showYAxis: true,\r\n                    // forceY: [0],            \r\n                    callback: function(chart){\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n        }, 2000);\r\n    }\r\n\r\n    init();\r\n\r\n    function lineData() {\r\n\r\n        var chartValueArrs = [];\r\n\r\n        for(var i = 0; i < fxRatesMonth.length; i++) {\r\n            chartValueArrs.push([fxRatesMonth[i].rateActiveDate, fxRatesMonth[i].rate]);\r\n        }\r\n\r\n        return [\r\n            {\r\n                values: chartValueArrs.reverse(),\r\n                color: '#2ca02c'\r\n            }\r\n        ]\r\n\r\n    } //function end\r\n\r\n    $scope.$on('$destroy', function(){\r\n        $timeout.cancel(fxChartTimeout)\r\n    })\r\n\r\n}\r\n","ActionCostController.$inject = ['$scope', '$timeout', 'DashboardService']\r\n\r\nexport default function ActionCostController($scope, $timeout, DashboardService) {\r\n\r\n\tvar vm = this;\r\n\r\n\tvm.fxTimeFrame = 'Today';\r\n\r\n    vm.loading = true;\r\n    vm.noPatents = true;\r\n    var updateCosttimeout;\r\n\r\n    $scope.$on('dashboardLoaded', function(event, response){\r\n        if(response.length == 0) {\r\n            vm.noPatents = true;\r\n        }\r\n    })\r\n\r\n   $scope.$on('updateCost', function(e, o){\r\n        updateCosttimeout = $timeout(function(){\r\n            vm.actionCost = DashboardService.fetchActionCost();\r\n            vm.loading = false;\r\n        }, 300);\r\n    })  \r\n\r\n   $scope.$on('$destroy', function(){\r\n        $timeout.cancel(updateCosttimeout)\r\n   })\r\n\r\n}\r\n","RecentActvityController.$inject = ['CalculateService', 'CostAnalysisService', 'TransactionHistoryService', 'CurrentTransactionsService', '$stateParams'];\r\n\r\nexport default function RecentActvityController(CalculateService, CostAnalysisService, TransactionHistoryService, CurrentTransactionsService, $stateParams) {\r\n\r\n\tvar vm = this;\r\n\r\n\tvm.date = new Date().getTime();\r\n\r\n\tvm.fetchStageChanges = fetchStageChanges;\r\n\tvm.fetchTransChanges = fetchTransChanges;\r\n\r\n    vm.setActivityActiveTab = setActivityActiveTab;\r\n\tvm.changeActivity = changeActivity;\r\n    vm.activityNotifications = [\r\n\t\t{\r\n\t\t\tactivity: 'Stage Change',\r\n\t\t\tindex: 0,\r\n\t\t\tfunction: 'fetchStageChanges'\r\n\t\t},\r\n\t\t{\r\n\t\t\tactivity: 'Transactions',\r\n\t\t\tindex: 1,\r\n\t\t\tfunction: 'fetchTransChanges'\t\t\t\r\n\t\t}\r\n\t]\r\n\r\n\tvm.activeMenu = vm.activityNotifications[0].activity;\r\n    var transactionHistory = (function() {\r\n        return TransactionHistoryService.fetchTransactionHistory();\r\n    }())\r\n    var currentTransactions = (function() {\r\n        return CurrentTransactionsService.fetchCurrentTransactions();\r\n    }())\r\n\r\n    function init() {\r\n    \tfetchStageChanges($stateParams.patents)\r\n    }\r\n\r\n    init();\r\n\r\n\tfunction changeActivity(activity) {\r\n\r\n\t\tif(activity == 'Stage Change') {\r\n\t\t\tfetchStageChanges();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(activity == 'Transactions') {\r\n\t\t\tfetchTransChanges();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction fetchStageChanges(patents) {\r\n\r\n\t\tvm.recentActivityData = [];\r\n\r\n\t\tif(patents.length > 0) {\r\n\t\t\tpatents.forEach(function(patent){\r\n\t\t\t\tpatent.p3sServices.forEach(function(service){\r\n\t\t\t\t\tif(service.saleType !== 'Not In Progress' && service.saleType !== 'In Progress') {\r\n\t\t\t\t\t\tCostAnalysisService.fetchCa(patent.patentID, patent.p3sServices)\r\n\t\t\t\t\t\t.then(\r\n\t\t\t\t\t\t\tfunction(response, i){\r\n\t\t        \t\t\t\tvar hours = CalculateService.calculateHours(service.currentStageColour, response[0].data);\r\n\t\t    \t\t\t\t\tif(CalculateService.recentActivity(hours)) {\r\n\t\t    \t\t\t\t\t\tvm.recentActivityData.push(patent);\r\n\t\t    \t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tfunction(errResponse) {\r\n\t\t\t\t\t\t\t\tconsole.error('Error finding recent activites:', errResponse)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tfunction fetchTransChanges() {\r\n\r\n\t\tvm.recentTransArr = [];\r\n\t\tcurrentTransactions\r\n\t\t.then(\r\n\t\t\tfunction(response){\r\n\t\t\t\tif(response.length > 0) {\r\n\t\t\t\t\tresponse.forEach(function(data){\r\n\t\t\t\t\t\tvar hours =  new Date().getTime() - data.lastUpdatedDate;\r\n\t\t\t\t\t\tvar recentTrans  = CalculateService.recentActivity(hours);\r\n\t\t\t\t\t\tif(recentTrans) {\r\n\t\t\t\t\t\t\tvm.recentTransArr.push(data);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tfunction(errResponse) {\r\n\t\t\t\tconsole.error('Error finding recent transactions: ', errResponse)\r\n\t\t\t}\r\n\t\t)\r\n\r\n\r\n\t}\r\n\r\n\tfunction setActivityActiveTab (menuItem, index) {\r\n        vm.activeActivityTab = index;\r\n\t\tvm.activeActivityTabResp = index; //needed for responsiveness\r\n\t\tvm.activeMenu = menuItem;\r\n\t};\t    \r\n\r\n}\r\n","routes.$inject = ['$stateProvider'];\r\n\r\nexport default function routes($stateProvider) {\r\n\r\n    $stateProvider\r\n    .state('dashboard', {\r\n        url: '/dashboard',\r\n        template: require('html-loader!./html/dashboard.tpl.htm'),\r\n        controller: 'DashboardController',\r\n        controllerAs: '$ctrl'\r\n    })    \r\n    .state('dashboard.content', {\r\n        params: {\r\n            patents: null\r\n        },\r\n        resolve: {\r\n            fxRatesMonth: ['fxService', function(fxService) {\r\n                return fxService.fetchFxMonth();\r\n            }]                    \r\n        },\r\n        views: {\r\n            'graphdonutwidget@dashboard': {\r\n                template: require('html-loader!./html/dashboard.graph-donut-widget.tpl.htm'),\r\n                controller: 'GraphDonutController',\r\n                controllerAs: '$ctrl',\r\n            },\r\n            'actionsavailable@dashboard': {\r\n                template: require('html-loader!./html/dashboard.actions-available.tpl.htm'),\r\n                controller: 'AvailableActionsController',\r\n                controllerAs: '$ctrl'                \r\n            },\r\n            'actioncost@dashboard': {\r\n                template: require('html-loader!./html/dashboard.action-cost.tpl.htm'),\r\n                controller: 'ActionCostController',\r\n                controllerAs: '$ctrl'\r\n            },\r\n            'actioncostmd@dashboard': {\r\n                template: require('html-loader!./html/dashboard.action-cost.tpl.htm'),\r\n                controller: 'ActionCostController',\r\n                controllerAs: '$ctrl'\r\n            },            \r\n            'fxchartwidget@dashboard': {\r\n                template: require('html-loader!./html/dashboard.fxchart-widget.tpl.htm'),\r\n                controller: 'FxChartController',\r\n                controllerAs: '$ctrl',\r\n            },\r\n            'recentactivitywidget@dashboard': {\r\n                template: require('html-loader!./html/dashboard.recent-activity-widget.tpl.htm'),\r\n                controller: 'RecentActivityController',\r\n                controllerAs: '$ctrl'\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n","import './_dashboard.scss';\r\n\r\nimport angular from 'angular';\r\n\r\nimport DashboardService from './services/dashboard.service.js';\r\nimport PatentsRestService from '../portfolio/services/patents.patentsRest.serv.js';\r\nimport CalculateService from '../../global/services/calculate.service.js';\r\nimport CostAnalysisService from '../../global/services/cost-analysis.service.js';\r\nimport TransactionHistoryService from '../../features/transactions/services/transaction-history.service.js';\r\nimport CurrentTransactionsService from '../../features/transactions/services/current-transactions.service.js';\r\n\r\nimport DashboardController from './controllers/dashboard.controller';\r\nimport AvailableActionsController from './controllers/actions-available.controller';\r\nimport GraphDonutController from './controllers/donut-chart.controller';\r\nimport FxChartController from './controllers/fx-chart.controller';\r\nimport ActionCostController from './controllers/action-cost.controller';\r\nimport RecentActivityController from './controllers/recent-activity.controller';\r\n\r\nimport routing  from './dashboard.routes';\r\n\r\nexport default angular.module('ppApp.dashboard', [DashboardService, PatentsRestService, CalculateService, CostAnalysisService, TransactionHistoryService, CurrentTransactionsService]) //import dashboard view controllers\r\n\t.config(routing)\r\n  \t.controller('DashboardController', DashboardController)\r\n  \t.controller('AvailableActionsController', AvailableActionsController)\r\n  \t.controller('GraphDonutController', GraphDonutController)\r\n  \t.controller('FxChartController', FxChartController)\r\n  \t.controller('ActionCostController', ActionCostController)\r\n  \t.controller('RecentActivityController', RecentActivityController)\r\n  \t.name;\r\n","export default angular.module('services.search-patent-service', []).factory('SearchPatentService', SearchPatentService).name;\r\n\r\nSearchPatentService.$inject = ['$http', '$q']; \r\n\r\nfunction SearchPatentService($http, $q) {\r\n\r\n    var REST_SEARCH_PATENT_SERVICE_URI = ppdomain+'rest-search-patents/';\r\n\r\n    var factory = {\r\n        findPatent: findPatent\r\n    };\r\n\r\n    return factory;\r\n\r\n    function findPatent(patentNo) {\r\n\r\n        var deferred= $q.defer();\r\n        \r\n        var patentItem = REST_SEARCH_PATENT_SERVICE_URI + patentNo;\r\n        \r\n        $http.get(patentItem)\r\n            .then(\r\n                function(response){\r\n                deferred.resolve(response);\r\n            }, function(errResponse) {\r\n                switch(errResponse.status) {\r\n                    case 400:\r\n                        errResponse.data = 'We\\'ve not been able to find that patent in the European Patent Register. Please enter an application number such as EP18123456.2';\r\n                    break;\r\n                    case 404:\r\n                        errResponse.data = 'We’ve not been able to find Patent Application '+patentNo+' in the European Patent Register. Please check the number you’re entering and try again.';\r\n                    break;\r\n                    case 204:\r\n                        errResponse.data = 'It looks like we\\'ve already added Patent Application '+patentNo+' in to the system. You should be able to find it in the List Patents page using the search boxes.';\r\n                    break;\r\n                    default:\r\n                        errResponse.data = null;\r\n                }\r\n                deferred.reject(errResponse);\r\n\r\n                // console.error('$Http Error 'errResponse.status': Unable to fetch  information from EPO')\r\n            }\r\n        )\r\n\r\n\r\n        return deferred.promise;\r\n\r\n    };\r\n}","routes.$inject = ['$stateProvider'];\r\n\r\nexport default function routes($stateProvider) {\r\n\r\n    $stateProvider\r\n    .state('portfolio', {\r\n        url: '/portfolio',\r\n        template: require('html-loader!./html/portfolio.tpl.htm'),\r\n        controller: 'PortfolioController',\r\n        controllerAs: '$ctrl',\r\n        params: {\r\n            navigation: 'portfolio'\r\n        }\r\n    })\r\n}\r\n\r\n","import './_portfolio.scss';\r\n\r\nimport angular from 'angular';\r\n\r\nimport PatentsRestService from './services/patents.patentsRest.serv.js';\r\nimport SearchPatentService from './services/portfolio.search-patent.serv.js';\r\n\r\nimport PortfolioController from './controllers/portfolio.controller';\r\n\r\nimport routing  from './portfolio.routes';\r\n\r\nexport default angular.module('ppApp.portfolio', [PatentsRestService, SearchPatentService]) //import dashboard view controllers\r\n\t.config(routing)\r\n  \t.controller('PortfolioController', PortfolioController)\r\n  \t.name;","export default angular.module('services.sidenav', []).factory('SidenavService', SidenavService).name;\r\n\r\nfunction SidenavService(){\r\n\t\r\n\t\tvar sections = [{\r\n  \t\tname: 'Dashboard',\r\n  \t\ttype: 'link',\r\n  \t\tstate: 'dashboard',\r\n  \t\ticon: 'far fa-tachometer-alt'\r\n\t\t}];    \r\n  \tsections.push({\r\n  \t\tname: 'Portfolio',\r\n  \t\ttype: 'toggle',\r\n  \t\tpages: [\r\n  \t\t\t{\r\n      \t\tname: 'Portfolio',\r\n      \t\ttype: 'link',\r\n      \t\tstate: 'portfolio'\r\n\t\t    },\r\n\t\t    {\r\n\t\t\t\t  name: 'Add Patent',\r\n\t\t\t\t  type: 'link',\r\n\t\t\t\t  state: 'search-patent'\r\n\t\t    }\r\n\t\t  ],\r\n\t\t  icon: 'far fa-folders'\r\n    })\r\n\r\n  \tsections.push({\r\n  \t\t\r\n  \t\tname: 'Transactions',\r\n  \t\ttype: 'toggle',\r\n  \t\tpages: [\r\n  \t\t\t{\r\n            name: 'Current',\r\n            state: 'current-transactions',\r\n            type: 'link',\r\n        },\r\n        {\r\n            name: 'History',\r\n            state: 'transaction-history',\r\n            type: 'link',\r\n        }\r\n      ],\r\n      icon: 'far fa-money-check-alt'\r\n\t})\r\n     \r\n     \t// console.log(sections)\r\n\r\n \tvar self;\r\n\r\n    return self = {\r\n      sections: sections,\r\n\r\n    \ttoggleSelectSection: function (section) {\r\n      \tself.openedSection = (self.openedSection === section ? null : section);\r\n    \t},\r\n      \tisSectionSelected: function (section) {\r\n       \t\treturn self.openedSection === section;\r\n      \t},\r\n      \tselectPage: function (section, page) {\r\n        \tpage && page.url && $location.path(page.url);\r\n          self.currentSection = section;\r\n          self.currentPage = page;\r\n      \t}\r\n    };\r\n\r\n};","import angular from 'angular';\r\n\r\nexport default angular.module('directives.sidenav.menutoggle', []).directive('menuToggle', menuToggle).name;\r\n\r\nfunction menuToggle() {\r\n\r\n    return {\r\n        scope: {\r\n            section: '=',\r\n            context: '='\r\n        },\r\n        template: require('html-loader!../html/sidenav-nav-li.tpl.htm'),\r\n        link: function($scope, $element) {\r\n            var controller = $scope.context\r\n\r\n            $scope.isOpen = function() {\r\n                 return controller.isOpen($scope.section);\r\n            };\r\n            $scope.toggle = function() {\r\n                controller.toggleOpen($scope.section);\r\n            };\r\n        }\r\n    };\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","export default angular.module('directives.sidenav.menuLink', []).directive('menuLink', menuLink).name;\r\n\r\nfunction menuLink() {\r\n    return {\r\n        scope: {\r\n            section: '='\r\n        },\r\n        template: require('html-loader!../html/sidenav-li-item.tpl.htm'),\r\n        link: function ($scope, $element) {\r\n            var controller = $element.parent().controller();\r\n            // $scope.focusSection = function () {\r\n            //     // set flag to be used later when\r\n            //     // $locationChangeSuccess calls openPage()\r\n            //     controller.autoFocusContent = true;\r\n            // };\r\n        }\r\n    };\r\n};\r\n\r\n","export default angular.module('components.sidenav', []).component('sidenav', {\r\n\r\n\t\ttemplate: require('html-loader!../html/sidenav.tpl.htm'),\r\n\t\tcontroller: ['$scope', '$rootScope', '$mdSidenav', '$timeout', 'userService', 'SidenavService',  'ngCart', 'coreService',  'moment', 'fxService', function($scope, $rootScope, $mdSidenav, $timeout, userService, SidenavService, ngCart, coreService, moment, fxService){\r\n\r\n\t\t\tvar vm = this;\r\n\r\n\t\t \tvm.toggleLeft = buildToggler('left');\r\n\t\t    vm.toggleRight = buildToggler('right');\r\n\t\t\tvm.isOpen = isOpen;\r\n\t      \tvm.toggleOpen = toggleOpen;\r\n\t      \tvm.autoFocusContent = false;\r\n\t      \tvm.menu = SidenavService;\r\n\t      \tvm.status = {\r\n\t        \tisFirstOpen: true,\r\n\t        \tisFirstDisabled: false\r\n\t      \t};\r\n\t\t    \r\n\t      \tfunction init() {\r\n\r\n\t\t\t\tuserService.fetchUser()\r\n\t\t\t\t.then(\r\n\t\t\t\t\tfunction(response){\r\n\t\t\t\t\t\tvm.user = response;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfunction(errResponse){\r\n\t\t\t\t\t\tconsole.log(errResponse)\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t    \tfxService.fetchFx()\r\n\t\t    \t.then(\r\n\t\t    \t\tfunction(response){\r\n\t\t    \t\t\tvm.fxRate = response.currentFXRate.rate\r\n\t\t    \t\t},\r\n\t\t    \t\tfunction(errResponse){\r\n\t\t    \t\t\tconsole.log(errResponse)\r\n\t\t    \t\t}\r\n\t\t    \t)\t\r\n\r\n\t\t\t    $timeout(function() {\r\n\t\t\t    \ttimeZoneClocks();\r\n\t\t\t    \tvm.timeLoaded = true;   \r\n\t\t\t    })\t    \t\r\n\r\n\t      \t}\r\n\r\n\r\n\t      \tinit()\r\n\r\n\t      \tfunction isOpen(section) {\r\n\t        \treturn vm.menu.isSectionSelected(section);\r\n\t      \t}\r\n\t      \tfunction toggleOpen(section) {\r\n\t        \tvm.menu.toggleSelectSection(section);\r\n\t      \t}\r\n\r\n\r\n\t\t    function buildToggler(componentId) {\r\n\t\t      \treturn function() {\r\n\t\t        \t$mdSidenav(componentId).toggle();\r\n\t\t      \t};\r\n\t\t    }\r\n\r\n\t\t    function timeZoneClocks() {\r\n\r\n\t\t        var utc = moment.tz(\"Etc/UTC\").format('HH:mm MM/DD/YYYY');\r\n\t\t        var est = moment.tz(\"America/New_York\").format('HH:mm MM/DD/YYYY');\r\n\t\t    \r\n\t\t        var t = $timeout(function() {\r\n\t\t            vm.utcTime = utc;\r\n\t\t            vm.estTime =  est;\r\n\t\t            timeZoneClocks()\r\n\t\t        }, 500);\r\n\r\n\t\t    }\r\n\r\n\t\t\tvm.empty = function() {\r\n\t\t\t\tngCart.empty();\r\n\t\t\t}    \r\n\r\n\t\t\tfunction welcomeMessageModal() {\r\n\t\t\t\tvar modalInstance = $uibModal.open({\r\n\t\t\t\t\ttemplateUrl: 'app/templates/modals/modal.welcome-message.tpl.htm',\r\n\t\t\t\t\tscope: $scope,\r\n\t\t\t\t\tcontrollerAs:'$ctrl',\r\n\t\t\t\t\tcontroller: ['$uibModalInstance', function($uibModalInstance) {\r\n\r\n\t\t\t\t \t  \tthis.dismissWelcomeModal = function () {\r\n\t\t\t\t\t    \t$uibModalInstance.close();\r\n\t\t\t\t\t  \t};\r\n\t\t\t\t\t}]\r\n\t\t\t\t});\r\n\t\t \t}    \r\n\t\t}]\r\n}).name\r\n","import angular from 'angular';\r\n\r\nimport SidenavService from './services/sidenav.service';\r\n\r\nimport MenuToggle from './directives/menu-toggle.directive';\r\nimport MenuLink from './directives/menu-link.directive';\r\n\r\nimport sidenav from './components/sidenav.component';\r\n\r\n// import 'font-awesome/scss/font-awesome.scss';\r\n\r\n\r\nexport default angular.module('ppApp.sidenav', [SidenavService, sidenav, MenuToggle,  MenuLink]) //import dashboard view controllers\r\n  \t.name;\r\n","\r\nimport \"localScripts/js/config.js\";;\r\nimport \"localScripts/js/polyfillers.js\";\r\n\r\nimport \"babel-polyfill\";\r\nimport $ from 'jquery'; //neede to prevent error with slick-carousel\r\nwindow.jQuery = $;\r\nwindow.$ = $;\r\nimport \"jquery/dist/jquery.min.js\";\r\nimport \"angular/angular.min.js\";\r\nimport \"angular-cookies/angular-cookies.min.js\";\r\nimport \"angular-animate/angular-animate.min.js\";\r\nimport \"angular-sanitize/angular-sanitize.js\";\r\nimport \"angular-aria/angular-aria.min.js\";\r\nimport \"angular-material/angular-material.min.js\";\r\nimport 'angular-touch/angular-touch.min.js';\r\nimport \"angular-local-storage/dist/angular-local-storage.min.js\";\r\n\r\nimport \"tether/dist/js/tether.min.js\";\r\nimport \"bootstrap/dist/js/bootstrap.min.js\";\r\nimport \"angular-ui-bootstrap/dist/ui-bootstrap-tpls.js\";\r\nimport \"popper.js/dist/popper.min.js\";\r\n\r\nimport \"moment/min/moment.min.js\";\r\nimport \"moment-timezone/builds/moment-timezone.min.js\";\r\nimport \"moment-timezone/builds/moment-timezone-with-data-2012-2022.min.js\";\r\n// import 'bootstrap/dist/css/bootstrap.css';\r\n\r\nimport \"d3/d3.min.js\";\r\nimport \"nvd3/build/nv.d3.min.js\";\r\nimport \"angular-nvd3/dist/angular-nvd3.min.js\";\r\n\r\nimport angular from 'angular';\r\nimport uirouter from 'angular-ui-router';\r\nimport ngIdle from \"ng-idle/angular-idle.min.js\";\r\nimport ngCart from \"../../assets/js/vendors/ngCart.js\";\r\nimport angularMoment from \"angular-moment\";\r\nimport nvd3 from \"angular-nvd3\";\r\nimport croppie from \"angular-croppie/angular-croppie.js\";\r\n\r\nimport config from '../../app/app.config.js';\r\n\r\nimport userService from '../../app/features/user/services/user.user.serv.js';\r\n\r\nimport coreCtrl from '../../app/global/controllers/core.core.ctrl.js';\r\nimport dashboard from '../../app/features/dashboard/index.js';\r\nimport portfolio from '../../app/features/portfolio/index.js';\r\nimport sidenav from '../../app/features/sidenav/index.js';\r\n\r\nimport '@fortawesome/fontawesome-pro/js/fontawesome'\r\nimport '@fortawesome/fontawesome-pro/js/solid'\r\nimport '@fortawesome/fontawesome-pro/js/regular'\r\nimport '@fortawesome/fontawesome-pro/js/brands'\r\n\r\nimport \"../scss/main.scss\";\r\n\r\n\r\nangular.module('ppApp', ['ui.router', 'ngIdle', 'ngAnimate', 'ui.bootstrap', 'ngMaterial', 'ngTouch', 'angularMoment', 'LocalStorageModule', 'nvd3', 'ngCookies','angularCroppie', 'ngSanitize', uirouter, userService, ngCart, coreCtrl, dashboard, portfolio, sidenav]).config(config).run(startUpRun)\r\n\r\nstartUpRun.$inject = ['Idle', 'userService', '$rootScope', '$timeout'];\r\n\r\nfunction startUpRun(Idle, userService, $rootScope, $timeout) {\r\n\r\n    Idle.watch();\r\n\r\n};"],"sourceRoot":""}