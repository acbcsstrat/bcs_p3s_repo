(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{"./app/features/portfolio/controllers/portfolio.controller.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function($) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return PortfolioController; });\nPortfolioController.$inject = ['$scope', '$state', '$stateParams','$rootScope', '$timeout', '$uibModal', '$mdPanel', '$mdDialog', '$mdMenu', 'SearchPatentService',  'PatentsRestService'];\r\n\r\nfunction PortfolioController($scope, $state, $stateParams, $rootScope, $timeout, $uibModal, $mdPanel, $mdDialog, $mdMenu, SearchPatentService, PatentsRestService) {\r\n\r\n    var vm = this;\r\n\r\n    $scope.promise = PatentsRestService.fetchAllPatents();\r\n    $scope.filter = {};\r\n\r\n    function select(i) {\r\n        vm.selected = i;\r\n    }\r\n\r\n    select($stateParams.patentId)\r\n\r\n    function uniqueArray(array) {\r\n        return array.filter(function(item, pos, self) {\r\n            return self.indexOf(item) == pos;\r\n        })\r\n    }\r\n\r\n\r\n\r\n    function noSubFilter(obj) {\r\n        for (var key in obj) {\r\n            if (obj[key]) { //if one of the $scope.filter ($scope.filter) properties evaluates to true (is selected) return false \r\n                return false;\r\n            }\r\n        }\r\n        return true; //if no subfilters return true. This will result in all filtered data items being returned a true value\r\n    }\r\n\r\n    function checkArray(obj, service, prop) {\r\n        return service.some(function(item) { //if filter[curretStageColour][red]\r\n            return obj[prop][item[prop]] === true;\r\n        })\r\n    }\r\n\r\n    $scope.filterByPropertiesMatchingAND = function (data) { //all data sent from filter \r\n        var matchesAND = true; //set macthes to true (default)\r\n\r\n        for (var obj in $scope.filter) { //$scope.filter is populated by $scope.filter within the panel controller below. Scope filter properties are initiated from front-end. currentStageColour/serviceType\r\n\r\n            if( $scope.filter.hasOwnProperty(obj) ) {\r\n                if (noSubFilter($scope.filter[obj])) continue; //Check if there are any sub filter options with the value of true, if so, break from loop to return value of true\r\n                if (!checkArray($scope.filter, data.p3sServices, obj)) { //If the property from the data matches the property from $scope.filter ($scope.filter) return false. It will not turn up in the table\r\n                    matchesAND = false;\r\n                    break; //break from the loop and return matchesAND which would now return false\r\n                }\r\n                \r\n            }\r\n        }\r\n        return matchesAND;\r\n    }; \r\n\r\n    function updatePortfolioData() {\r\n        PatentsRestService.fetchAllPatents()\r\n        .then(function(response) {\r\n            $scope.portfolioData = response;            \r\n            vm.recentlyAdded.push(response.slice(-1).pop())\r\n        })        \r\n\r\n    }\r\n\r\n    $scope.promise //assigned promise to scope so child state can also resolve this promise to invoke functions\r\n    .then(function(response) {\r\n        if ($scope.$$destroyed) throw \"Scope destroyed\";\r\n        return response;\r\n    })\r\n    .then(\r\n        function(response){\r\n\r\n            if(!response.length) {\r\n                vm.noPatents = true;\r\n            }\r\n\r\n            response.forEach(function(data){\r\n                if(data.clientRef == '') {\r\n                    data.clientRef = '[No Client Reference Provided]'\r\n                }\r\n            })\r\n\r\n            vm.select = select;\r\n            vm.selected = 0;\r\n            vm.stateParams = $stateParams.patentId; \r\n            vm.rowSelect = rowSelect;\r\n            vm.chipOptions = [];\r\n            vm.showFilter = showFilter;\r\n            vm.showAddPatent = showAddPatent;\r\n            vm.portfolioLoaded = true;\r\n            vm.sortBy = sortBy;\r\n            $scope.selectedChip = selectedChip;\r\n            $scope.portfolioData = response;\r\n            $scope.portfolioLoaded = false;\r\n\r\n            vm.propertyName = 'ep_ApplicationNumber';\r\n            vm.reverse = false;\r\n\r\n            function rowSelect(event, patent){\r\n\r\n                vm.stateParams = $stateParams;\r\n                if($(event.target).hasClass('generateForm1200')) {\r\n                    $state.go('portfolio.modal.patent', {patentId: patent.patentID, form1200generate: 1, prepareGrant: 0}, {notify: false})\r\n                }\r\n\r\n                if($(event.target).hasClass('prepareGrant')) {\r\n                    $state.go('portfolio.modal.patent', {patentId: patent.patentID, prepareGrant: 1, form1200generate: 0}, {notify: false})\r\n                }        \r\n\r\n                if(!$(event.target).hasClass('cartbtn') && !$(event.target).hasClass('generateForm1200') && !$(event.target).hasClass('prepareGrant')) {\r\n                    var id = ($($(event.currentTarget).find('a'))); //find the anchor tag within row (patentApplicationNumber)\r\n                    var patentId = id[0].id; //gets data from data-id\r\n                    $state.go('portfolio.modal.patent', {patentId: patent.patentID, form1200generate: null})            \r\n                }\r\n\r\n            };\r\n\r\n            function sortBy(propertyName) {\r\n                vm.reverse = (vm.propertyName === propertyName) ? !vm.reverse : false;\r\n                vm.propertyName = propertyName;\r\n            };\r\n\r\n            function selectedChip(prop, value, cat) {\r\n                if(cat == 'Euro-PCT') {cat = 'epct'}\r\n                $scope.filter[cat][prop] = false;\r\n                // $scope.portfolioData = $scope.portfolioData;\r\n            }\r\n\r\n            function showFilter(mdMenu, $event) {\r\n         \r\n                mdMenu.open($event)\r\n                $scope.categories = ['serviceType', 'currentStageColour'];     \r\n\r\n                //return items to filter panel\r\n                $scope.getItems = function (obj, array) { //obj is cat currentStageColour or serviceType\r\n                    return (array || []).map(function (w) {\r\n                        return w.p3sServices[0][obj]; //select property in p3sservices \r\n                    }).filter(function (w, idx, arr) {\r\n                        if (typeof w === 'undefined') {\r\n                            return false;\r\n                        }\r\n                        return arr.indexOf(w) === idx;\r\n                    });\r\n                };\r\n\r\n                $scope.updateFiltered = function(prop, value, cat) {\r\n                    if(value === true) {\r\n                        if(cat === 'epct') {cat = 'Euro-PCT'};\r\n                        vm.chipOptions.push({cat: cat, value: value, prop: prop})\r\n                    } \r\n                    if(value === false) {\r\n                        var index = vm.chipOptions.indexOf(cat);\r\n                        vm.chipOptions.splice(index, 1);\r\n                    }\r\n                }\r\n\r\n                $scope.closeDialog = function() {\r\n                    $mdDialog.hide();                            \r\n                }\r\n\r\n            } //showFilter function end\r\n\r\n\r\n            function showAddPatent($event) {\r\n\r\n                var panelPosition = $mdPanel.newPanelPosition()\r\n                    .absolute()\r\n                    .center();\r\n\r\n                var config = {\r\n                    attachTo: angular.element(document.body),\r\n                    controller: ['mdPanelRef', '$scope', function(mdPanelRef, $scope) {\r\n\r\n                        $scope.recently = {\r\n                            added: []\r\n                        }\r\n                        $scope.foundPatent = false;\r\n\r\n                        $scope.findPatent = function(patentNo) {\r\n                            $scope.loadingPatent = true;\r\n                            SearchPatentService.findPatent(patentNo)\r\n                            .then(\r\n                                function(response) {\r\n                                    $scope.foundPatent = response.data;\r\n                                    $scope.loadingPatent = false;\r\n                                    $scope.error = false;\r\n                                    var patentJson = angular.toJson(response)\r\n                                },\r\n                                function(errResponse) {\r\n                                    console.error('Error finding patent. Error message : ', errResponse)\r\n                                    $scope.queriedPatent = false;\r\n                                    $scope.loadingPatent = false;\r\n                                    $scope.error = true;\r\n                                    // $state.go('search-patent', {}, {reload: false});\r\n                                    if(errResponse.status == 412) { //already added patent\r\n                                        $scope.searchError = 'It looks like we\\'ve already added Patent Application '+patentNo+' in to the system.  You should be able to find it in the List Patents page using the search boxes.';\r\n                                    } \r\n                                    if(errResponse.status == 409){ //incorrect check digit\r\n                                        $scope.searchError = 'It looks like the provided check digit differs from the check digit found at the European Patent Register. Please make sure the check digit is correct and try again.';\r\n                                    }\r\n                                    if(errResponse.status == 400 || errResponse.status == 404) { //incorrect syntax\r\n                                        $scope.searchError = 'We\\'ve not been able to find that patent in the European Patent Register. Please enter an application number such as EP18123456.2';\r\n                                    }\r\n\r\n\r\n                                }\r\n                            )\r\n\r\n                        }  \r\n\r\n                        $scope.openConfirmModal = function(patent) {\r\n\r\n                            var modalInstance = $uibModal.open({\r\n                                templateUrl: 'app/templates/modals/modal.confirm-found-patent.tpl.htm',\r\n                                appendTo: undefined,\r\n                                controllerAs: '$ctrl',\r\n                                controller: ['$uibModalInstance', '$location', '$anchorScroll', function($uibModalInstance, $location, $anchorScroll) {\r\n\r\n                                    this.addPatent = function () {\r\n                                        vm.addingPatent = true;\r\n                                        $uibModalInstance.close();\r\n                                        PatentsRestService.savePatent(patent)\r\n                                        .then(\r\n                                            function(response){\r\n                                                \r\n                                                updatePortfolioData();\r\n\r\n                                                var match = response.find(function(item){\r\n                                                    return item.ep_ApplicationNumber == patent.ep_ApplicationNumber;\r\n                                                });\r\n\r\n                                                $scope.recently.added.push(match);\r\n                                                $scope.foundPatent = false;\r\n                                                $scope.searchPatent = '';\r\n\r\n\r\n                                            },\r\n                                            function(errResponse){\r\n                                                console.error('Error while saving Patent');\r\n                                            }\r\n                                        )\r\n\r\n                                    };\r\n\r\n                                 \r\n\r\n                                    this.dismissModal = function () {\r\n                                        $uibModalInstance.close();\r\n                                    };\r\n\r\n                                    this.cancelAdd = function() {\r\n                                        $uibModalInstance.close();                  \r\n                                    }\r\n\r\n                                }]\r\n                            })\r\n                        }\r\n\r\n                        $scope.$on('$destroy', function(){\r\n                            $timeout.cancel(toPatentTimeout)\r\n                        })                        \r\n\r\n                    }],\r\n                    controllerAs: '$ctrl',\r\n                    position: panelPosition,\r\n                    // animation: panelAnimation,\r\n                    hasBackdrop: true,\r\n                    targetEvent: $event,\r\n                    templateUrl: 'app/templates/portfolio/add-patent.tpl.htm',\r\n                    clickOutsideToClose: true,\r\n                    escapeToClose: true,\r\n                    focusOnOpen: true\r\n                };\r\n                $mdPanel.open(config)\r\n                .then(\r\n                    function(result) {\r\n                        panelRef = result;\r\n                    },\r\n                    function(error){\r\n                        console.error('Error occured when opening panel: ',error)\r\n                    }\r\n                );\r\n\r\n            } //showAddPatentPanel end]\r\n\r\n        }\r\n    )\r\n\r\n    //SEARCH ADD PATENT\r\n\r\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(\"./node_modules/jquery/dist/jquery.js\")))\n\n//# sourceURL=webpack:///./app/features/portfolio/controllers/portfolio.controller.js?")},"./app/features/sidenav/avatarDefault.png":function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "b9625454d169d25b55ebcc10d4c944d5.png";\n\n//# sourceURL=webpack:///./app/features/sidenav/avatarDefault.png?')},"./app/features/sidenav/ppIcon.png":function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "043ff6a5b9bd165679317dfe537b296d.png";\n\n//# sourceURL=webpack:///./app/features/sidenav/ppIcon.png?')},"./node_modules/empty-module sync js$":function(module,exports,__webpack_require__){eval('var map = {\n\t"./index.js": "./node_modules/empty-module/index.js"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error("Cannot find module \'" + req + "\'");\n\t\te.code = \'MODULE_NOT_FOUND\';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = "./node_modules/empty-module sync js$";\n\n//# sourceURL=webpack:///./node_modules/empty-module_sync_nonrecursive_js$?')},"./node_modules/html-loader/index.js!./app/features/dashboard/html/dashboard.actions-available.tpl.htm":function(module,exports){eval('module.exports = "<div class=\\"container__scrollable-area\\">\\r\\n    <div class=\\"row\\">\\r\\n        <div class=\\"col-md-12\\">\\r\\n            <div class=\\"d-flex align-items-center justify-content-between py-3 px-4\\">\\r\\n                <div>\\r\\n                    <h4 class=\\"font-h4 font-weight-bold\\">Available European Actions</h4>\\r\\n                </div>\\r\\n                <div class=\\"d-flex align-items-center\\">                \\r\\n                    <md-chips data-ng-model=\\"$ctrl.chipOptions\\" readonly=\\"true\\" md-removable=\\"true\\" class=\\"text-capitalize font-weight-medium cursor-pointer\\" md-on-remove=\\"selectedChip($chip.prop, $chip.value, $chip.cat); getItems($chip.cat, availableActions)\\">\\r\\n                        <md-chip-template>\\r\\n                            <strong class=\\"font-body\\"><span data-ng-show=\\"{{$chip.prop}} == \'epct\'\\">Euro-PCT</span><span data-ng-hide=\\"{{$chip.prop}} == \'epct\'\\">{{$chip.prop}}</span></strong>\\r\\n                            <em class=\\"font-body\\" data-ng-if=\\"$chip.cat ===\'serviceType\'\\">(action)</em><em class=\\"font-body\\" data-ng-if=\\"$chip.cat ===\'currentStageColour\'\\">(phase)</em>                     \\r\\n                        </md-chip-template>\\r\\n                        \x3c!-- <md-icon><i class=\\"d-flex input-group-text pill-radius fa fa-search\\"></i></md-icon> --\x3e\\r\\n                    </md-chips>\\r\\n                    <div class=\\"m-r-lg\\">\\r\\n                        <div class=\\"input-group m-r-sm\\">\\r\\n                            <input type=\\"text\\" class=\\"form-control pill-radius\\" name=\\"availableActionsSearch\\" data-ng-model=\\"searchAvailableActions\\" placeholder=\\"Search available actions...\\" autocomplete=\\"off\\">  \\r\\n                            <div class=\\"input-group-append\\">\\r\\n                                <div class=\\"input-group-text\\">\\r\\n                                    <i class=\\"d-flex input-group-text pill-radius fa fa-search\\"></i>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>     \\r\\n                    <div>\\r\\n                        <md-menu md-position-mode=\\"target-right target\\">\\r\\n                            <md-button class=\\"icon-stretch icon-stretch--icon black pill-radius\\" data-ng-click=\\"$ctrl.showFilter($mdMenu, $event)\\">\\r\\n                                <span class=\\"icon-text\\">Filter</span>              \\r\\n                                <i class=\\"fal fa-filter fa-2x cursor-pointer icon\\"></i> \\r\\n                            </md-button>\\r\\n                            <md-menu-content class=\\"container-filter-list\\">\\r\\n                                <md-list class=\\"box\\" data-ng-repeat=\\"cat in categories\\" ng-init=\\"filter[cat]={}\\">\\r\\n                                    <md-subheader class=\\"md-no-sticky\\">\\r\\n                                        <h2 class=\\"font-h3\\" data-ng-if=\\"cat == \'saleType\'\\">Processing</h2>\\r\\n                                        <h2 class=\\"font-h3\\" data-ng-if=\\"cat == \'currentStageColour\'\\">Current Stage Colour</h2>\\r\\n                                        <h2 class=\\"font-h3\\" data-ng-if=\\"cat == \'nextStageColour\'\\">Next Stage Colour</h2>\\r\\n                                        <h2 class=\\"font-h3\\" data-ng-if=\\"cat == \'serviceType\'\\">European Action</h2>\\r\\n                                    </md-subheader>\\r\\n                                    <md-list-item data-ng-repeat=\\"value in getItems(cat, availableActions)\\">\\r\\n                                        <md-checkbox class=\\"md-secondary\\" data-ng-model=\\"filter[cat][value]\\" data-ng-change=\\"updateFiltered(value, filter[cat][value], cat);\\"> \\r\\n                                        </md-checkbox>\\r\\n                                        <p>({{(filtered | filter:value:true).length}})&nbsp;\\r\\n                                            <span class=\\"text-capitalize\\" data-ng-if=\\"value == \'GREY\'\\">Grey</span>\\r\\n                                            <span class=\\"text-capitalize\\" data-ng-if=\\"value == \'Offline\'\\">Offline (Manual/Urgent)</span>\\r\\n                                            <span class=\\"text-capitalize\\" data-ng-if=\\"value == \'epct\'\\">Euro-PCT</span>\\r\\n                                            <span class=\\"text-capitalize\\" data-ng-if=\\"value !== \'epct\' && value !== \'GREY\' && value !== \'Offline\'\\">{{value}}</span>\\r\\n                                        </p>\\r\\n                                    </md-list-item>\\r\\n                                    <md-divider></md-divider>\\r\\n                                </md-list>\\r\\n                                <div layout=\\"row\\" class=\\"demo-dialog-button\\">\\r\\n                                    <md-button md-autofocus flex class=\\"md-primary\\" data-ng-click=\\"closeDialog();\\">\\r\\n                                        Close\\r\\n                                    </md-button>\\r\\n                                </div>\\r\\n                            </md-menu-content>\\r\\n                        </md-menu>\\r\\n                    </div>\\r\\n                </div> \\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\"scrollable-area scrollable-area--set-height-md\\">\\r\\n        <table class=\\"t-data sticky-table\\">\\r\\n            <thead class=\\"sticky-thead\\">\\r\\n                <tr class=\\"t-data__row t-data__row--select\\">\\r\\n                    <th class=\\"t-data__th t-data__th--xs sticky-th\\" data-ng-click=\\"$ctrl.sortBy(\'ep_ApplicationNumber\');\\">\\r\\n                        <span>App No.</span>\\r\\n                        <span data-ng-show=\\"$ctrl.propertyName == \'ep_ApplicationNumber\' && !$ctrl.reverse\\">\\r\\n                            <i class=\\"fas fa-angle-down fa-lg\\"></i>\\r\\n                        </span>\\r\\n                        <span data-ng-show=\\"$ctrl.propertyName == \'ep_ApplicationNumber\' && $ctrl.reverse\\">\\r\\n                            <i class=\\"fas fa-angle-up fa-lg\\"></i>\\r\\n                        </span>\\r\\n                    </th>             \\r\\n                    <th class=\\"t-data__th t-data__th--sm\\">\\r\\n                        <span>European Action</span>\\r\\n                    </th>\\r\\n                    <th class=\\"t-data__th t-data__th--sm\\">\\r\\n                        <span>Current Phase</span>\\r\\n                    </th>\\r\\n                    <th class=\\"t-data__th t-data__th--sm\\">\\r\\n                        <span>Next Phase</span>    \\r\\n                    </th>                    \\r\\n                    <th class=\\"t-data__th t-data__th--xs\\">\\r\\n                        <span></span>\\r\\n                    </th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            \\r\\n            <tbody class=\\"sticky-tbody\\">\\r\\n                <tr data-ng-repeat=\\"patent in filtered=(availableActions | filter:filterByPropertiesMatchingAND | filter:searchAvailableActions) | orderBy:$ctrl.propertyName:$ctrl.reverse as Result\\" data-ng-click=\\"$ctrl.rowSelect($event, patent); $ctrl.select(patent.patentID)\\"  class=\\"t-data__row t-data__row--select\\" data-ng-class=\\"{active: patent.patentID == $ctrl.selected}\\">\\r\\n                    <td class=\\"t-data__td t-data__td--xs sticky-td\\">\\r\\n                        <a class=\\"t-data__a\\" data-ng-bind=\\"patent.ep_ApplicationNumber\\" data-ng-attr-id=\\"{{patent.patentID}}\\"></a>\\r\\n                    </td>\\r\\n                    <td class=\\"t-data__td t-data__td--sm\\">\\r\\n                         <table>\\r\\n                      \\r\\n                            <div class=\\"d-flex justify-content-left btn-underlined-selector\\">\\r\\n                                <span data-ng-bind=\\"patent.p3sServices[0].serviceType\\" data-ng-if=\\"patent.p3sServices[0].serviceType !== \'postgrant\' && patent.p3sServices[0].serviceType !== \'epct\'\\" class=\\"text-capitalize\\"></span>\\r\\n                                <span data-ng-if=\\"patent.p3sServices[0].serviceType == \'epct\'\\" class=\\"text-capitalize\\">Euro-PCT</span>\\r\\n                                <span data-ng-if=\\"patent.p3sServices[0].serviceType == \'postgrant\'\\" class=\\"text-capitalize\\">----</span>\\r\\n                            </div>\\r\\n                        \\r\\n                        </table>\\r\\n                    </td>\x3c!--when multiple services begin--\x3e                    \\r\\n                    <td class=\\"t-data__td t-data__td--sm\\">\\r\\n                        <table>\\r\\n                  \\r\\n                            <div data-ng-if=\\"(patent.p3sServices[0].saleType === \'Online\' || patent.p3sServices[0].saleType === \'Offline\') && patent.p3sServices[0].serviceType !== \'validation\'\\">\\r\\n                                <div class=\\"d-flex flex-column\\">\\r\\n                                    <div class=\\"d-flex justify-content-start align-patent.p3sServices[0]s-center\\">\x3c!--display costs--\x3e\\r\\n                                        <p class=\\"font-weight-bold m-r-sm\\"><i class=\\"fas fa-circle m-r-xs\\" data-ng-class=\\"patent.p3sServices[0].cssCurrent\\"></i>$ {{patent.p3sServices[0].currentStageCostUSD | number: 2}}</p>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div data-ng-if=\\"patent.p3sServices[0].serviceType == \'validation\' && (patent.p3sServices[0].serviceStatus == \'Validation available\' || patent.p3sServices[0].serviceStatus == \'Preparing quote\')\\">\\r\\n                                <div class=\\"d-flex flex-column\\">\\r\\n                                    <div class=\\"d-flex justify-content-start\\">\x3c!--display costs--\x3e\\r\\n                                        <p class=\\"font-weight-bold txt-phase-green\\" data-ng-if=\\"patent.p3sServices[0].serviceStatus == \'Validation available\'\\">Request Quote</p>\\r\\n                                        <p class=\\"font-weight-bold txt-phase-green\\" data-ng-if=\\"patent.p3sServices[0].serviceStatus == \'Preparing quote\'\\">Preparing Quote</p>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>                            \\r\\n                            <div data-ng-if=\\"patent.p3sServices[0].serviceType == \'validation\' && patent.p3sServices[0].serviceStatus == \'Quote provided\'\\">\\r\\n                                <div class=\\"d-flex flex-column\\">\\r\\n                                    <div class=\\"d-flex justify-content-start\\">\x3c!--display costs--\x3e\\r\\n                                        <p class=\\"font-weight-bold m-r-sm\\"><i class=\\"fas fa-circle m-r-xs\\" data-ng-class=\\"patent.p3sServices[0].cssCurrent\\"></i>$ {{patent.p3sServices[0].currentStageCostUSD | number: 2}}</p>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>                                \\r\\n                            <div data-ng-if=\\"(patent.p3sServices[0].saleType !== \'Online\' && patent.p3sServices[0].saleType !== \'Offline\' && patent.p3sServices[0].serviceStatus !== \'Epct being generated\') || (patent.p3sServices[0].saleType == \'Offline\' && patent.p3sServices[0].serviceType == \'validation\')\\">\\r\\n                                <p class=\\"txt-grey\\">N/A</p>\\r\\n                            </div>                           \\r\\n                           \\r\\n                        </table>                         \\r\\n                    </td>\x3c!--when multiple services begin--\x3e     \\r\\n                    <td class=\\"t-data__td t-data__td--sm\\">\\r\\n                        <table>\\r\\n                            \\r\\n                                <div data-ng-if=\\"(patent.p3sServices[0].saleType === \'Online\' || patent.p3sServices[0].saleType === \'Offline\') && patent.p3sServices[0].serviceType !== \'validation\'\\">\\r\\n                                    <div class=\\"d-flex flex-column\\">\\r\\n                                        <div class=\\"d-flex justify-content-start align-patent.p3sServices[0]s-center\\">\x3c!--display costs--\x3e\\r\\n\\r\\n                                            <p data-ng-if=\\"(!patent.p3sServices[0].isUrgentAttention && patent.p3sServices[0].currentStageColour !== \'Black\' && (patent.p3sServices[0].saleType === \'Online\' || patent.p3sServices[0].saleType === \'Offline\')) || (!patent.p3sServices[0].isUrgentAttention && patent.p3sServices[0].currentStageColour == \'Black\' && (patent.p3sServices[0].saleType === \'Online\' || patent.p3sServices[0].saleType === \'Offline\')) || \\r\\n                                            (patent.p3sServices[0].isUrgentAttention && patent.p3sServices[0].currentStageColour == \'Red\' && (patent.p3sServices[0].saleType === \'Online\' || patent.p3sServices[0].saleType === \'Offline\'))\\" class=\\"font-weight-bold\\"><i class=\\"fas fa-circle m-r-xs\\" data-ng-class=\\"patent.p3sServices[0].cssNext\\"></i> $ {{patent.p3sServices[0].nextStageCostUSD | number: 2}}</p> \\r\\n                                            <p data-ng-if=\\"patent.p3sServices[0].isUrgentAttention && patent.p3sServices[0].currentStageColour == \'Black\' && patent.p3sServices[0].serviceType === \'renewal\'\\" class=\\"font-weight-bold\\">LAPSE</p> \x3c!--if current colour is black and urgent attention required. Means that it is the second stage of black and is renewal--\x3e\\r\\n                                            <p data-ng-if=\\"patent.p3sServices[0].isUrgentAttention && patent.p3sServices[0].currentStageColour == \'Red\' && patent.p3sServices[0].serviceType !== \'renewal\'\\" class=\\"font-weight-bold\\">LAPSE</p> \x3c!--if current colour is black and urgent attention required. Means that it is the second stage of black--\x3e\\r\\n                                        </div>    \\r\\n                                    </div>\\r\\n                                </div>                            \\r\\n                                <div data-ng-if=\\"(patent.p3sServices[0].saleType !== \'Online\' && patent.p3sServices[0].saleType !== \'Offline\' && patent.p3sServices[0].serviceStatus !== \'Epct being generated\') || patent.p3sServices[0].serviceType == \'validation\'\\">\\r\\n                                    <p class=\\"txt-grey\\">N/A</p>\\r\\n                                </div>\\r\\n                           \\r\\n                        </table>                              \\r\\n                    </td>\x3c!--when multiple services begin--\x3e     \\r\\n                    <td class=\\"t-data__td t-data__td--xs\\">\\r\\n                        <button class=\\"btn-no-bg btn-underlined pill-radius font-body txt-phase-green font-weight-normal nowrap\\" data-ui-sref=\\"portfolio.modal.patent({patentId: patent.patentID})\\">View Patent</button>\\r\\n                    </td>\\r\\n                </tr>\\r\\n                <tr data-ng-show=\\"Result.length==0\\">\\r\\n                    <td class=\\"t-data__td text-left\\" colspan=\\"8\\">\\r\\n                        No Results Found\\r\\n                    </td>\\r\\n                </tr>                                   \\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\x3c!-- response table end--\x3e\\r\\n</div>";\n\n//# sourceURL=webpack:///./app/features/dashboard/html/dashboard.actions-available.tpl.htm?./node_modules/html-loader')},"./node_modules/html-loader/index.js!./app/features/dashboard/html/dashboard.europcts-graph.tpl.htm":function(module,exports){eval('module.exports = "<div class=\\"widget-panel widget-panel-sq\\">\\r\\n\\t<div class=\\"widget-panel__body bg-white d-flex flex-column\\">\\r\\n\\t\\t<div>\\t\\t\\r\\n\\t\\t\\t<p class=\\"font-h4 font-weight-bold\\">Euro-PCT formalities</p>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\"row d-flex flex-grow-1 just-content-center align-items-center\\">\\r\\n\\t\\t\\t<div class=\\"col-md-12 col-lg-12 col-xl-12\\">\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div data-ng-if=\\"$ctrl.donutData.total !== 0\\">\\r\\n\\t\\t\\t\\t\\t<nvd3 options=\\"$ctrl.donutOptions\\" data=\\"$ctrl.donutData.phases\\" class=\\"with-transitions\\"></nvd3>\\r\\n\\t\\t\\t\\t\\t<div class=\\"donut-inner\\">\\r\\n\\t\\t\\t\\t\\t\\t<h4 class=\\"font-h4 font-weight-bold\\">Total</h4>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\"font-h2 font-weight-bold\\">{{$ctrl.donutData.total}}</span>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div data-ng-if=\\"$ctrl.donutData.total === 0\\">\\r\\n\\t\\t\\t\\t\\t<p class=\\"font-body text-center\\">There are currently no Grant formalities</p>\\r\\n\\t\\t\\t\\t</div>\\t\\t\\r\\n\\t\\t\\t\\t\x3c!--check whether it works when its back online--\x3e\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>";\n\n//# sourceURL=webpack:///./app/features/dashboard/html/dashboard.europcts-graph.tpl.htm?./node_modules/html-loader')},"./node_modules/html-loader/index.js!./app/features/dashboard/html/dashboard.fxchart-widget.tpl.htm":function(module,exports){eval('module.exports = "<div class=\\"widget-panel\\">\\r\\n\\t<div class=\\"widget-panel__body bg-white\\">\\r\\n\\t\\t<div class=\\"row m-b-md\\">\\r\\n\\t\\t\\t<div class=\\"col-md-12\\">\\r\\n\\t\\t\\t\\t<h3 class=\\"font-h3\\"><span class=\\"font-weight-bold\\">FX Chart</span> - USD:EUR</h3>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<div data-ng-hide=\\"$ctrl.fxChartLoaded\\" class=\\" d-flex flex-column justify-content-center align-items-center h-100\\">\\r\\n\\t        <i class=\\"fas fa-cog fa-spin fa-2x m-b-xs\\"></i>\\r\\n\\t        <p>We are just fetching latest FX data</p>\\r\\n        </div>\\r\\n\\t\\t\\r\\n\\t\\t<div data-ng-show=\\"$ctrl.fxChartLoaded\\">\\r\\n\\t\\t\\t<nvd3 options=\\"$ctrl.lineOptions\\" data=\\"$ctrl.lineData\\" class=\\"with-transitions\\"></nvd3> \x3c!--xAxisTickFormat=\\"xAxisTickFormatFunction()\\"--\x3e\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>";\n\n//# sourceURL=webpack:///./app/features/dashboard/html/dashboard.fxchart-widget.tpl.htm?./node_modules/html-loader')},"./node_modules/html-loader/index.js!./app/features/dashboard/html/dashboard.grants-graph.tpl.htm":function(module,exports){eval('module.exports = "<div class=\\"widget-panel widget-panel-sq\\">\\r\\n\\t<div class=\\"widget-panel__body bg-white d-flex flex-column\\">\\r\\n\\t\\t<div>\\t\\t\\r\\n\\t\\t\\t<p class=\\"font-h4 font-weight-bold\\">Grant formalities</p>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\"row d-flex flex-grow-1 just-content-center align-items-center\\">\\r\\n\\t\\t\\t<div class=\\"col-md-12 col-lg-12 col-xl-12\\">\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div data-ng-if=\\"$ctrl.donutData.total !== 0\\">\\r\\n\\t\\t\\t\\t\\t<nvd3 options=\\"$ctrl.donutOptions\\" data=\\"$ctrl.donutData.phases\\" class=\\"with-transitions\\"></nvd3>\\r\\n\\t\\t\\t\\t\\t<div class=\\"donut-inner\\">\\r\\n\\t\\t\\t\\t\\t\\t<h4 class=\\"font-h4 font-weight-bold\\">Total</h4>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\"font-h2 font-weight-bold\\">{{$ctrl.donutData.total}}</span>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div data-ng-if=\\"$ctrl.donutData.total === 0\\">\\r\\n\\t\\t\\t\\t\\t<p class=\\"font-body text-center\\">There are currently no Grant formalities on the system</p>\\r\\n\\t\\t\\t\\t</div>\\t\\t\\r\\n\\t\\t\\t\\t\x3c!--check whether it works when its back online--\x3e\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>";\n\n//# sourceURL=webpack:///./app/features/dashboard/html/dashboard.grants-graph.tpl.htm?./node_modules/html-loader')},"./node_modules/html-loader/index.js!./app/features/dashboard/html/dashboard.renewals-graph.tpl.htm":function(module,exports){eval('module.exports = "<div class=\\"widget-panel widget-panel-sq\\">\\r\\n\\t<div class=\\"widget-panel__body bg-white d-flex flex-column\\">\\r\\n\\t\\t<div>\\t\\t\\r\\n\\t\\t\\t<p class=\\"font-h4 font-weight-bold\\">Renewal formalities</p>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\"row d-flex flex-grow-1 just-content-center align-items-center\\">\\r\\n\\t\\t\\t<div class=\\"col-md-12 col-lg-12 col-xl-12\\">\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div data-ng-if=\\"$ctrl.donutData.total !== 0\\">\\r\\n\\t\\t\\t\\t\\t<nvd3 options=\\"$ctrl.donutOptions\\" data=\\"$ctrl.donutData.phases\\" class=\\"with-transitions\\"></nvd3>\\r\\n\\t\\t\\t\\t\\t<div class=\\"donut-inner\\">\\r\\n\\t\\t\\t\\t\\t\\t<h4 class=\\"font-h4 font-weight-bold\\">Total</h4>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\"font-h2 font-weight-bold\\">{{$ctrl.donutData.total}}</span>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div data-ng-if=\\"$ctrl.donutData.total === 0\\">\\r\\n\\t\\t\\t\\t\\t<p class=\\"font-body text-center\\">There are currently no Renewal formalities on the system</p>\\r\\n\\t\\t\\t\\t</div>\\t\\t\\r\\n\\t\\t\\t\\t\x3c!--check whether it works when its back online--\x3e\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>";\n\n//# sourceURL=webpack:///./app/features/dashboard/html/dashboard.renewals-graph.tpl.htm?./node_modules/html-loader')},"./node_modules/html-loader/index.js!./app/features/dashboard/html/dashboard.tpl.htm":function(module,exports){eval('module.exports = "<div class=\\"m-b-xl d-flex flex-column flex-grow-1 animate-show\\">\\r\\n\\t<div data-ng-hide=\\"dashboardLoaded\\" class=\\"animate-show h-100\\">\\r\\n\\t\\t<div class=\\" d-flex flex-column justify-content-center align-items-center h-100\\">\\r\\n\\t        <i class=\\"fas fa-cog fa-spin fa-2x m-b-xs\\"></i>\\r\\n\\t        <p>We are just preparing your dashboard</p>\\r\\n        </div>\\r\\n\\t</div>\\r\\n\\t<div data-ng-show=\\"dashboardLoaded\\" class=\\"animate-show\\">\\r\\n\\t\\t<div class=\\"row\\">\\r\\n\\t\\t\\t<div class=\\"col-sm-12\\">\\r\\n\\t\\t\\t\\t<h1 class=\\"font-h1 lh-default\\">Dashboard</h1>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\t\\t\\r\\n\\t\\t<div class=\\"row m-b-xl lg-m-b-md dashboard-row-top\\">\\t\\r\\n\\t\\t\\t<div class=\\"col-md-4 col-lg-3 col-xl-3\\">\\r\\n\\t\\t\\t\\t<div ui-view=\\"europctsgraph\\" class=\\"h-100\\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\"col-md-4 col-lg-3 col-xl-3\\">\\r\\n\\t\\t\\t\\t<div ui-view=\\"renewalsgraph\\" class=\\"h-100\\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\"col-md-4 col-lg-3 col-xl-3\\">\\r\\n\\t\\t\\t\\t<div ui-view=\\"grantsgraph\\" class=\\"h-100\\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\"col-md-4 col-lg-3 col-xl-3\\">\\r\\n\\t\\t\\t\\t<div ui-view=\\"validationsgraph\\" class=\\"h-100\\"></div>\\r\\n\\t\\t\\t</div>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\"row m-b-xl lg-m-b-md\\">\\r\\n\\t\\t\\t<div class=\\"col-md-12 col-lg-12 col-xl-6 md-m-b-md lg-m-b-md\\">\\r\\n\\t\\t\\t\\t<div ui-view=\\"actionsavailable\\" class=\\"h-100\\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\"col-md-12 col-lg-12 col-xl-6 lg-m-b-md d-md-none d-lg-block\\" >\\r\\n\\t\\t\\t\\t<div ui-view=\\"fxchartwidget\\" class=\\"h-100\\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>";\n\n//# sourceURL=webpack:///./app/features/dashboard/html/dashboard.tpl.htm?./node_modules/html-loader')},"./node_modules/html-loader/index.js!./app/features/dashboard/html/dashboard.validations-graph.tpl.htm":function(module,exports){eval('module.exports = "<div class=\\"widget-panel widget-panel-sq\\">\\r\\n\\t<div class=\\"widget-panel__body bg-white d-flex flex-column\\">\\r\\n\\t\\t<div>\\t\\t\\r\\n\\t\\t\\t<p class=\\"font-h4 font-weight-bold\\">Validation formalities</p>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\"row d-flex flex-grow-1 just-content-center align-items-center\\">\\r\\n\\t\\t\\t<div class=\\"col-md-12 col-lg-12 col-xl-12\\">\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div data-ng-if=\\"$ctrl.donutData.total !== 0\\">\\r\\n\\t\\t\\t\\t\\t<nvd3 options=\\"$ctrl.donutOptions\\" data=\\"$ctrl.donutData.phases\\" class=\\"with-transitions\\"></nvd3>\\r\\n\\t\\t\\t\\t\\t<div class=\\"donut-inner\\">\\r\\n\\t\\t\\t\\t\\t\\t<h4 class=\\"font-h4 font-weight-bold\\">Total</h4>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\"font-h2 font-weight-bold\\">{{$ctrl.donutData.total}}</span>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div data-ng-if=\\"$ctrl.donutData.total === 0\\">\\r\\n\\t\\t\\t\\t\\t<p class=\\"font-body text-center\\">There are currently no Validation formalities on the system</p>\\r\\n\\t\\t\\t\\t</div>\\t\\t\\r\\n\\t\\t\\t\\t\x3c!--check whether it works when its back online--\x3e\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>";\n\n//# sourceURL=webpack:///./app/features/dashboard/html/dashboard.validations-graph.tpl.htm?./node_modules/html-loader')},"./node_modules/html-loader/index.js!./app/features/portfolio/html/portfolio.tpl.htm":function(module,exports){eval('module.exports = "<div data-ng-show=\\"data.length === 0\\" class=\\"col-md-12\\">\\r\\n    <div class=\\"bg-white p-a-sm\\">\\r\\n        <p class=\\"font-weight-medium\\">We are sorry but no results were returned from you search criteria. Please try again.</p>\\r\\n    </div>\\r\\n</div>\\r\\n<div data-ng-hide=\\"$ctrl.portfolioLoaded\\" class=\\"animate-hide d-flex flex-column justify-content-center align-items-center flex-grow-1\\">\\r\\n    <i class=\\"fas fa-cog fa-spin fa-2x m-b-xs\\"></i>\\r\\n    <p>We are just fetching your patents</p>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div data-ng-show=\\"$ctrl.portfolioLoaded\\" class=\\"animate-show container__scrollable-area\\">\\r\\n    <div class=\\"p-l-3 p-r-3 p-tb-sm br-tx-1\\">                            \\r\\n        <div class=\\"d-flex justify-content-between align-items-center\\">\\r\\n            <div class=\\"d-flex\\">\\r\\n                <h1 class=\\"font-h1 lh-default m-r-lg\\">Portfolio</h1>\\r\\n            </div>\\r\\n            <div class=\\"d-flex align-items-center\\">\\r\\n                <md-chips data-ng-model=\\"$ctrl.chipOptions\\" readonly=\\"true\\" md-removable=\\"true\\" class=\\"text-capitalize font-weight-medium cursor-pointer\\" md-on-remove=\\"selectedChip($chip.prop, $chip.value, $chip.cat); getItems($chip.cat, portfolioData)\\">\\r\\n                    <md-chip-template>\\r\\n                        <strong class=\\"font-body\\">\\r\\n                            <span data-ng-show=\\"$chip.prop == \'Epct\'\\">Euro-PCT</span>\\r\\n                            <span data-ng-hide=\\"$chip.prop == \'Epct\'\\">{{$chip.prop}}</span>\\r\\n                        </strong>\\r\\n                        <em class=\\"font-body\\" data-ng-if=\\"$chip.cat ===\'serviceType\'\\">(action)</em><em class=\\"font-body\\" data-ng-if=\\"$chip.cat ===\'currentStageColour\'\\">(phase)</em>                     \\r\\n                    </md-chip-template>\\r\\n                    \x3c!-- <md-icon><i class=\\"d-flex input-group-text pill-radius fa fa-search\\"></i></md-icon> --\x3e\\r\\n                </md-chips>\\r\\n                <div class=\\"m-r-lg\\">\\r\\n                    <div class=\\"input-group m-r-sm\\">\\r\\n                        <input type=\\"text\\" class=\\"form-control pill-radius\\" name=\\"portfolioSearch\\" data-ng-model=\\"searchPortfolio\\" placeholder=\\"Search Portfolio...\\" autocomplete=\\"off\\">  \\r\\n                        <div class=\\"input-group-append\\">\\r\\n                            <i class=\\"d-flex input-group-text pill-radius fa fa-search\\"></i>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <md-menu md-position-mode=\\"target-right target\\">\\r\\n                        <md-button class=\\"icon-stretch icon-stretch--icon black pill-radius\\" data-ng-click=\\"$ctrl.showFilter($mdMenu, $event)\\">\\r\\n                            <span class=\\"icon-text\\">Filter</span>              \\r\\n                            <i class=\\"fal fa-filter fa-2x cursor-pointer icon\\"></i> \\r\\n                        </md-button>\\r\\n                        <md-menu-content class=\\"container-filter-list\\">\\r\\n                            <md-list class=\\"box\\" data-ng-repeat=\\"cat in categories\\" ng-init=\\"filter[cat]={}\\">\\r\\n                                <md-subheader class=\\"md-no-sticky\\">\\r\\n                                    <h2 class=\\"font-h3\\">{{cat == \'currentStageColour\' ? \'Current Stage Colour\' : \'European Action\'}}</h2>\\r\\n                                </md-subheader>\\r\\n                                <md-list-item data-ng-repeat=\\"value in getItems(cat, portfolioData)\\">\\r\\n                                    <md-checkbox class=\\"md-secondary\\" data-ng-model=\\"filter[cat][value]\\" data-ng-change=\\"updateFiltered(value, filter[cat][value], cat);\\"> \x3c!--used to update filtered patents totals, not filter portfolio--\x3e\\r\\n                                    </md-checkbox>\\r\\n                                    <p>({{(filtered | filter:value:true).length}})&nbsp;\\r\\n                                        <span class=\\"text-capitalize\\" data-ng-if=\\"value == \'GREY\'\\">Grey</span>\\r\\n                                        <span class=\\"text-capitalize\\" data-ng-if=\\"value == \'epct\'\\">Euro-PCT</span>\\r\\n                                        <span class=\\"text-capitalize\\" data-ng-if=\\"value !== \'epct\' && value !== \'GREY\'\\">{{value}}</span>\\r\\n                                    </p>\\r\\n                                </md-list-item>\\r\\n                                <md-divider></md-divider>\\r\\n                            </md-list>\\r\\n                            <div layout=\\"row\\" class=\\"demo-dialog-button\\">\\r\\n                                <md-button md-autofocus flex class=\\"md-primary\\" data-ng-click=\\"closeDialog();\\">\\r\\n                                    Close\\r\\n                                </md-button>\\r\\n                            </div>\\r\\n                        </md-menu-content>\\r\\n                    </md-menu>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <md-button class=\\"icon-stretch icon-stretch--icon green pill-radius\\" data-ng-click=\\"$ctrl.showAddPatent($event)\\">\\r\\n                        <span class=\\"icon-text\\">Add Patent</span>\\r\\n\\r\\n                            <i class=\\"fal fa-plus fa-2x txt-white cursor-pointer icon\\"></i>\\r\\n                        </span>\\r\\n                    </md-button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\"scrollable-area scrollable-area--full-height\\">\\r\\n        <table class=\\"t-data sticky-table\\">\\r\\n            <thead class=\\"sticky-thead\\">\\r\\n                <tr class=\\"t-data__row t-data__row--select\\">\\r\\n                    <th class=\\"t-data__th t-data__th--sm sticky-th\\" data-ng-click=\\"$ctrl.sortBy(\'ep_ApplicationNumber\');\\">\\r\\n                        <span>App No.</span>\\r\\n                        <span data-ng-show=\\"$ctrl.propertyName == \'ep_ApplicationNumber\' && !$ctrl.reverse\\">\\r\\n                            <i class=\\"fas fa-angle-down fa-lg\\"></i>\\r\\n                        </span>\\r\\n                        <span data-ng-show=\\"$ctrl.propertyName == \'ep_ApplicationNumber\' && $ctrl.reverse\\">\\r\\n                            <i class=\\"fas fa-angle-up fa-lg\\"></i>\\r\\n                        </span>\\r\\n                    </th>\\r\\n                    <th class=\\"t-data__th t-data__th--md\\" data-ng-click=\\"$ctrl.sortBy(\'clientRef\');\\">\\r\\n                        <span>Client Ref</span>\\r\\n                        <span data-ng-show=\\"$ctrl.propertyName == \'clientRef\' && !$ctrl.reverse\\">\\r\\n                            <i class=\\"fas fa-angle-down fa-lg\\"></i>\\r\\n                        </span>\\r\\n                        <span data-ng-show=\\"$ctrl.propertyName == \'clientRef\' && $ctrl.reverse\\">\\r\\n                            <i class=\\"fas fa-angle-up fa-lg\\"></i>\\r\\n                        </span>                          \\r\\n                    </th>\\r\\n                    <th class=\\"t-data__th t-data__th--md\\" data-ng-click=\\"$ctrl.sortBy(\'shortTitle\');\\">\\r\\n                        <span>Client Description</span>\\r\\n                        <span data-ng-show=\\"$ctrl.propertyName == \'shortTitle\' && !$ctrl.reverse\\">\\r\\n                            <i class=\\"fas fa-angle-down fa-lg\\"></i>\\r\\n                        </span>\\r\\n                        <span data-ng-show=\\"$ctrl.propertyName == \'shortTitle\' && $ctrl.reverse\\">\\r\\n                            <i class=\\"fas fa-angle-up fa-lg\\"></i>\\r\\n                        </span>                          \\r\\n                    </th>                    \\r\\n                    <th class=\\"t-data__th t-data__th--sm\\">\\r\\n                        <span>European Action</span>\\r\\n                    </th>\\r\\n                    <th class=\\"t-data__th t-data__th--md\\">\\r\\n                        <span>Patent Place Status</span>                        \\r\\n                    </th>\\r\\n                    <th class=\\"t-data__th t-data__th--sm\\">\\r\\n                        <span>Current Phase</span>\\r\\n                    </th>\\r\\n                    <th class=\\"t-data__th t-data__th--sm\\">\\r\\n                        <span>Next Phase</span>    \\r\\n                    </th>                    \\r\\n                    <th class=\\"t-data__th t-data__th--md\\">\\r\\n                        <span></span>\\r\\n                    </th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            \\r\\n            <tbody class=\\"sticky-tbody\\">\\r\\n                <tr data-ng-repeat=\\"patent in filtered=(portfolioData | filter:filterByPropertiesMatchingAND | filter:searchPortfolio) | orderBy:$ctrl.propertyName:$ctrl.reverse as Result\\" data-ng-click=\\"$ctrl.rowSelect($event, patent); $ctrl.select(patent.patentID)\\"  class=\\"t-data__row t-data__row--select\\" data-ng-class=\\"{active: patent.patentID == $ctrl.selected}\\">\\r\\n                    <td class=\\"t-data__td t-data__td--sm sticky-td\\">\\r\\n                        <a class=\\"t-data__a\\" data-ng-bind=\\"patent.ep_ApplicationNumber\\" data-ng-attr-id=\\"{{patent.patentID}}\\"></a>\\r\\n                    </td>\\r\\n                    <td class=\\"t-data__td t-data__td--md\\">\\r\\n                        <span class=\\"txt-grey\\" data-ng-if=\\"patent.clientRef == \'\'\\">[No client reference provided]</span>\\r\\n                        <span data-ng-if=\\"patent.clientRef !== \'\'\\">{{patent.clientRef}}</span>\\r\\n                    </td>\\r\\n                    <td class=\\"t-data__td t-data__td--md\\">\\r\\n                        <span class=\\"txt-grey\\" data-ng-if=\\"patent.shortTitle == \'\'\\">[No client description provided]</span>\\r\\n                        <span data-ng-if=\\"patent.shortTitle !== \'\'\\">{{patent.shortTitle}}</span>\\r\\n                    </td>\\r\\n                    <td class=\\"t-data__th--sm\\">\\r\\n                        <table data-ng-if=\\"patent.p3sServices.length == 1\\">\\r\\n                            <tr>\\r\\n                                <td data-ng-repeat=\\"item in patent.p3sServices track by $index\\"  class=\\"t-data__td\\">\\r\\n                                    <div class=\\"d-flex justify-content-left btn-underlined-selector\\">\\r\\n                                        <span data-ng-bind=\\"item.serviceType\\" data-ng-if=\\"item.serviceType !== \'postgrant\' && item.serviceType !== \'epct\'\\" class=\\"text-capitalize\\"></span>\\r\\n                                        <span data-ng-if=\\"item.serviceType == \'epct\'\\" class=\\"text-capitalize\\">Euro-PCT</span>\\r\\n                                        <span data-ng-if=\\"item.serviceType == \'postgrant\'\\" class=\\"text-capitalize\\">----</span>\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </table>\\r\\n                        <table data-ng-if=\\"patent.p3sServices.length > 1\\">\\r\\n                            <tr data-ng-repeat=\\"item in patent.p3sServices track by $index\\">\\r\\n                                <td class=\\"t-data__td\\">\\r\\n                                    <div class=\\"d-flex justify-content-left btn-underlined-selector\\">\\r\\n                                        <span data-ng-bind=\\"item.serviceType\\" class=\\"text-capitalize\\"></span>\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </table>                                \\r\\n                    </td>\x3c!--when multiple services begin--\x3e                    \\r\\n                    <td class=\\"t-data__td--md p-t-none p-b-none\\" >\\r\\n                        <table data-ng-if=\\"patent.p3sServices.length == 1\\">\\r\\n                            <tr>\\r\\n                                <td data-ng-repeat=\\"item in patent.p3sServices track by $index\\" class=\\"t-data__td\\">\\r\\n                                    <div data-ng-if=\\"!item.isUrgentAttention\\"> \x3c!-- cover manual processing--\x3e\\r\\n                                        <span data-ng-bind=\\"item.serviceStatusUI\\" class=\\"font-weight-medium\\"></span>\\r\\n                                    </div>\\r\\n                                    <div data-ng-if=\\"item.isUrgentAttention && item.serviceType !== \'validation\'\\"> \x3c!-- cover manual processing--\x3e\\r\\n                                        <p class=\\"txt-phase-red\\">URGENT ACTION REQUIRED</p>\\r\\n                                    </div>     \\r\\n                                    <div data-ng-if=\\"item.isUrgentAttention && item.serviceType == \'validation\'\\"> \x3c!-- cover manual processing--\x3e\\r\\n                                        <p>Manual Processing Only</p>\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </table>                       \\r\\n                        <table data-ng-if=\\"patent.p3sServices.length > 1\\">\\r\\n                            <tr data-ng-repeat=\\"item in patent.p3sServices track by $index\\">\\r\\n                                <td class=\\"t-data__td\\">\\r\\n                                    <div data-ng-if=\\"!item.isUrgentAttention\\"> \x3c!-- cover manual processing--\x3e\\r\\n                                        <span data-ng-bind=\\"item.serviceStatusUI\\" class=\\"font-weight-medium\\"></span>\\r\\n                                    </div>\\r\\n                                    <div data-ng-if=\\"item.isUrgentAttention\\"> \x3c!-- cover manual processing--\x3e\\r\\n                                        <p class=\\"txt-phase-red\\">URGENT ACTION REQUIRED</p>\\r\\n                                    </div>                                            \\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </table>                         \\r\\n                    </td>\x3c!--patent place status--\x3e\\r\\n                    <td class=\\" t-data__td--sm\\">\\r\\n                        <table data-ng-if=\\"patent.p3sServices.length == 1\\">\\r\\n                            <td data-ng-repeat=\\"item in patent.p3sServices track by $index\\" class=\\"t-data__td\\">\\r\\n                                <div data-ng-if=\\"(item.saleType === \'Online\' || item.saleType === \'Offline\') && item.serviceType !== \'validation\'\\">\\r\\n                                    <div class=\\"d-flex flex-column\\">\\r\\n                                        <div class=\\"d-flex justify-content-start align-items-center\\">\x3c!--display costs--\x3e\\r\\n                                            <p class=\\"font-weight-bold m-r-sm\\"><i class=\\"fas fa-circle m-r-xs\\" data-ng-class=\\"item.cssCurrent\\"></i>$ {{item.currentStageCostUSD | number: 2}}</p>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div data-ng-if=\\"item.serviceType == \'validation\'\\">\\r\\n                                    <div class=\\"d-flex flex-column\\">\\r\\n                                        <div class=\\"d-flex justify-content-start\\">\x3c!--display costs--\x3e\\r\\n                                            <p class=\\"font-weight-bold m-r-sm\\" data-ng-if=\\"item.serviceStatus == \'Quote provided\'\\"><i class=\\"fas fa-circle m-r-xs\\" data-ng-class=\\"item.cssCurrent\\"></i>$ {{item.currentStageCostUSD | number: 2}}</p>\\r\\n                                            <p class=\\"font-weight-bold txt-phase-green\\" data-ng-if=\\"item.serviceStatus == \'Validation available\'\\">Request Quote</p>\\r\\n                                            <p class=\\"font-weight-bold txt-phase-green\\" data-ng-if=\\"item.serviceStatus == \'Preparing quote\'\\">Preparing Quote</p>\\r\\n                                            <p class=\\"txt-grey\\" data-ng-if=\\"item.serviceStatus !== \'Quote provided\' && item.serviceStatus !== \'Validation available\' && item.serviceStatus !== \'Preparing quote\'\\">N/A</p>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n\x3c!--                                 <div data-ng-if=\\"item.serviceType == \'validation\' && item.serviceStatus !== \'Quote provided\'\\">\\r\\n                                    <p class=\\"txt-grey\\">N/A</p>\\r\\n                                </div> --\x3e\\r\\n                                <div data-ng-if=\\"item.saleType !== \'Online\' && item.saleType !== \'Offline\' && item.serviceStatus !== \'Epct being generated\' && item.serviceStatus !== \'Preparing quote\' && item.serviceStatus !== \'Scanned PoAs received\'  && item.serviceStatus !== \'Blank PoAs downloaded\' && item.serviceStatus !== \'Paper documents received\' &&  item.saleType !== \'In Progress\' \\">\\r\\n                                    <p class=\\"txt-grey\\">N/A</p>\\r\\n                                </div>\\r\\n                                <div data-ng-if=\\"item.saleType == \'In Progress\' &&   item.serviceType !== \'validation\'\\">\\r\\n                                    <p class=\\"txt-grey\\">N/A</p>\\r\\n                                </div>            \\r\\n                            </td>\\r\\n                        </table>\\r\\n                        <table data-ng-if=\\"patent.p3sServices.length > 1\\">\\r\\n                            <tr data-ng-repeat=\\"item in patent.p3sServices track by $index\\">\\r\\n                                <td class=\\"t-data__td\\">\\r\\n                                    <div data-ng-if=\\"item.saleType === \'Online\' || item.saleType === \'Offline\'\\">\\r\\n                                        <div class=\\"d-flex flex-column\\">\\r\\n                                            <div class=\\"d-flex justify-content-start align-items-center\\">\x3c!--display costs--\x3e\\r\\n                                                <p class=\\"font-weight-bold m-r-sm\\"><i class=\\"fas fa-circle m-r-xs\\" data-ng-class=\\"item.cssCurrent\\"></i>$ {{item.currentStageCostUSD | number: 2}}</p>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div data-ng-if=\\"item.saleType !== \'Online\' && item.saleType !== \'Offline\' && item.serviceStatus !== \'Epct being generated\' && item.serviceStatus !== \'Preparing quote\'\\">\\r\\n                                        <p class=\\"txt-grey\\">N/A</p>\\r\\n                                    </div>                                \\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </table>                                \\r\\n                    </td>\x3c!--when multiple services begin--\x3e     \\r\\n                    <td class=\\"t-data__th--sm\\">\\r\\n                        <table data-ng-if=\\"patent.p3sServices.length == 1\\">\\r\\n                            <td data-ng-repeat=\\"item in patent.p3sServices track by $index\\" class=\\"t-data__td\\">\\r\\n                                <div data-ng-if=\\"(item.saleType === \'Online\' || item.saleType === \'Offline\') && item.serviceType !== \'validation\'\\">\\r\\n                                    <div class=\\"d-flex flex-column\\">\\r\\n                                        <div class=\\"d-flex justify-content-start align-items-center\\">\x3c!--display costs--\x3e\\r\\n\\r\\n                                            <p data-ng-if=\\"(!item.isUrgentAttention && item.currentStageColour !== \'Black\' && (item.saleType === \'Online\' || item.saleType === \'Offline\')) || (!item.isUrgentAttention && item.currentStageColour == \'Black\' && (item.saleType === \'Online\' || item.saleType === \'Offline\'))\\" class=\\"font-weight-bold\\"><i class=\\"fas fa-circle m-r-xs\\" data-ng-class=\\"item.cssNext\\"></i> $ {{item.nextStageCostUSD | number: 2}}</p> \\r\\n                                            <p data-ng-if=\\"item.isUrgentAttention && item.currentStageColour == \'Black\' && item.serviceType === \'renewal\'\\" class=\\"font-weight-bold\\">LAPSE</p> \x3c!--if current colour is black and urgent attention required. Means that it is the second stage of black and is renewal--\x3e\\r\\n                                            <p data-ng-if=\\"item.isUrgentAttention && item.currentStageColour == \'Red\' && item.serviceType !== \'renewal\'\\" class=\\"font-weight-bold\\">LAPSE</p> \x3c!--if current colour is black and urgent attention required. Means that it is the second stage of black--\x3e\\r\\n                                        </div>    \\r\\n                                    </div>\\r\\n                                </div>                            \\r\\n                                <div data-ng-if=\\"(item.saleType !== \'Online\' && item.saleType !== \'Offline\' && item.serviceStatus !== \'Epct being generated\') || item.serviceType == \'validation\'\\">\\r\\n                                    <p class=\\"txt-grey\\">N/A</p>\\r\\n                                </div>\\r\\n                            </td>\\r\\n                        </table>\\r\\n                        <table data-ng-if=\\"patent.p3sServices.length > 1\\">\\r\\n                            <tr data-ng-repeat=\\"item in patent.p3sServices track by $index\\">\\r\\n                                <td class=\\"t-data__td\\">\\r\\n                                    <div data-ng-if=\\"(item.saleType === \'Online\' || item.saleType === \'Offline\') && item.serviceType !== \'validation\'\\">\\r\\n                                        <div class=\\"d-flex flex-column\\">\\r\\n                                            <div class=\\"d-flex justify-content-start align-items-center\\">\x3c!--display costs--\x3e\\r\\n\\r\\n                                                <p data-ng-if=\\"(!item.isUrgentAttention && item.currentStageColour !== \'Black\' && (item.saleType === \'Online\' || item.saleType === \'Offline\')) || (!item.isUrgentAttention && item.currentStageColour == \'Black\' && (item.saleType === \'Online\' || item.saleType === \'Offline\'))\\" class=\\"font-weight-bold\\"><i class=\\"fas fa-circle m-r-xs\\" data-ng-class=\\"item.cssNext\\"></i> $ {{item.nextStageCostUSD | number: 2}}</p> \\r\\n                                                <p data-ng-if=\\"item.isUrgentAttention && item.currentStageColour == \'Black\' && item.serviceType === \'renewal\'\\" class=\\"font-weight-bold\\">LAPSE</p> \x3c!--if current colour is black and urgent attention required. Means that it is the second stage of black and is renewal--\x3e\\r\\n                                                <p data-ng-if=\\"item.isUrgentAttention && item.currentStageColour == \'Red\' && item.serviceType !== \'renewal\'\\" class=\\"font-weight-bold\\">LAPSE</p> \x3c!--if current colour is black and urgent attention required. Means that it is the second stage of black--\x3e\\r\\n                                            </div>    \\r\\n                                        </div>\\r\\n                                    </div>                            \\r\\n                                    <div data-ng-if=\\"(item.saleType !== \'Online\' && item.saleType !== \'Offline\' && item.serviceStatus !== \'Epct being generated\') || item.serviceType == \'validation\'\\">\\r\\n                                        <p class=\\"txt-grey\\">N/A</p>\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </table>                                \\r\\n                    </td>\x3c!--when multiple services begin--\x3e     \\r\\n                    <td class=\\"t-data__td t-data__td--md\\">\\r\\n                        <table data-ng-if=\\"patent.p3sServices.length == 1\\">\\r\\n                            <tr>\\r\\n                                <td>\\r\\n                                    <div class=\\"d-flex justify-content-center btn-underlined-selector\\" data-ng-repeat=\\"item in patent.p3sServices track by $index\\">\\r\\n                                        <div data-ng-if=\\"item.serviceType == \'epct\'\\">\\r\\n                                            <a data-ng-if=\\"item.saleType == \'Online\' && (item.serviceStatus === \'Epct available\' || item.serviceStatus === \'Epct rejected\')\\" class=\\"btn btn--bordered btn-underlined generateForm1200\\">Generate Form 1200</a>\\r\\n\\r\\n                                            <ngcart-addtocart id=\\"{{item.actionID}}\\" class=\\"tablebtn\\" name=\\"epct\\" price=\\"{{item.currentStageCostUSD}}\\" quantity=\\"1\\" quantity-max=\\"10\\" data=\\"patent\\" data-ng-if=\\"item.saleType == \'Online\' && item.serviceStatus == \'Epct saved\'\\"> \x3c!--secret to different button labels checkngcartdirective.js--\x3e\\r\\n                                            </ngcart-addtocart>\\r\\n                                        </div>\\r\\n                                        <div data-ng-if=\\"item.serviceType == \'renewal\'\\">\\r\\n                                            <ngcart-addtocart id=\\"{{item.actionID}}\\" class=\\"tablebtn\\" name=\\"renewal\\" price=\\"{{item.currentStageCostUSD}}\\" quantity=\\"1\\" quantity-max=\\"10\\" data=\\"patent\\" data-ng-if=\\"item.saleType == \'Online\' && item.serviceStatus == \'Show price\'\\"> \x3c!--secret to different button labels checkngcartdirective.js--\x3e\\r\\n                                            </ngcart-addtocart>\\r\\n                                            \\r\\n                                        </div>\\r\\n                                        <div data-ng-if=\\"item.serviceType == \'grant\'\\">\\r\\n                                            <a data-ng-if=\\"item.saleType == \'Online\' && item.serviceStatus === \'Grant available\'\\" class=\\"btn btn--bordered btn-underlined prepareGrant\\" data-ng-click=\\"$ctrl.prepareGrant(patent.patentID)\\">Prepare Grant\\r\\n                                            </a>\\r\\n                                            <ngcart-addtocart id=\\"{{item.actionID}}\\" class=\\"tablebtn\\" name=\\"grant\\" price=\\"{{item.currentStageCostUSD}}\\" quantity=\\"1\\" quantity-max=\\"10\\" data=\\"patent\\" data-ng-if=\\"item.saleType == \'Online\' && item.serviceStatus == \'Grant saved\'\\"> \x3c!--secret to different button labels checkngcartdirective.js--\x3e\\r\\n                                            </ngcart-addtocart>\\r\\n                                        </div>          \\r\\n                                        <div data-ng-if=\\"item.serviceType == \'validation\'\\">\\r\\n                                            <ngcart-addtocart id=\\"{{item.actionID}}\\" class=\\"tablebtn\\" name=\\"validation\\" price=\\"{{item.currentStageCostUSD}}\\" quantity=\\"1\\" quantity-max=\\"10\\" data=\\"patent\\" data-ng-if=\\"item.saleType == \'Online\' && item.serviceStatus == \'Quote provided\'\\"> \x3c!--secret to different button labels checkngcartdirective.js--\x3e\\r\\n                                            </ngcart-addtocart>\\r\\n                                        </div>                                                  \\r\\n                                        <p class=\\"font-weight-medium\\" data-ng-class=\\"item.isUrgentAttention && item.serviceType !== \'validation\' ? \'txt-phase-red\' : \'\'\\" data-ng-if=\\"item.saleType == \'Offline\'\\">Call +44 203 696 0949</p>\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </table>\\r\\n                        <table data-ng-if=\\"patent.p3sServices.length > 1\\">\\r\\n                            <tr data-ng-repeat=\\"item in patent.p3sServices track by $index\\">\\r\\n                                <td class=\\"t-data__td\\">\\r\\n                                    <div class=\\"d-flex justify-content-center btn-underlined-selector\\">\\r\\n\\r\\n                                        <div data-ng-if=\\"item.serviceType == \'renewal\'\\">\\r\\n                                            <ngcart-addtocart id=\\"{{item.actionID}}\\" class=\\"tablebtn\\" name=\\"renewal\\" price=\\"{{item.currentStageCostUSD}}\\" quantity=\\"1\\" quantity-max=\\"10\\" data=\\"patent\\" data-ng-if=\\"item.saleType == \'Online\' && item.serviceStatus == \'Show price\'\\"> \x3c!--secret to different button labels checkngcartdirective.js--\x3e\\r\\n                                            </ngcart-addtocart>\\r\\n                                        </div>\\r\\n                                        <div data-ng-if=\\"item.serviceType == \'grant\'\\">\\r\\n                                            <a data-ng-if=\\"item.saleType == \'Online\' && item.serviceStatus === \'Grant available\'\\" class=\\"btn btn--bordered btn-underlined prepareGrant\\" data-ng-click=\\"$ctrl.prepareGrant(patent.patentID)\\">Prepare Grant\\r\\n                                            </a>\\r\\n                                            <ngcart-addtocart id=\\"{{item.actionID}}\\" class=\\"tablebtn\\" name=\\"grant\\" price=\\"{{item.currentStageCostUSD}}\\" quantity=\\"1\\" quantity-max=\\"10\\" data=\\"patent\\" data-ng-if=\\"item.saleType == \'Online\' && item.serviceStatus == \'Grant saved\'\\"> \x3c!--secret to different button labels checkngcartdirective.js--\x3e\\r\\n                                            </ngcart-addtocart>\\r\\n                                        </div>                                                \\r\\n                                        <p class=\\"font-weight-medium\\" data-ng-class=\\"item.isUrgentAttention ? \'txt-phase-red\' : \'\'\\" data-ng-if=\\"item.saleType == \'Offline\'\\">Call +44 203 696 0949</p>\\r\\n                                        <p class=\\"invisible\\" data-ng-if=\\"item.saleType !== \'Online\' && item.serviceStatus !== \'Show price\' && item.serviceStatus !== \'Grant available\'\\">Fill space</p>\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </table>\\r\\n                    </td>\\r\\n                </tr>\\r\\n                <tr data-ng-show=\\"Result.length==0\\">\\r\\n                    <td class=\\"t-data__td text-left\\" colspan=\\"8\\">\\r\\n                        No Results Found\\r\\n                    </td>\\r\\n                </tr>                                   \\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\x3c!-- response table end--\x3e\\r\\n</div>\\r\\n\\r\\n<div data-ui-view=\\"modal\\" autoscroll=\\"false\\"></div>";\n\n//# sourceURL=webpack:///./app/features/portfolio/html/portfolio.tpl.htm?./node_modules/html-loader')},"./node_modules/html-loader/index.js!./app/features/sidenav/html/sidenav-li-item.tpl.htm":function(module,exports){eval('module.exports = "<md-button class=\\"d-flex align-items-center\\" data-ui-sref-active=\\"active\\" data-ui-sref=\\"{{section.state}}\\" ng-click=\\"focusSection()\\">\\r\\n\\t<i class=\\"{{section.icon}}\\"></i><span class=\\"m-l-xs font-h4\\">{{section.name}}</span>\\r\\n\\t<span class=\\"md-visually-hidden\\" data-ng-if=\\"isSelected()\\">current page</span>\\r\\n</md-button>\\r\\n\\r\\n";\n\n//# sourceURL=webpack:///./app/features/sidenav/html/sidenav-li-item.tpl.htm?./node_modules/html-loader')},"./node_modules/html-loader/index.js!./app/features/sidenav/html/sidenav-nav-li.tpl.htm":function(module,exports){eval('module.exports = "<md-button class=\\"md-button-toggle font-weight-medium justify-content-center align-items-center\\" data-ng-click=\\"toggle()\\" aria-controls=\\"side-menu-{{section.name}}\\" flex layout=\\"row\\" aria-expanded=\\"{{isOpen()}}\\">\\r\\n    <i class=\\"{{section.icon}}\\"></i><span class=\\"txt-white m-l-xs font-h4\\">{{section.name}}</span>\\r\\n\\t<md-icon md-font-set=\\"fas fa-chevron-down\\" class=\\"md-toggle-icon txt-white font-h4 d-flex align-items-center\\" data-ng-class=\\"{\'toggled\' : isOpen()}\\"></md-icon>\\r\\n</md-button>\\r\\n<ul data-ng-show=\\"isOpen()\\" id=\\"side-menu-{{section.name}}\\" class=\\"nav menu-toggle-list w-100\\">\\r\\n    <li data-ng-repeat=\\"page in section.pages\\" class=\\"font-weight-medium\\">\\r\\n        <menu-link section=\\"page\\"></menu-link>\\r\\n    </li>\\r\\n</ul>";\n\n//# sourceURL=webpack:///./app/features/sidenav/html/sidenav-nav-li.tpl.htm?./node_modules/html-loader')},"./node_modules/html-loader/index.js!./app/features/sidenav/html/sidenav.tpl.htm":function(module,exports,__webpack_require__){eval('module.exports = "<div class=\\"fade long-fade show\\"> \x3c!--top nav--\x3e\\r\\n    <div layout=\\"row\\" class=\\"closed-sidenav border-grey-xs--btm\\">\\r\\n    \\t<div class=\\"closed-sidenav--inner d-flex justify-content-between\\">\\r\\n\\t\\t\\t<span class=\\"d-flex cursor-pointer m-r-lg align-items-center\\" data-ng-click=\\"$ctrl.toggleLeft()\\">\\r\\n\\t\\t    \\t<i class=\\"fas fa-bars fa-2x txt-black\\"></i>\\r\\n\\t\\t\\t    <p class=\\"txt-black m-l-sm font-h4\\">Menu</p>\\r\\n\\t\\t\\t</span>\\r\\n\\t    \\t<div class=\\"d-flex\\">\\r\\n\\t\\t\\t\\t<div class=\\"d-flex justify-content-between align-items-center m-r-lg\\">\\r\\n\\t\\t\\t\\t\\t<span class=\\"m-r-xs font-h4 txt-black\\"><span class=\\"font-weight-bold\\">EST:</span> {{$ctrl.est}}</span> \\r\\n\\t\\t\\t\\t\\t<span class=\\"font-h4 txt-black\\"><span class=\\"font-weight-bold\\">UTC:</span> {{$ctrl.utc}}</span>\\r\\n\\t\\t\\t\\t</div>\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\"d-flex justify-content-between align-items-center\\">\\r\\n\\t\\t\\t\\t\\t<span class=\\"m-r-md font-h4 txt-black\\"><span class=\\"font-weight-bold m-r-xs\\">USD - EUR</span>{{$ctrl.fxRate}}</span> \\r\\n\\t\\t\\t\\t</div>\\r\\n\\t    \\t</div>\\r\\n\\t\\t\\t<div class=\\"d-flex justify-content-end align-items-center\\">\\r\\n\\t\\t\\t\\t<div class=\\"d-flex justify-content-between align-items-center m-r-md\\">\\t\\t\\t\\r\\n\x3c!-- \\t\\t\\t\\t\\t<i class=\\"far fa-info-circle fa-2x cursor-pointer\\" data-ng-click=\\"$ctrl.openGuide()\\"></i> --\x3e\\r\\n\\t\\t\\t\\t\\t<md-tooltip md-delay=\\"500\\" md-direction=\\"bottom\\">App Guide</md-tooltip>\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<a data-ui-sref=\\"basket\\" class=\\"m-r-md\\">\\r\\n\\t\\t\\t\\t\\t<ngcart-summary class=\\"font-body txt-black\\"></ngcart-summary>\\r\\n\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t<p class=\\"txt-black\\">\\r\\n\\t\\t\\t\\t\\t\\t<a data-ui-sref=\\"profile\\" class=\\"font-weight-medium font-h4\\">{{$root.user.firstName}}</a> | \\r\\n\\t\\t\\t\\t\\t\\t<a class=\\"font-h4 txt-black inline-link\\" data-ng-click=\\"$ctrl.empty()\\" data-ng-href=\\"http://localhost:8080/p3sweb/resources/j_spring_security_logout\\">Logout</a>\\r\\n\\t\\t\\t\\t\\t</p>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n  \\t</div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div>\x3c!--side-nav--\x3e\\r\\n \\t<section flex>\\r\\n\\t    <md-sidenav class=\\"md-sidenav-left bg-phase-grey\\" md-component-id=\\"left\\" md-disable-backdrop md-whiteframe=\\"3\\">\\r\\n      \\t\\t<div class=\\"row\\">\\r\\n\\t\\t      \\t<div class=\\"col-md-12\\">\\r\\n\\t\\t      \\t\\t<div class=\\"bg-phase-grey p-v-sm-h-lg flex-grow-1 d-flex justify-content-between align-items-center\\">\\r\\n\\t\\t\\t      \\t\\t<img src=\\"" + __webpack_require__("./app/features/sidenav/ppIcon.png") + "\\" alt=\\"patent place icon small\\">\\r\\n\\t\\t\\t      \\t\\t<span class=\\"cursor-pointer\\" data-ng-click=\\"$ctrl.toggleLeft()\\"><i class=\\"fas fa-times fa-2x txt-white\\"></i></span>\\r\\n\\t\\t\\t      \\t</div>\\t\\r\\n\\t      \\t\\t</div>\\r\\n\\t      \\t</div>\\t    \\t\\t\\t\\r\\n      \\t \\t<md-content class=\\"bg-phase-grey\\">\\r\\n\\t      \\t \\t<div layout=\\"column\\" class=\\"p-pill-tabs m-b-sm p-a-sm\\">\\r\\n\\t      \\t \\t\\t\\r\\n\\t\\t      \\t \\t<div class=\\"d-flex justify-content-center align-items-center m-b-sm\\">\\t\\t      \\t \\t\\r\\n\\t\\t      \\t \\t\\t<a class=\\"nav-link\\" data-ui-sref=\\"profile\\">\\t\\t\\t\\r\\n\\t\\t      \\t \\t\\t\\t<img data-ng-src=\\"{{$ctrl.avatarimage}}\\" data-ng-if=\\"$ctrl.avatarimage\\" alt=\\"users profile pic\\" class=\\"profile-pic-radius\\" width=\\"104\\">\\r\\n\\t\\t      \\t \\t\\t\\t<img src=\\"" + __webpack_require__("./app/features/sidenav/avatarDefault.png") + "\\" data-ng-if=\\"!$ctrl.avatarimage\\" alt=\\"users profile pic\\" class=\\"profile-pic-radius\\" width=\\"104\\">\\r\\n\\t      \\t \\t\\t\\t</a>\\r\\n\\t\\t      \\t \\t</div>\\r\\n\\t      \\t \\t\\t<div class=\\"d-flex justify-content-center align-items-center\\">\\r\\n\\t      \\t \\t\\t\\t<a class=\\"nav-link nav-link--white d-flex justify-content-center align-items-center font-h4 font-weight-bold\\" data-ui-sref=\\"profile\\">\\r\\n\\t\\t\\t      \\t \\t\\t{{$ctrl.user.firstName}} {{$ctrl.user.lastName}}\\r\\n\\t\\t      \\t \\t\\t</a>\\r\\n\\t      \\t \\t\\t</div>\\r\\n\\t      \\t \\t\\t<div class=\\"d-flex justify-content-center align-items-center\\">\\r\\n\\t\\t      \\t \\t\\t<span class=\\"font-body text-center\\">{{$ctrl.user.business.businessName}}</span>\\r\\n\\t\\t      \\t \\t</div>\\r\\n\\t      \\t \\t</div>\\r\\n\\t      \\t \\t<div layout=\\"column\\" class=\\" d-flex justify-content-center\\">\\r\\n\\t      \\t \\t\\t<nav class=\\"nav\\">\\r\\n\\t\\t\\t\\t\\t\\t<ul class=\\"side-menu w-100\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<li data-ng-repeat=\\"section in $ctrl.menu.sections\\" class=\\"font-body font-weight-medium\\" data-ui-sref-active=\\"active\\" data-ng-class=\\"{\'parentActive\' : $ctrl.isSectionSelected(section)}\\">\\r\\n\\t                        \\t<menu-link section=\\"section\\" data-ng-if=\\"section.type === \'link\'\\"></menu-link>\\r\\n\\t        \\t\\t\\t\\t\\t<menu-toggle section=\\"section\\" data-ng-if=\\"section.type === \'toggle\'\\" context=\\"$ctrl\\"></menu-toggle>\\r\\n\\t\\t\\t\\t\\t        </li>\\r\\n\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t</nav>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</md-content>\\r\\n\\t    </md-sidenav>\\r\\n  \\t</section>\\r\\n  \\r\\n    <div layout=\\"column\\" class=\\"closed-sidenav-side bg-phase-grey\\">\\r\\n\\t  \\t<div class=\\"text-center w-100 p-tb-20\\">\\r\\n\\t  \\t\\t<a data-ui-sref=\\"dashboard\\">\\r\\n\\t  \\t\\t\\t<img width=\\"35\\" src=\\"" + __webpack_require__("./app/features/sidenav/ppIcon.png") + "\\">\\r\\n\\t  \\t\\t</a>\\r\\n\\t    </div>\\r\\n\\t\\t<ul class=\\"nav flex-column\\">\\r\\n\\t\\t\\t<li class=\\"nav-item\\" data-ui-sref-active=\\"active\\">\\r\\n\\t\\t\\t\\t<a class=\\"nav-link p-tb-md d-flex justify-content-center align-items-center\\" data-ui-sref=\\"dashboard\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\"far fa-tachometer-alt fa-2x d-none d-xl-block\\"></i>\\r\\n\\t\\t\\t\\t\\t<i class=\\"far fa-tachometer-alt fa-2x d-xl-none\\"></i>\\r\\n\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t<md-tooltip md-delay=\\"500\\" md-direction=\\"right\\">Dashboard</md-tooltip>\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t\\t<li class=\\"nav-item\\" data-ui-sref-active=\\"active\\">\\r\\n\\t\\t\\t\\t<a class=\\"nav-link p-tb-md d-flex justify-content-center align-items-center\\" data-ui-sref=\\"portfolio\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\"far fa-folders fa-2x d-none d-xl-block\\"></i>\\r\\n\\t\\t\\t\\t\\t<i class=\\"far fa-folders fa-2x d-xl-none d-lg-inline-block\\"></i>\\r\\n\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t<md-tooltip md-delay=\\"500\\" md-direction=\\"right\\">Portfolio</md-tooltip>\\r\\n\\t\\t\\t</li>\\t\\t\\t\\r\\n\\t\\t\\t<li class=\\"nav-item\\" data-ui-sref-active=\\"active\\">\\r\\n\\t\\t\\t\\t<a class=\\"nav-link p-tb-md d-flex justify-content-center align-items-center\\" data-ui-sref=\\"transactions\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\"far fa-money-check-alt fa-2x d-none d-xl-block\\"></i>\\r\\n\\t\\t\\t\\t\\t<i class=\\"far fa-money-check-alt fa-2x d-xl-none d-lg-inline-block\\"></i>\\r\\n\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t<md-tooltip md-delay=\\"500\\" md-direction=\\"right\\">Transactions</md-tooltip>\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t</ul>\\r\\n\\t\\t<div class=\\"text-center position-bottom w-100 m-b-sm\\">\\r\\n\x3c!-- \\t\\t\\t<button data-ng-click=\\"$ctrl.openGuide()\\" class=\\"m-b-sm btn btn-no-bg\\">\\r\\n\\t\\t\\t\\t<i class=\\"far fa-info-circle fa-2x txt-white\\"></i>\\r\\n\\t\\t\\t\\t<md-tooltip md-delay=\\"500\\" md-direction=\\"right\\">App Guide</md-tooltip>\\r\\n\\t\\t\\t</button> --\x3e\\r\\n\\t\\t</div>\\r\\n  \\t</div>\\r\\n</div>\\r\\n";\n\n//# sourceURL=webpack:///./app/features/sidenav/html/sidenav.tpl.htm?./node_modules/html-loader')},"./node_modules/html-loader/index.js!./app/features/transactions/html/transactions.tpl.htm":function(module,exports){eval('module.exports = "<div data-ng-show=\\"transactions.length === 0\\" class=\\"col-md-12\\">\\r\\n    <div class=\\"bg-white p-a-sm\\">\\r\\n        <p class=\\"font-weight-medium font-h4 font-weight-medium\\">There are currently no transactions.</p>\\r\\n    </div>\\r\\n</div>\\r\\n<div data-ng-hide=\\"transactionsLoaded\\" class=\\"animate-hide d-flex flex-column justify-content-center align-items-center flex-grow-1\\">\\r\\n    <i class=\\"fas fa-cog fa-spin fa-2x m-b-xs\\"></i>\\r\\n    <p>We are just fetching your transactions</p>\\r\\n</div>\\r\\n<div data-ng-show=\\"transactionsLoaded\\" class=\\"animate-show\\">\\r\\n    <div  class=\\"animate-show container__scrollable-area\\">\\r\\n        <div class=\\"p-l-3 p-r-3 p-tb-sm br-tx-1\\">                            \\r\\n            <div class=\\"d-flex justify-content-between align-items-center\\">\\r\\n                <div class=\\"d-flex\\">\\r\\n                    <h1 class=\\"font-h1 lh-default m-r-lg\\">Transactions</h1>\\r\\n                </div>\\r\\n                <div class=\\"d-flex align-items-center\\">\\r\\n                    <md-chips data-ng-model=\\"$ctrl.chipOptions\\" readonly=\\"true\\" md-removable=\\"true\\" class=\\"text-capitalize font-weight-medium cursor-pointer\\" md-on-remove=\\"selectedChip($chip.prop, $chip.value, $chip.cat); getItems($chip.cat, transactions)\\">\\r\\n                        <md-chip-template>      \\r\\n                            {{$chip.prop}}   \\r\\n                        </md-chip-template>\\r\\n                        \x3c!-- <md-icon><i class=\\"d-flex input-group-text pill-radius fa fa-search\\"></i></md-icon> --\x3e\\r\\n                    </md-chips>\\r\\n                    <div class=\\"m-r-lg\\">\\r\\n                        <div class=\\"input-group m-r-sm\\">\\r\\n                            <input type=\\"text\\" class=\\"form-control pill-radius\\" name=\\"transactionSearch\\" data-ng-model=\\"searchTransactions\\" placeholder=\\"Search transactions...\\" autocomplete=\\"off\\">  \\r\\n                            <div class=\\"input-group-append\\">\\r\\n                                <i class=\\"d-flex input-group-text pill-radius fa fa-search\\"></i>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div>\\r\\n                        <md-menu md-position-mode=\\"target-right target\\">\\r\\n                            <md-button class=\\"icon-stretch icon-stretch--icon black pill-radius\\" data-ng-click=\\"$ctrl.showFilter($mdMenu, $event)\\">\\r\\n                                <span class=\\"icon-text\\">Filter</span>              \\r\\n                                <i class=\\"fal fa-filter fa-2x cursor-pointer icon\\"></i> \\r\\n                            </md-button>\\r\\n                            <md-menu-content class=\\"container-filter-list\\">\\r\\n                                <md-list class=\\"box\\" data-ng-repeat=\\"cat in categories\\" ng-init=\\"filter[cat]={}\\">\\r\\n                                    <md-subheader class=\\"md-no-sticky\\">\\r\\n                                        <h2 class=\\"font-h3\\">{{cat == \'latestTransStatus\' ? \'Transaction Status\' : \'Transaction Type\'}}</h2>\\r\\n                                    </md-subheader>\\r\\n                                    <md-list-item data-ng-repeat=\\"value in getItems(cat, transactions)\\">\\r\\n                                        <md-checkbox class=\\"md-secondary\\" data-ng-model=\\"filter[cat][value]\\" data-ng-change=\\"$ctrl.updateFiltered(value, filter[cat][value], cat);\\"> \x3c!--used to update filtered patents totals, not filter portfolio--\x3e\\r\\n                                        </md-checkbox>\\r\\n                                        <p>({{(filtered | filter:value:true).length}})&nbsp;\\r\\n                                            <span class=\\"text-capitalize\\">{{value}}</span>\\r\\n                                        </p>\\r\\n                                    </md-list-item>\\r\\n                                    <md-divider></md-divider>\\r\\n                                </md-list>\\r\\n                                <div layout=\\"row\\" class=\\"demo-dialog-button\\">\\r\\n                                    <md-button md-autofocus flex class=\\"md-primary\\" data-ng-click=\\"closeDialog();\\">\\r\\n                                        Close\\r\\n                                    </md-button>\\r\\n                                </div>\\r\\n                            </md-menu-content>\\r\\n                        </md-menu>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\"scrollable-area scrollable-area--full-height\\">\\r\\n            <table class=\\"t-data sticky-table\\">\\r\\n                <thead class=\\"sticky-thead\\">\\r\\n    \\t\\t\\t\\t<tr class=\\"t-data__row t-data__row--select t-data__head\\">\\r\\n    \\t\\t\\t\\t\\t<th class=\\"t-data__th t-data__th--sm sticky-th\\" data-ng-click=\\"$ctrl.sortBy(\'p3S_TransRef\');\\">\\r\\n    \\t\\t\\t\\t\\t\\t<span>Transaction ID</span>\\r\\n                            <span data-ng-show=\\"$ctrl.propertyName == \'p3S_TransRef\' && !$ctrl.reverse\\">\\r\\n                                <i class=\\"fas fa-angle-down fa-lg\\"></i>\\r\\n                            </span>\\r\\n                            <span data-ng-show=\\"$ctrl.propertyName == \'p3S_TransRef\' && $ctrl.reverse\\">\\r\\n                                <i class=\\"fas fa-angle-up fa-lg\\"></i>\\r\\n                            </span>    \\t\\t\\t\\t\\t\\r\\n    \\t\\t\\t\\t\\t</th>\\r\\n    \\t\\t\\t\\t\\t<th class=\\"t-data__th\\" data-ng-click=\\"$ctrl.sortBy(\'transType\');\\">\\r\\n    \\t\\t\\t\\t\\t\\t<span>Transaction Type</span>\\r\\n                            <span data-ng-show=\\"$ctrl.propertyName == \'transType\' && !$ctrl.reverse\\">\\r\\n                                <i class=\\"fas fa-angle-down fa-lg\\"></i>\\r\\n                            </span>\\r\\n                            <span data-ng-show=\\"$ctrl.propertyName == \'transType\' && $ctrl.reverse\\">\\r\\n                                <i class=\\"fas fa-angle-up fa-lg\\"></i>\\r\\n                            </span>    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n    \\t\\t\\t\\t\\t</th>\\t\\t\\t\\t\\t\\r\\n    \\t\\t\\t\\t\\t<th class=\\"t-data__th\\" data-ng-click=\\"$ctrl.sortBy(\'transStartDate\');\\">\\r\\n    \\t\\t\\t\\t\\t\\t<span>Transaction Initiated</span>\\r\\n                            <span data-ng-show=\\"$ctrl.propertyName == \'transStartDate\' && !$ctrl.reverse\\">\\r\\n                                <i class=\\"fas fa-angle-down fa-lg\\"></i>\\r\\n                            </span>\\r\\n                            <span data-ng-show=\\"$ctrl.propertyName == \'transStartDate\' && $ctrl.reverse\\">\\r\\n                                <i class=\\"fas fa-angle-up fa-lg\\"></i>\\r\\n                            </span>    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n    \\t\\t\\t\\t\\t</th>\\r\\n    \\t\\t\\t\\t\\t<th class=\\"t-data__th\\" data-ng-click=\\"$ctrl.sortBy(\'transAmount_USD\');\\">\\r\\n    \\t\\t\\t\\t\\t\\t<span>Cost</span>\\r\\n                            <span data-ng-show=\\"$ctrl.propertyName == \'transAmount_USD\' && !$ctrl.reverse\\">\\r\\n                                <i class=\\"fas fa-angle-down fa-lg\\"></i>\\r\\n                            </span>\\r\\n                            <span data-ng-show=\\"$ctrl.propertyName == \'transAmount_USD\' && $ctrl.reverse\\">\\r\\n                                <i class=\\"fas fa-angle-up fa-lg\\"></i>\\r\\n                            </span> \\r\\n    \\t\\t\\t\\t\\t</th>\\r\\n    \\t\\t\\t\\t\\t<th class=\\"t-data__th\\" data-ng-click=\\"$ctrl.sortBy(\'latestTransStatus\');\\">\\r\\n    \\t\\t\\t\\t\\t\\t<span>Status</span>\\r\\n                            <span data-ng-show=\\"$ctrl.propertyName == \'latestTransStatus\' && !$ctrl.reverse\\">\\r\\n                                <i class=\\"fas fa-angle-down fa-lg\\"></i>\\r\\n                            </span>\\r\\n                            <span data-ng-show=\\"$ctrl.propertyName == \'latestTransStatus\' && $ctrl.reverse\\">\\r\\n                                <i class=\\"fas fa-angle-up fa-lg\\"></i>\\r\\n                            </span> \\t\\t\\t\\t\\t\\t\\t\\t\\r\\n    \\t\\t\\t\\t\\t</th>\\r\\n    \\t\\t\\t\\t\\t<th class=\\"t-data__th\\">\\r\\n    \\t\\t\\t\\t\\t\\t<span>Application No.(s)</span>\\r\\n    \\t\\t\\t\\t\\t</th>\\r\\n    \\t\\t\\t\\t</tr>\\r\\n    \\t\\t\\t</thead>\\r\\n    \\t\\t\\t<tbody class=\\"sticky-tbody\\">\\r\\n    \\t\\t\\t    <tr data-ng-repeat=\\"transaction in filtered=(transactions | filter:filterByPropertiesMatchingAND | filter:searchTransactions) | orderBy:$ctrl.propertyName:$ctrl.reverse as Result\\" data-ng-click=\\"$ctrl.rowSelect($event, transaction); $ctrl.select(transaction.id)\\"  class=\\"t-data__row t-data__row--select\\" data-ng-class=\\"{active: transaction.id == $ctrl.selected}\\">\\r\\n    \\t\\t\\t        <td class=\\"t-data__td sticky-td\\">\\r\\n    \\t\\t\\t\\t\\t\\t<a class=\\"t-data__a\\" data-ng-attr-id=\\"{{transaction.id}}\\">{{transaction.p3S_TransRef}}</a>\\r\\n    \\t\\t\\t        </td>\\r\\n    \\t\\t\\t        <td class=\\"t-data__td\\">\\r\\n    \\t\\t\\t        \\t{{transaction.transTypeUI}}\\r\\n    \\t\\t\\t        </td>\\r\\n    \\t\\t\\t        <td class=\\"t-data__td\\">\\r\\n    \\t\\t        \\t\\t{{transaction.transStartDate | date: \'MM/dd/yy\'}}\\r\\n    \\t\\t\\t        </td>\\r\\n    \\t\\t\\t        <td class=\\"t-data__td\\">\\r\\n    \\t\\t\\t        \\t$ {{transaction.transAmount_USD | number: 2}}\\r\\n    \\t\\t\\t        </td>\\r\\n    \\t\\t\\t        <td class=\\"t-data__td\\">\\r\\n    \\t\\t\\t\\t\\t\\t<p class=\\"font-weight-bold m-b-xs\\">\\r\\n                               <span data-ng-if=\\"!transaction.hasFailed\\">{{transaction.latestTransStatus}}</span>\\r\\n                               <span data-ng-if=\\"transaction.hasFailed\\">Failed</span>\\r\\n                            </p>\\r\\n    \\t\\t\\t\\t\\t\\t<div class=\\"progress-tracker progress-trans\\" data-ng-class=\\"transaction.hasFailed ? \'progress-red\' : \'progress-green\'\\" >\\r\\n    \\t\\t\\t\\t\\t\\t\\t<uib-progress><uib-bar class=\\"pill-radius tracker-item\\" value=\\"transaction.actionProgress\\" max=\\"100\\"></uib-bar></uib-progress>\\r\\n    \\t\\t\\t\\t\\t\\t</div>\\t\\r\\n    \\t\\t\\t        </td>\\t\\t        \\r\\n    \\t\\t\\t        <td class=\\"t-data__td\\">\\r\\n    \\t\\t\\t\\t\\t\\t<span data-ng-if=\\"transaction.serviceUIs.length === 1\\" data-ng-repeat=\\"item in transaction.serviceUIs\\">\\r\\n    \\t\\t\\t\\t\\t\\t\\t\\t<span class=\\"txt-grey\\">\\r\\n    \\t\\t\\t\\t\\t\\t\\t\\t\\t{{item.appAndType }}\\r\\n    \\t\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n    \\t\\t\\t\\t\\t\\t\\t</span>\\r\\n    \\t\\t\\t\\t\\t\\t</span>\\t\\t\\t\\t\\t\\t\\r\\n    \\t\\t\\t\\t\\t\\t<select \\r\\n    \\t\\t\\t\\t\\t\\t\\tdata-ng-if=\\"transaction.serviceUIs.length > 1\\"\\r\\n    \\t\\t\\t\\t\\t        data-ng-options=\\"ui.appAndType for ui in transaction.serviceUIs\\"\\r\\n    \\t\\t\\t\\t\\t        data-ng-model=\\"transaction.selectedUi\\"\\r\\n    \\t\\t\\t\\t\\t\\t\\tdata-ng-change=\\"$ctrl.transactionListFilter(item,$index)\\"\\r\\n    \\t\\t\\t\\t\\t\\t\\tid=\\"{{outerIndex}}\\"\\r\\n    \\t\\t\\t\\t\\t\\t\\tclass=\\"pill-radius form-control font-body\\"\\r\\n    \\t\\t\\t\\t\\t\\t\\ttransaction-select=\\"selectedItem\\">\\r\\n    \\t\\t\\t\\t\\t\\t\\t<option value=\\"\\">Multiple</option>\\r\\n    \\t\\t\\t\\t\\t\\t</select>\\r\\n    \\t\\t\\t        </td>\\r\\n    \\t\\t\\t    </tr>\\r\\n    \\t\\t\\t \\t<tr data-ng-show=\\"Result.length==0\\">\\r\\n    \\t\\t\\t \\t\\t<td class=\\"t-data__td text-left\\" colspan=\\"7\\">\\r\\n    \\t\\t\\t \\t\\t\\tNo Results Found\\r\\n    \\t\\t\\t \\t\\t</td>\\r\\n    \\t\\t\\t \\t</tr>\\t\\t\\t\\t\\t\\t    \\t\\t\\t\\t\\t\\t\\r\\n    \\t\\t\\t</tbody>\\r\\n    \\t\\t</table>\\r\\n    \\t</div>\x3c!--scrollable area end--\x3e\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div data-ui-view=\\"modal\\" autoscroll=\\"false\\"></div>";\n\n//# sourceURL=webpack:///./app/features/transactions/html/transactions.tpl.htm?./node_modules/html-loader')},"./src/js/app.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/babel-polyfill/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/babel-polyfill/lib/index.js\");\n\n// EXTERNAL MODULE: ./node_modules/jquery/dist/jquery.js\nvar jquery = __webpack_require__(\"./node_modules/jquery/dist/jquery.js\");\nvar jquery_default = /*#__PURE__*/__webpack_require__.n(jquery);\n\n// EXTERNAL MODULE: ./node_modules/jquery/dist/jquery.min.js\nvar jquery_min = __webpack_require__(\"./node_modules/jquery/dist/jquery.min.js\");\n\n// EXTERNAL MODULE: ./node_modules/angular/angular.min.js\nvar angular_min = __webpack_require__(\"./node_modules/angular/angular.min.js\");\n\n// EXTERNAL MODULE: ./node_modules/angular-cookies/angular-cookies.min.js\nvar angular_cookies_min = __webpack_require__(\"./node_modules/angular-cookies/angular-cookies.min.js\");\n\n// EXTERNAL MODULE: ./node_modules/angular-animate/angular-animate.min.js\nvar angular_animate_min = __webpack_require__(\"./node_modules/angular-animate/angular-animate.min.js\");\n\n// EXTERNAL MODULE: ./node_modules/angular-sanitize/angular-sanitize.js\nvar angular_sanitize = __webpack_require__(\"./node_modules/angular-sanitize/angular-sanitize.js\");\n\n// EXTERNAL MODULE: ./node_modules/angular-aria/angular-aria.min.js\nvar angular_aria_min = __webpack_require__(\"./node_modules/angular-aria/angular-aria.min.js\");\n\n// EXTERNAL MODULE: ./node_modules/angular-material/angular-material.min.js\nvar angular_material_min = __webpack_require__(\"./node_modules/angular-material/angular-material.min.js\");\n\n// EXTERNAL MODULE: ./node_modules/angular-touch/angular-touch.min.js\nvar angular_touch_min = __webpack_require__(\"./node_modules/angular-touch/angular-touch.min.js\");\n\n// EXTERNAL MODULE: ./node_modules/angular-local-storage/dist/angular-local-storage.min.js\nvar angular_local_storage_min = __webpack_require__(\"./node_modules/angular-local-storage/dist/angular-local-storage.min.js\");\n\n// EXTERNAL MODULE: ./node_modules/tether/dist/js/tether.min.js\nvar tether_min = __webpack_require__(\"./node_modules/tether/dist/js/tether.min.js\");\n\n// EXTERNAL MODULE: ./node_modules/bootstrap/dist/js/bootstrap.min.js\nvar bootstrap_min = __webpack_require__(\"./node_modules/bootstrap/dist/js/bootstrap.min.js\");\n\n// EXTERNAL MODULE: ./node_modules/angular-ui-bootstrap/dist/ui-bootstrap-tpls.js\nvar ui_bootstrap_tpls = __webpack_require__(\"./node_modules/angular-ui-bootstrap/dist/ui-bootstrap-tpls.js\");\n\n// EXTERNAL MODULE: ./node_modules/moment/min/moment.min.js\nvar moment_min = __webpack_require__(\"./node_modules/moment/min/moment.min.js\");\n\n// EXTERNAL MODULE: ./node_modules/moment-timezone/builds/moment-timezone.min.js\nvar moment_timezone_min = __webpack_require__(\"./node_modules/moment-timezone/builds/moment-timezone.min.js\");\n\n// EXTERNAL MODULE: ./node_modules/moment-timezone/builds/moment-timezone-with-data-2012-2022.min.js\nvar moment_timezone_with_data_2012_2022_min = __webpack_require__(\"./node_modules/moment-timezone/builds/moment-timezone-with-data-2012-2022.min.js\");\n\n// EXTERNAL MODULE: ./node_modules/d3/d3.min.js\nvar d3_min = __webpack_require__(\"./node_modules/d3/d3.min.js\");\n\n// EXTERNAL MODULE: ./node_modules/nvd3/build/nv.d3.min.js\nvar nv_d3_min = __webpack_require__(\"./node_modules/nvd3/build/nv.d3.min.js\");\n\n// EXTERNAL MODULE: ./node_modules/angular-nvd3/dist/angular-nvd3.min.js\nvar angular_nvd3_min = __webpack_require__(\"./node_modules/angular-nvd3/dist/angular-nvd3.min.js\");\n\n// EXTERNAL MODULE: ./node_modules/angular/index.js\nvar node_modules_angular = __webpack_require__(\"./node_modules/angular/index.js\");\nvar angular_default = /*#__PURE__*/__webpack_require__.n(node_modules_angular);\n\n// EXTERNAL MODULE: ./node_modules/angular-ui-router/lib-esm/index.js + 83 modules\nvar lib_esm = __webpack_require__(\"./node_modules/angular-ui-router/lib-esm/index.js\");\n\n// EXTERNAL MODULE: ./node_modules/ng-idle/angular-idle.min.js\nvar angular_idle_min = __webpack_require__(\"./node_modules/ng-idle/angular-idle.min.js\");\n\n// CONCATENATED MODULE: ./app/global/services/vendors/ngCart.fulfilment.js\n/* harmony default export */ var ngCart_fulfilment = (angular.module('ngCart.fulfilment', [])\r\n\r\n.service('fulfilmentProvider', ['$injector', '$state', '$timeout', function($injector, $state, $timeout){\r\n\r\n    this._obj = {\r\n        service : undefined,\r\n        settings : undefined\r\n    };\r\n  \r\n    this.setService = function(service){\r\n        this._obj.service = service;\r\n    };\r\n  \r\n    this.setSettings = function(settings){\r\n        this._obj.settings = settings;\r\n    };\r\n  \r\n    this.checkout = function(orderObj){\r\n        var provider = $injector.get('ngCart.fulfilment.' + this._obj.service);\r\n        return provider.checkout(this._obj.settings,orderObj);\r\n    };\r\n      \r\n}])\r\n\r\n.service('ngCart.fulfilment.http', ['$http','$state', '$q', function($http, $state, $q){\r\n\r\n        \r\n        this.checkout = function(service, patent){\r\n\r\n            var deferred = $q.defer();\r\n            $http.post('http://localhost:8080/p3sweb/rest-prepare-banktransfer/', patent)\r\n            .then(\r\n                function(response){\r\n                    deferred.resolve(response.data);\r\n                },\r\n                function(errResponse){\r\n                    console.error('Error submitting POST request to rest-prepare-banktransfer/. Error: ', errResponse)\r\n                    deferred.reject(errResponse);\r\n                }\r\n            );\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n }]).name);\r\n\r\n\r\n\r\n\n// CONCATENATED MODULE: ./app/global/directives/vendors/ngCart.directives.js\n\r\n\r\n\r\n\r\n/* harmony default export */ var ngCart_directives = (angular.module('ngCart.directives', [ngCart_fulfilment])\r\n\r\n.controller('CartController',['$scope', 'ngCart', '$state', function($scope, ngCart, $state) {\r\n    $scope.ngCart = ngCart;\r\n}])\r\n\r\n.directive('ngcartAddtocart', ['ngCart', function(ngCart){\r\n    return {\r\n        restrict : 'E',\r\n        controller : 'CartController',\r\n        scope: {\r\n            id:'@',\r\n            name:'@',\r\n            quantity:'@',\r\n            quantityMax:'@',\r\n            price:'@',\r\n            data:'='\r\n        },\r\n        transclude: true,\r\n        templateUrl: function(element, attrs) {\r\n            if ( typeof attrs.templateUrl == 'undefined' ) {\r\n                return '../app/global/html/ngCart/addtocart.htm';\r\n            } else {\r\n                return attrs.templateUrl;\r\n            }\r\n        },\r\n        link:function(scope, element, attrs){\r\n\r\n            scope.attrs = attrs;\r\n            scope.inCart = function(){\r\n                return  ngCart.getItemById(attrs.id);\r\n            };\r\n\r\n            if (scope.inCart()){\r\n                scope.q = ngCart.getItemById(attrs.id).getQuantity();\r\n            } else {\r\n                scope.q = parseInt(scope.quantity);\r\n            }\r\n\r\n            scope.qtyOpt =  [];\r\n            for (var i = 1; i <= scope.quantityMax; i++) {\r\n                scope.qtyOpt.push(i);\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n}])\r\n\r\n.directive('ngcartCart', [function(){\r\n    return {\r\n        restrict : 'E',\r\n        scope: {\r\n            ngModel: '='\r\n        },\r\n        controller : 'CartController',\r\n        templateUrl: function(element, attrs) {\r\n            if ( typeof attrs.templateUrl == 'undefined' ) {\r\n                return '../app/global/html/ngCart/cart.htm';\r\n            } else {\r\n                return attrs.templateUrl;\r\n            }\r\n        },\r\n        link:function(scope, element, attrs){\r\n\r\n        }\r\n    };\r\n}])\r\n\r\n.directive('ngcartSummary', [function(){\r\n    return {\r\n        restrict : 'E',\r\n        controller : 'CartController',\r\n        scope: {},\r\n        transclude: true,\r\n        templateUrl: function(element, attrs) {\r\n            if ( typeof attrs.templateUrl == 'undefined' ) {\r\n                return '../app/global/html/ngCart/summary.htm';\r\n            } else {\r\n                return attrs.templateUrl;\r\n            }\r\n        }\r\n    };\r\n}])\r\n\r\n.directive('ngcartCheckout', ['ngCart', 'ngCartItem', 'basketService', 'patentsRestService', '$rootScope', '$timeout',  '$state', function(ngCart, ngCartItem, basketService, patentsRestService, $rootScope, $timeout,  $state){\r\n    return {\r\n        restrict : 'E',\r\n        scope: {\r\n            service:'@',\r\n            settings:'=',\r\n            ngModel: '='\r\n        },\r\n        controller : ('CartController', ['$scope', 'ngCart', 'fulfilmentProvider', 'basketService','$state', function($scope, ngCart, fulfilmentProvider, basketService, $state) {\r\n\r\n            $scope.ngCart = ngCart;\r\n            $scope.productData = ngCart.$cart.items;\r\n\r\n\r\n\r\n            $scope.basketItems = function() {\r\n                return [] = Object.keys($scope.productData).map(function(data, index){\r\n                    var obj = {};\r\n                    obj.ep_ApplicationNo = $scope.productData[data]._data.ep_ApplicationNumber;\r\n                    obj.patentID = $scope.productData[data]._data.patentID;\r\n                    obj.serviceType = $scope.productData[data]._name;\r\n                    return obj;\r\n                })\r\n            };\r\n\r\n            $scope.checkout = function () {\r\n\r\n                var orderObj = {\r\n                    basketItems: $scope.basketItems(),\r\n                    totalCostUSD: ngCart.totalCost(),\r\n                    dateNowLocalTime: null\r\n                };\r\n\r\n                fulfilmentProvider.setService($scope.service);\r\n                fulfilmentProvider.setSettings($scope.settings);\r\n\r\n                fulfilmentProvider.checkout(orderObj)\r\n                    .then(function (data, status, headers, config) {\r\n                            data.billingDetails = $scope.summary.billingDetails;\r\n                            $state.go('bank-transfer-preparation', {orderObj:orderObj, details: data}, {reload: false});                            \r\n                        },\r\n                        function (data, status, headers, config) {\r\n                            $rootScope.$broadcast('ngCart:checkout_failed', {\r\n                                statusCode: status,\r\n                                error: data\r\n                            });\r\n                        }\r\n                    );\r\n            };\r\n        }]),\r\n        link: function(scope, element, attrs) {\r\n            \r\n            $rootScope.$on('ngCart:itemRemoved', function() {\r\n               fetchBasketPatents();\r\n            });\r\n\r\n            fetchBasketPatents();\r\n\r\n            function fetchBasketPatents(orderObj) {\r\n                var orderObj = {};\r\n                orderObj.basketItems = scope.basketItems();\r\n                basketService.fetchBasketPatents(orderObj)\r\n                .then(\r\n                    function(response){\r\n\r\n                        scope.summary = {\r\n                            firstName: response.firstName,\r\n                            lastName: response.lastName,\r\n                            billingDetails: {\r\n                                billingStreet: response.billingStreet,\r\n                                billingCity: response.billingCity,\r\n                                billingState: response.billingState,\r\n                                billingZip: response.billingZip,\r\n                            },\r\n                            date: response.dateNowLocalTimeUI,\r\n                            fees: {\r\n                                totalProcessingFeesUSD: response.totalProcessingFeesUSD,\r\n                                totalExpressFeesUSD: response.totalExpressFeesUSD,\r\n                                totalUrgentFeesUSD: response.totalUrgentFeesUSD,\r\n                                totalOfficialFeesUSD: response.totalOfficialFeesUSD,\r\n                                totalPatentPlaceFeesUSD: (function(){\r\n                                    return response.totalCostUSD - response.totalOfficialFeesUSD;\r\n                                }()),\r\n                                totalCostUSD: response.totalCostUSD\r\n                            },\r\n                            totalPatents: response.orderedPatentUIs.length\r\n                        };\r\n\r\n                    },\r\n                    function(errResponse){\r\n                        console.error('Error: Unable to fetch basket details: ', errResponse);\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        transclude: true,\r\n        templateUrl: function(element, attrs) {\r\n            if ( typeof attrs.templateUrl == 'undefined' ) {\r\n                return '../app/global/html/ngCart/checkout.htm';\r\n            } else {\r\n                return attrs.templateUrl;\r\n            }\r\n        }\r\n    };\r\n}]).name);\r\n\r\n\r\n\n// CONCATENATED MODULE: ./assets/js/vendors/ngCart.js\n\r\n\r\n\r\n\r\n/* harmony default export */ var vendors_ngCart = (angular.module('ngCart', [ngCart_directives])\r\n\r\n    .config([function () {\r\n\r\n    }])\r\n\r\n    .provider('$ngCart', function () {\r\n        this.$get = function () {\r\n        };\r\n    })\r\n\r\n    .run(['$rootScope', 'ngCart','ngCartItem', 'store', function ($rootScope, ngCart, ngCartItem, store) {\r\n\r\n        $rootScope.$on('ngCart:change', function(){\r\n            ngCart.$save();\r\n        });\r\n\r\n        if (angular.isObject(store.get('cart'))) {\r\n            ngCart.$restore(store.get('cart'));\r\n\r\n        } else {\r\n            ngCart.init();\r\n        }\r\n\r\n    }])\r\n\r\n    .service('ngCart', ['$rootScope', '$window', 'ngCartItem', 'store', '$uibModal', '$state', function ($rootScope, $window, ngCartItem, store, $uibModal, $state) {\r\n\r\n        var vm = this;\r\n\r\n        this.init = function(){\r\n            this.$cart = {\r\n                shipping : null,\r\n                taxRate : null,\r\n                tax : null,\r\n                items : []\r\n            };\r\n        };\r\n\r\n        function differentTypes(type) {\r\n            if(type == 'validation') { //if newly added item is a validation\r\n                return vm.getCart().items.some(function(cartItems){ //check that there are no nonvalidaitons orders\r\n                    return cartItems._name !== 'validation';\r\n                })\r\n            }\r\n            if(type !== 'validation') { //if newly added item is a validation\r\n                return vm.getCart().items.some(function(cartItems){ //check that there are no nonvalidaitons orders\r\n                    return cartItems._name == 'validation';\r\n                })\r\n            }            \r\n        }\r\n\r\n        this.addItem = function (id, name, price, quantity, data) {\r\n\r\n            var inCart = this.getItemById(id);\r\n\r\n            if(differentTypes(name)) { \r\n\r\n                var modalInstance = $uibModal.open({\r\n                    templateUrl: 'app/templates/modals/modal.validation-in-basket.tpl.htm',\r\n                    appendTo: undefined,\r\n                    controllerAs: '$ctrl',\r\n                    controller: ['$uibModalInstance', function($uibModalInstance) {\r\n                        this.dismissModal = function () {\r\n                            $uibModalInstance.close();\r\n                        };\r\n\r\n                    }]\r\n                })\r\n\r\n\r\n                return; \r\n            }\r\n\r\n            var modalInstance = $uibModal.open({\r\n                templateUrl: 'app/templates/modals/modal.confirm-add-action.tpl.htm',\r\n                appendTo: undefined,\r\n                controllerAs: '$ctrl',\r\n                controller: ['$uibModalInstance', function($uibModalInstance) {\r\n\r\n                    this.order = {}\r\n                    console.log('price modal: ', price)\r\n                    this.order.price = price;\r\n\r\n                    if(data.p3sServices) {\r\n                        this.order.euroAction = data.p3sServices.map(function(item){\r\n                            if(action.serviceType === 'epct') { action.serviceType = 'Euro-PCT'; }\r\n                            return  item.serviceType;\r\n                        })\r\n                    }\r\n\r\n                    if(data.p3sServicesWithFees) {\r\n                        this.order.euroAction = data.p3sServicesWithFees.map(function(item){\r\n                            if(action.serviceType === 'epct') { action.serviceType = 'Euro-PCT'; }\r\n                            return  item.serviceType;\r\n                        })\r\n                    }\r\n\r\n                    this.order.ep_ApplicationNumber = data.ep_ApplicationNumber;\r\n                    this.order.totalOrderLength = vm.getItems().length;\r\n                    this.order.totalCost = vm.totalCost();\r\n\r\n                    this.continueBasket =  function() {\r\n                        $state.go('basket', {})\r\n                        $uibModalInstance.close();\r\n                    }\r\n\r\n                    this.dismissModal = function () {\r\n                        $uibModalInstance.close();\r\n                    };\r\n\r\n                }]\r\n            })\r\n\r\n            if (typeof inCart === 'object'){\r\n                //Update quantity of an item if it's already in the cart\r\n                inCart.setQuantity(quantity, false);\r\n                $rootScope.$broadcast('ngCart:itemUpdated', inCart);\r\n            } else {\r\n                var newItem = new ngCartItem(id, name, price, quantity, data);\r\n                this.$cart.items.push(newItem);\r\n                $rootScope.$broadcast('ngCart:itemAdded', newItem);\r\n            }\r\n\r\n            $rootScope.$broadcast('ngCart:change', {});\r\n        };\r\n\r\n        this.getItemById = function (itemId) {\r\n            var items = this.getCart().items;\r\n            var build = false;\r\n\r\n            angular.forEach(items, function (item) {\r\n                if  (item.getId() === itemId) {\r\n                    build = item;\r\n                }\r\n            });\r\n            return build;\r\n        };\r\n\r\n        this.setShipping = function(shipping){\r\n            this.$cart.shipping = shipping;\r\n            return this.getShipping();\r\n        };\r\n\r\n        this.getShipping = function(){\r\n            if (this.getCart().items.length == 0) return 0;\r\n            return  this.getCart().shipping;\r\n        };\r\n\r\n        this.setTaxRate = function(taxRate){\r\n            this.$cart.taxRate = +parseFloat(taxRate).toFixed(2);\r\n            return this.getTaxRate();\r\n        };\r\n\r\n        this.getTaxRate = function(){\r\n            return this.$cart.taxRate\r\n        };\r\n\r\n        this.getTax = function(){\r\n            return +parseFloat(((this.getSubTotal()/100) * this.getCart().taxRate )).toFixed(2);\r\n        };\r\n\r\n        this.setCart = function (cart) {\r\n            this.$cart = cart;\r\n            return this.getCart();\r\n        };\r\n\r\n        this.getCart = function(){\r\n            return this.$cart;\r\n        };\r\n\r\n        this.getItems = function(){\r\n            return this.getCart().items;\r\n        };\r\n\r\n        this.getTotalItems = function () {\r\n            var count = 0;\r\n            var items = this.getItems();\r\n            angular.forEach(items, function (item) {\r\n                count += item.getQuantity();\r\n            });\r\n            return count;\r\n        };\r\n\r\n        this.getTotalUniqueItems = function () {\r\n            return this.getCart().items.length;\r\n        };\r\n\r\n        this.getSubTotal = function(){\r\n            var total = 0;\r\n            angular.forEach(this.getCart().items, function (item) {\r\n                total += item.getTotal();\r\n            });\r\n            return +parseFloat(total).toFixed(2);\r\n        };\r\n\r\n        this.totalCost = function () {\r\n            // console.log('this.getShipping()', this.getShipping()) BEEEN REMOVED\r\n            return +parseFloat(this.getSubTotal() + this.getTax()).toFixed(2);\r\n        };\r\n\r\n        this.removeItem = function (index) {\r\n            var item = this.$cart.items.splice(index, 1)[0] || {};\r\n            $rootScope.$broadcast('ngCart:itemRemoved', item);\r\n            $rootScope.$broadcast('ngCart:change', {});\r\n\r\n\r\n        };\r\n\r\n        this.removeItemById = function (id) {\r\n\r\n            var item;\r\n            var cart = this.getCart();\r\n            angular.forEach(cart.items, function (item, index) {\r\n                if(item.getId() === id) {\r\n                    item = cart.items.splice(index, 1)[0] || {};\r\n                }\r\n            });\r\n            this.setCart(cart);\r\n            $rootScope.$broadcast('ngCart:itemRemoved', item);\r\n            $rootScope.$broadcast('ngCart:change', {});\r\n\r\n            var modalInstance = $uibModal.open({\r\n                templateUrl: 'app/templates/modals/modal.confirm-remove-action.tpl.htm',\r\n                appendTo: undefined,\r\n                controllerAs: '$ctrl',\r\n                controller: ['$uibModalInstance', function($uibModalInstance) {\r\n                    this.dismissModal = function () {\r\n                        $uibModalInstance.close();\r\n                    };\r\n\r\n                }]\r\n            })\r\n\r\n        };\r\n\r\n        this.empty = function () {\r\n            \r\n            $rootScope.$broadcast('ngCart:change', {});\r\n            this.$cart.items = [];\r\n            $window.localStorage.removeItem('cart');\r\n        };\r\n        \r\n        this.isEmpty = function () {\r\n            \r\n            return (this.$cart.items.length > 0 ? false : true);\r\n            \r\n        };\r\n\r\n        this.toObject = function() {\r\n\r\n            if (this.getItems().length === 0) return false;\r\n\r\n            var items = [];\r\n            angular.forEach(this.getItems(), function(item){\r\n                items.push (item.toObject());\r\n            });\r\n\r\n            return {\r\n                shipping: this.getShipping(),\r\n                tax: this.getTax(),\r\n                taxRate: this.getTaxRate(),\r\n                subTotal: this.getSubTotal(),\r\n                totalCost: this.totalCost(),\r\n                items:items\r\n            }\r\n        };\r\n\r\n\r\n        this.$restore = function(storedCart){\r\n            var _self = this;\r\n            _self.init();\r\n            _self.$cart.shipping = storedCart.shipping;\r\n            _self.$cart.tax = storedCart.tax;\r\n\r\n            angular.forEach(storedCart.items, function (item) {\r\n                _self.$cart.items.push(new ngCartItem(item._id,  item._name, item._price, item._quantity, item._data));\r\n            });\r\n            this.$save();\r\n        };\r\n\r\n        this.$save = function () {\r\n\r\n            var reduceCart = this.getCart().items.map(function(item){\r\n                if(!item._data.p3sServices) { //logic to prevent error of object loop\r\n                    item._data.p3sServicesWithFees.map(function(prop){                    \r\n                        if(prop.form1200FeeUI) {\r\n                            prop.form1200FeeUI.data = null;\r\n                        }\r\n\r\n                        if(prop.renewalFeeUI) {\r\n                            prop.renewalFeeUI.data = null;\r\n                        }\r\n\r\n                        if(prop.grantFeeUI) {\r\n                            prop.grantFeeUI.data = null;\r\n                        }\r\n\r\n                        if(prop.validationFeeUI) {\r\n                            prop.validationFeeUI.data = null;\r\n                        }                        \r\n                    })\r\n\r\n                } \r\n                return item;\r\n            })\r\n            return store.set('cart', JSON.stringify(reduceCart));\r\n        }\r\n\r\n    }])\r\n\r\n    .factory('ngCartItem', ['$rootScope', '$log', function ($rootScope, $log) {\r\n\r\n        var item = function (id, name, price, quantity, data) {\r\n            this.setId(id);\r\n            this.setName(name);\r\n            this.setPrice(price);\r\n            this.setQuantity(quantity);\r\n            this.setData(data);\r\n        };\r\n\r\n\r\n        item.prototype.setId = function(id){\r\n            if (id)  this._id = id;\r\n            else {\r\n                $log.error('An ID must be provided');\r\n            }\r\n        };\r\n\r\n        item.prototype.getId = function(){\r\n            return this._id;\r\n        };\r\n\r\n\r\n        item.prototype.setName = function(name){\r\n            if (name)  this._name = name;\r\n            else {\r\n                $log.error('A name must be provided');\r\n            }\r\n        };\r\n        item.prototype.getName = function(){\r\n            return this._name;\r\n        };\r\n\r\n        item.prototype.setPrice = function(price){\r\n            var priceFloat = parseFloat(price);\r\n            if (priceFloat) {\r\n                if (priceFloat <= 0) {\r\n                    $log.error('A price must be over 0');\r\n                } else {\r\n                    this._price = (priceFloat);\r\n                }\r\n            } else {\r\n                $log.error('A price must be provided');\r\n            }\r\n        };\r\n        item.prototype.getPrice = function(){\r\n            return this._price;\r\n        };\r\n\r\n\r\n        item.prototype.setQuantity = function(quantity, relative){\r\n\r\n\r\n            var quantityInt = parseInt(quantity);\r\n            if (quantityInt % 1 === 0){\r\n                if (relative === true){\r\n                    this._quantity  += quantityInt;\r\n                } else {\r\n                    this._quantity = quantityInt;\r\n                }\r\n                if (this._quantity < 1) this._quantity = 1;\r\n\r\n            } else {\r\n                this._quantity = 1;\r\n                $log.info('Quantity must be an integer and was defaulted to 1');\r\n            }\r\n\r\n\r\n        };\r\n\r\n        item.prototype.getQuantity = function(){\r\n            return this._quantity;\r\n        };\r\n\r\n        item.prototype.setData = function(data){\r\n            if (data) this._data = data;\r\n        };\r\n\r\n        item.prototype.getData = function(){\r\n            if (this._data) return this._data;\r\n            else $log.info('This item has no data');\r\n        };\r\n\r\n\r\n        item.prototype.getTotal = function(){\r\n            return +parseFloat(this.getQuantity() * this.getPrice()).toFixed(2);\r\n        };\r\n\r\n        item.prototype.toObject = function() {\r\n            return {\r\n                id: this.getId(),\r\n                name: this.getName(),\r\n                price: this.getPrice(),\r\n                quantity: this.getQuantity(),\r\n                data: this.getData(),\r\n                total: this.getTotal()\r\n            }\r\n        };\r\n\r\n        return item;\r\n\r\n    }])\r\n\r\n    .service('store', ['$window', function ($window) {\r\n\r\n        return {\r\n\r\n            get: function (key) {\r\n                if ( $window.localStorage.getItem(key) )  {\r\n                    var cart = angular.fromJson( $window.localStorage.getItem(key) ) ;\r\n                    return JSON.parse(cart);\r\n                }\r\n                return false;\r\n\r\n            },\r\n\r\n\r\n            set: function (key, val) {\r\n\r\n                if (val === undefined) {\r\n                    $window.localStorage.removeItem(key);\r\n                } else {\r\n                    $window.localStorage.setItem( key, angular.toJson(val) );\r\n                }\r\n                return $window.localStorage.getItem(key);\r\n            }\r\n        }\r\n    }])\r\n\r\n    .controller('CartController',['$scope', 'ngCart', function($scope, ngCart) {\r\n\r\n        $scope.ngCart = ngCart;\r\n\r\n    }])\r\n\r\n    .value('version', '1.0.0').name);\r\n\n// EXTERNAL MODULE: ./node_modules/angular-moment/angular-moment.js\nvar angular_moment = __webpack_require__(\"./node_modules/angular-moment/angular-moment.js\");\n\n// EXTERNAL MODULE: ./node_modules/angular-nvd3/index.js\nvar angular_nvd3 = __webpack_require__(\"./node_modules/angular-nvd3/index.js\");\n\n// EXTERNAL MODULE: ./node_modules/angular-croppie/angular-croppie.js\nvar angular_croppie = __webpack_require__(\"./node_modules/angular-croppie/angular-croppie.js\");\n\n// CONCATENATED MODULE: ./app/app.config.js\nappConfig.$inject = ['$httpProvider', '$urlRouterProvider', '$uibModalProvider', '$compileProvider' ,'$qProvider', 'KeepaliveProvider', 'IdleProvider', 'localStorageServiceProvider', '$mdIconProvider', '$mdPanelProvider'];\r\n\r\nfunction appConfig($httpProvider, $urlRouterProvider, $uibModalProvider, $compileProvider, $qProvider, KeepaliveProvider, IdleProvider, localStorageServiceProvider, $mdIconProvider, $mdPanelProvider) {\r\n\r\n    if (!$httpProvider.defaults.headers.get) {\r\n        $httpProvider.defaults.headers.get = {};    \r\n    }    \r\n\r\n    window.ppdomain = \"http://localhost:8080/p3sweb/\";\r\n\r\n    $httpProvider.defaults.headers.get['If-Modified-Since'] = 'Mon, 26 Jul 1997 05:00:00 GMT';\r\n\r\n    $mdIconProvider\r\n        .defaultFontSet('FontAwesome')\r\n        .fontSet('fa', 'FontAwesome');\r\n\r\n\r\n    IdleProvider.idle(500);\r\n    IdleProvider.timeout(30);\r\n    KeepaliveProvider.interval(20);\r\n\r\n\r\n\r\n    $qProvider.errorOnUnhandledRejections(false);\r\n\r\n    localStorageServiceProvider\r\n        .setStorageType('sessionStorage')\r\n        .setDefaultToCookie(false)\r\n        .setNotify(true, true)\r\n\r\n}\n// CONCATENATED MODULE: ./app/features/user/services/user.user.serv.js\n\r\n\r\n/* harmony default export */ var user_user_serv = (angular_default.a.module('services.user-service', []).factory('userService', userService).name);\r\n\r\nuserService.$inject = ['$http', '$q']; \r\n\r\nfunction userService($http, $q) {\r\n\r\n    var REST_SERVICE_URI = ppdomain+'rest-user/'; //variable declared before function are initiated\r\n\r\n    var factory = {\r\n        fetchUser: fetchUser,\r\n        updateUser: updateUser,\r\n        listUsers: listUsers\r\n\r\n    };\r\n\r\n    return factory;\r\n\r\n    function fetchUser() {\r\n    \r\n        var deferred = $q.defer();\r\n         $http.get(REST_SERVICE_URI)\r\n            .then(\r\n            function (response) {\r\n                deferred.resolve(response.data);\r\n            },\r\n            function(errResponse){\r\n                console.error('Error while fetching user');\r\n                deferred.reject(errResponse);\r\n            }\r\n        );\r\n\r\n        return deferred.promise;\r\n    };\r\n\r\n    var config = {headers:  {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n        }\r\n    };\r\n\r\n    function updateUser(user) {\r\n\r\n        var deferred = $q.defer();\r\n        $http.put(REST_SERVICE_URI, user, config)\r\n            .then(\r\n            function (response) {\r\n                deferred.resolve(response.data);\r\n            },\r\n            function(errResponse){\r\n                deferred.reject(errResponse);\r\n            }\r\n        );\r\n        return deferred.promise;\r\n    };\r\n\r\n    function listUsers() {\r\n\r\n        var deferred = $q.defer();\r\n\r\n        $http.get(ppdomain+'rest-users/')\r\n            .then(\r\n            function (response) {\r\n                deferred.resolve(response.data);\r\n            },\r\n            function(errResponse){\r\n                deferred.reject(errResponse);\r\n            }\r\n        );\r\n        return deferred.promise;\r\n    };\r\n\r\n}\r\n\r\n\n// CONCATENATED MODULE: ./app/global/services/app.core.serv.js\n/* harmony default export */ var app_core_serv = (angular.module('services.core-service', []).factory('coreService', coreService).name);\r\n\r\ncoreService.$inject = ['$q', '$timeout', '$http'];\r\n\r\nfunction coreService($q, $timeout, $http) {\r\n\r\n    var REST_SERVICE_URI = ppdomain+'partner-details/'; \r\n\r\n    var factory = {\r\n        getMessages: getMessages,\r\n        supressMessages: supressMessages,        \r\n        ppContact: ppContact,\r\n        openAppGuide: openAppGuide,\r\n        appGuideOpen: false\r\n    };\r\n\r\n    function ppContact() {\r\n        var deferred = $q.defer();\r\n        $http.get(REST_SERVICE_URI)\r\n        .then(\r\n            function(response){\r\n                deferred.resolve(response.data)\r\n            },\r\n            function(errResponse){\r\n                deferred.resolve(errResponse)\r\n            }\r\n        );\r\n        return deferred.promise;\r\n    }\r\n\r\n    function getMessages() {\r\n        var deferred = $q.defer();\r\n        $http.get(ppdomain+'login-messages/')\r\n        .then(\r\n            function (response) {\r\n                deferred.resolve(response.data);\r\n            },\r\n            function(errResponse){\r\n                console.error('Error while fetching messages');\r\n                deferred.reject(errResponse);\r\n            }\r\n        );\r\n\r\n        return deferred.promise;\r\n    };\r\n\r\n\r\n\r\n    function supressMessages(id) {\r\n        var deferred = $q.defer();\r\n        $http.post(ppdomain+'suppress-login-messages/' , id)\r\n        .then(\r\n            function(response){\r\n                deferred.resolve(response);\r\n            }, \r\n            function(errResponse){\r\n                deferred.reject(errResponse);\r\n            }\r\n        );\r\n        return deferred.promise;\r\n    };    \r\n\r\n    function openAppGuide() {\r\n        return factory.appGuideOpen = !factory.appGuideOpen;\r\n    }\r\n\r\n    return factory;\r\n\r\n}\r\n\n// CONCATENATED MODULE: ./app/global/services/app.organiseColour.serv.js\n/* harmony default export */ var app_organiseColour_serv = (angular.module('services.organise-colour-service', []).factory('OrganiseColourService', OrganiseColourService).name);\r\n\r\nOrganiseColourService.$inject = ['$http', '$q'];\r\n\r\nfunction OrganiseColourService($http, $q) {\r\n\r\n    var factory = {\r\n        getNextColour:  getNextColour,\r\n        getCurrColour:  getCurrColour\r\n\r\n    }\r\n\r\n    function getCurrColour(colour, item) {\r\n\r\n        var color;\r\n\r\n        if(item === 'text') {\r\n            switch(colour) {\r\n                case 'Green':\r\n                    color =  'txt-phase-green'\r\n                break;\r\n                case 'Amber':\r\n                    color =  'txt-phase-amber'\r\n                break;\r\n                case 'Red':\r\n                    color = 'txt-phase-red'\r\n                break;\r\n                case 'Blue':\r\n                    color =  'txt-phase-blue'\r\n                break;\r\n                case 'Black':\r\n                    color = 'txt-phase-black'\r\n            } //switch end\r\n\r\n        }\r\n\r\n        if(item === 'bg') {\r\n            switch(colour) {\r\n                case 'Green':\r\n                    color =  'bg-phase-green'\r\n                break;\r\n                case 'Amber':\r\n                    color =  'bg-phase-amber'\r\n                break;\r\n                case 'Red':\r\n                    color = 'bg-phase-red'\r\n                break;\r\n                case 'Blue':\r\n                    color =  'bg-phase-blue'\r\n                break;\r\n                case 'Black':\r\n                    color = 'bg-phase-black'\r\n            } //switch end\r\n           \r\n        }\r\n\r\n        return color\r\n    }\r\n\r\n    function getNextColour(colour, item) {\r\n        var color;\r\n\r\n        if(item === 'bg') {\r\n            switch(colour) {\r\n                case 'Green':\r\n                    color =  'bg-phase-amber'\r\n                break;\r\n                case 'Amber':\r\n                    color =  'bg-phase-red'\r\n                break;\r\n                case 'Red':\r\n                    color = 'bg-phase-blue'\r\n                break;\r\n                case 'Blue':\r\n                    color =  'bg-phase-black'\r\n                break;\r\n                case 'Black':\r\n                    color = 'bg-white'\r\n            } //switch end\r\n           \r\n        }\r\n         return color\r\n    }    \r\n\r\n    return factory;\r\n\r\n}\n// CONCATENATED MODULE: ./app/features/portfolio/services/patents.patentsRest.serv.js\n\r\n\r\n/* harmony default export */ var patents_patentsRest_serv = (angular.module('services.patents-rest-service', [app_organiseColour_serv]).factory('PatentsRestService', PatentsRestService).name);\r\n\r\nPatentsRestService.$inject = ['$http', '$q', 'OrganiseColourService'];\r\n\r\nfunction PatentsRestService($http, $q, OrganiseColourService) {\r\n\r\n    var REST_SERVICE_URI = ppdomain+'rest-patents/'; \r\n\r\n    var factory = {\r\n        fetchAllPatents: fetchAllPatents,\r\n        updatePatent: updatePatent,\r\n        savePatent: savePatent,\r\n        deletePatent: deletePatent,\r\n        fetchPatentItem: fetchPatentItem\r\n    };\r\n\r\n    return factory;\r\n\r\n    var actionsArray = [];\r\n\r\n    function fetchAllPatents() {\r\n\r\n        var deferred = $q.defer();\r\n         $http.get(ppdomain+'rest-patents-portfolio/')\r\n            .then(\r\n            function (response) {\r\n\r\n                var generateId = function(service) {\r\n                    var number = '';\r\n                    for (var i = 0; i < service.length; i++) {\r\n                        number += service.charCodeAt(i).toString();\r\n                    }\r\n                    return parseInt(number.substring(2, 9)); //skip decimal\r\n                }\r\n\r\n                response.data.map(function(patent){\r\n                    return patent.p3sServices.map(function(property){\r\n                        \r\n                        if(property.serviceType === 'postvalidation') {\r\n                            property.serviceType = '----';\r\n                            property.serviceStatusUI = 'N/A';\r\n\r\n                        }\r\n                        if(property.serviceType == 'postgrant') {\r\n                            property.serviceType = '----';\r\n                        }\r\n\r\n                        property.actionID = patent.patentID + generateId(property.serviceType); //generate unique id based on patent id and service type (get char codes)\r\n                        if(property.currentStageColour) {\r\n                            property.cssCurrent = OrganiseColourService.getCurrColour(property.currentStageColour, 'text')\r\n                        }\r\n                        if(property.nextStageColour) {\r\n                            property.cssNext = OrganiseColourService.getCurrColour(property.nextStageColour, 'text')\r\n                        }\r\n                        return property;\r\n                    })\r\n                })\r\n\r\n                actionsArray = response.data.map(function(patent){\r\n                    return patent.p3sServices.map(function(action){\r\n                        var obj = {};\r\n                        obj.patentID = patent.patentID;\r\n                        obj.serviceType = action.serviceType;\r\n                        obj.actionID = action.actionID\r\n                        return obj;\r\n                    })\r\n                })\r\n\r\n                deferred.resolve(response.data);\r\n\r\n            },\r\n            function(errResponse){\r\n                console.error('Error: Unable to fetch all patents. Error Response:', errResponse)\r\n                deferred.reject(errResponse);\r\n            }\r\n        );\r\n        return deferred.promise;\r\n    };\r\n\r\n    function fetchPatentItem(id) {\r\n        var deferred = $q.defer();\r\n        $http.get(ppdomain+'rest-patent/'+ id)\r\n            .then(\r\n            function (response) {\r\n\r\n                if(actionsArray === undefined || typeof actionsArray === 'undefined') {\r\n                    deferred.reject(response.data);\r\n                }\r\n                if(actionsArray.length) {\r\n                     \r\n                    var merged = [].concat.apply([], actionsArray); //dont use flat() method because of IE. This is alternative\r\n                    response.data.p3sServicesWithFees.map(function(property){\r\n                        property.serviceType = property.serviceType == 'postvalidation' ? 'N/A' : property.serviceType;\r\n                        property.serviceStatus = property.serviceType == 'postvalidation' ? 'validated' : property.serviceStatus;\r\n                        var item = merged.filter(function(action){\r\n                            return action.serviceType === property.serviceType && id == action.patentID;\r\n                        }).map(function(filtered){\r\n                            return filtered.actionID\r\n                        })\r\n\r\n                        property.actionID = item[0];\r\n\r\n                        if(property.currentStageColour) {\r\n                            property.cssCurrent = OrganiseColourService.getCurrColour(property.currentStageColour, 'text');\r\n                        }\r\n                        if(property.nextStageColour) {\r\n                            property.cssNext = OrganiseColourService.getCurrColour(property.nextStageColour, 'text');\r\n                        }\r\n                        return property;\r\n                    \r\n                    })\r\n\r\n                     deferred.resolve(response.data);\r\n                }\r\n\r\n               \r\n            },\r\n            function(errResponse){\r\n                console.error('Error: Unable to fetch patent. Error Response:', errResponse)\r\n                deferred.reject(errResponse);\r\n            }\r\n        );\r\n\r\n        return deferred.promise;\r\n    };    \r\n\r\n    function updatePatent(patent, id) {\r\n        //quick fix for resolving issues with converting circule structure to JSON(loop) \r\n        patent.p3sServicesWithFees.map(function(action){\r\n            action.form1200FeeUI = null;\r\n            action.grantFeeUI = null;\r\n            action.validationFeeUI = null;\r\n            action.renewalFeeUI = null;\r\n        })\r\n   \r\n        var deferred = $q.defer();\r\n        $http.put(REST_SERVICE_URI+id, patent)\r\n            .then(\r\n            function (response) {\r\n                deferred.resolve(response.data);\r\n            },\r\n            function(errResponse){\r\n                console.error('Error: Unable to update patent. Error Response:', errResponse)\r\n                deferred.reject(errResponse);\r\n            }\r\n        );\r\n        return deferred.promise;\r\n    };\r\n\r\n    function savePatent(patent) {\r\n        var deferred= $q.defer();\r\n        $http.post(ppdomain+'rest-patents/', patent)\r\n            .then(function(response){\r\n                deferred.resolve(response.data);\r\n            }, function(errResponse) {\r\n                console.error('Error: Unable to save patent. Error Response:', errResponse)\r\n                deferred.reject(errResponse);\r\n            }\r\n        );\r\n        return deferred.promise;\r\n    };\r\n\r\n    function deletePatent(id) {\r\n        var deferred = $q.defer();\r\n        $http.delete(REST_SERVICE_URI+id)\r\n            .then(\r\n            function (response) {\r\n                deferred.resolve(response.data);\r\n            },\r\n            function(errResponse){\r\n                console.error('Error: Unable to delete patent. Error Response:', errResponse)\r\n                deferred.reject(errResponse);\r\n            }\r\n        );\r\n        return deferred.promise;\r\n    };\r\n\r\n\r\n}\r\n\r\n\n// CONCATENATED MODULE: ./app/global/controllers/core.core.ctrl.js\n\r\n\r\n\r\n/* harmony default export */ var core_core_ctrl = (angular.module('ppApp.core', [app_core_serv, patents_patentsRest_serv]).controller('coreCtrl', coreCtrl).name);\r\n\r\ncoreCtrl.$inject = ['$uibModal', '$scope', 'coreService', 'localStorageService', '$timeout', 'PatentsRestService', 'Idle', 'Keepalive', '$http', '$cookies'];\r\n\r\nfunction coreCtrl($uibModal, $scope, coreService, localStorageService, $timeout, PatentsRestService, Idle, Keepalive, $http, $cookies) {\r\n\r\n\tvar vm = this;\r\n\r\n\tvar urgentResponse = [];\r\n\tvar systemResponse = [];\r\n\tvar patentsFound = true;\r\n\tvar userTimedOut = false;\r\n\tvar messageArr = [];\r\n\r\n\t$scope.$on('Keepalive', function() {\r\n\t\t$http.get(ppdomain+'keep-session-alive/');\r\n\t});\r\n\r\n\t$scope.$on('IdleStart', function() {\r\n\t\t\r\n\t  \tcloseModals();\r\n\r\n\t  \t$scope.warning = $uibModal.open({\r\n\t\t  \ttemplateUrl: 'app/templates/modals/modal.idle.tpl.htm',\r\n\t  \t\twindowClass: 'modal-danger',\r\n\t\t\tappendTo: undefined\r\n\t    });\r\n\t});\r\n\r\n  \t$scope.$on('IdleEnd', function() {\r\n\t  \tcloseModals();\r\n\t});\r\n\r\n\t$scope.$on('IdleTimeout', function() {\r\n\r\n\t  \tcloseModals();\r\n\r\n     \tngCart.empty();\r\n    \t$http.post('http://localhost:8080/p3sweb/resources/j_spring_security_logout')\r\n      \t.then(\r\n      \t\tfunction(response){\r\n      \t\t  \twindow.location.reload('http://localhost:8080/p3sweb/login');\r\n      \t\t},\r\n          \tfunction(errResponse) {\r\n            \tconsole.log(errResponse)\r\n          \t}    \r\n\t\t)    \t\r\n      \t\r\n\t});\r\n\r\n    function init() {\r\n\r\n\r\n        PatentsRestService.fetchAllPatents()\r\n        .then(\r\n            function(response){\r\n                if(response.length === 0) {\r\n                    welcomeMessageModal();\r\n                }\r\n            },\r\n            function(errResponse){\r\n                console.log(errResponse)\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    init();\r\n\r\n\tfunction welcomeMessageModal() {\r\n\t\tvar modalInstance = $uibModal.open({\r\n\t\t\ttemplateUrl: 'app/templates/modals/modal.welcome-message.tpl.htm',\r\n\t\t\tscope: $scope,\r\n\t\t\tcontrollerAs:'$ctrl',\r\n\t\t\tcontroller: ['$uibModalInstance', function($uibModalInstance) {\r\n\r\n\t\t \t  \tthis.dismissModal = function () {\r\n\t\t\t    \t$uibModalInstance.close();\r\n\t\t\t  \t};\r\n\t\t\t}]\r\n\t\t});\r\n \t}\r\n\r\n\tfunction closeModals() {\r\n\t    if ($scope.warning) {\r\n\t      \t$scope.warning.close();\r\n\t      \t$scope.warning = null;\r\n\t    }\r\n\r\n\t    if ($scope.timedout) {\r\n\t      $scope.timedout.close();\r\n\t      $scope.timedout = null;\r\n\t    }\r\n\t}\r\n\r\n}\n// CONCATENATED MODULE: ./app/features/dashboard/services/dashboard.service.js\n\r\n\r\n/* harmony default export */ var dashboard_service = (angular_default.a.module('services.DashboardService', []).factory('DashboardService', DashboardService).name);\r\n\r\nDashboardService.$inject = ['$http', '$q', 'PatentsRestService']\r\n\r\nfunction DashboardService($http, $q, PatentsRestService) {\r\n\r\n    var factory = {\r\n        sortPatents: sortPatents,\r\n        getPatents: {},\r\n    };\r\n\r\n    return factory;\r\n\r\n\r\n\r\n    function sortPatents(patents) {\r\n\r\n        var obj = {\r\n            epct: {           \r\n                Green: [],\r\n                Amber: [],\r\n                Red: [],\r\n                Grey: []\r\n            },\r\n            renewal: {           \r\n                Green: [],\r\n                Amber: [],\r\n                Red: [],\r\n                Blue: [],\r\n                Black: [],\r\n                Grey: []\r\n            },\r\n            grant: {           \r\n                Green: [],\r\n                Amber: [],\r\n                Red: [],\r\n                Grey: []\r\n            },\r\n            validation: {\r\n                Green: [],\r\n                Grey: []\r\n            }\r\n        }\r\n\r\n        var newPatents = patents.map(function(patent){\r\n            return patent.p3sServices.map(function(serv){\r\n                return {                \r\n                    patentID: patent.patentID,\r\n                    ep_ApplicationNumber: patent.ep_ApplicationNumber,\r\n                    clientRef: patent.clientRef,\r\n                    p3sServices: [serv]\r\n                }\r\n            })\r\n        })\r\n\r\n\r\n        var result = [].concat.apply([], newPatents);\r\n\r\n        result.forEach(function(patent){\r\n            patent.p3sServices.forEach(function(action, idx){\r\n                var string = action.currentStageColour.toLowerCase();\r\n                var capitalized = string.charAt(0).toUpperCase() + string.slice(1);     \r\n                if(action.serviceType == 'validation') {\r\n                    obj.validation.Green.push(patent); //handle validation manual processing\r\n                }\r\n                if(action.serviceType !== 'postgrant' && action.serviceType !== 'validation' && action.serviceType !== '----') { //validated changed fro postvalidation\r\n                    obj[action.serviceType][capitalized].push(patent);\r\n                }\r\n                \r\n            })\r\n        })\r\n        \r\n        factory.getPatents = obj;\r\n    }\r\n    \r\n\r\n};\n// CONCATENATED MODULE: ./app/global/services/fx.service.js\n/* harmony default export */ var fx_service = (angular.module('services.fx-service', []).factory('FxService', FxService).name);\r\n\r\nFxService.$inject = ['$q', '$http'];\r\n\r\nfunction FxService($q, $http) {\r\n\t\r\n\tvar factory = {\r\n\t\tfetchFxWeek: fetchFxWeek,\r\n\t\tfetchFxMonth: fetchFxMonth,\r\n\t\tfetchFx: fetchFx\r\n\t};\r\n\r\n\treturn factory;\t\r\n\r\n\tfunction fetchFx() {\r\n\r\n\t\tvar deferred = $q.defer()\r\n\r\n\t\t$http.get(ppdomain+'rest-fxrate/')\r\n\t\t.then(\r\n\t\t\tfunction(response){\r\n\t\t\t\tdeferred.resolve(response.data)\r\n\t\t\t},\r\n\t\t\tfunction(errResponse){\r\n\t\t\t\tdeferred.reject(errResponse.data)\r\n\t\t\t}\r\n\t\t)\r\n\t\treturn deferred.promise;\r\n\t}\r\n\r\n\tfunction fetchFxWeek() {\r\n\r\n\t\tvar deferred = $q.defer()\r\n\r\n\t\t$http.get(ppdomain+'rest-fxrates/week')\r\n\t\t.then(\r\n\t\t\tfunction(response){\r\n\t\t\t\tdeferred.resolve(response.data)\r\n\t\t\t},\r\n\t\t\tfunction(errResponse){\r\n\t\t\t\tdeferred.reject(errResponse.data)\r\n\t\t\t}\r\n\t\t)\r\n\t\treturn deferred.promise;\r\n\t}\r\n\r\n\r\n\tfunction fetchFxMonth() {\r\n\r\n\t\tvar deferred = $q.defer()\r\n\r\n\t\t$http.get(ppdomain+'rest-fxrates/month')\r\n\t\t.then(\r\n\t\t\tfunction(response){\r\n\t\t\t\tdeferred.resolve(response.data)\r\n\t\t\t},\r\n\t\t\tfunction(errResponse){\r\n\t\t\t\tdeferred.reject(errResponse.data)\r\n\t\t\t}\r\n\t\t)\r\n\t\treturn deferred.promise;\r\n\t}\r\n}\n// CONCATENATED MODULE: ./app/global/services/calculate.service.js\n/* harmony default export */ var calculate_service = (angular.module('services.calculate', []).factory('CalculateService', CalculateService).name);\r\n\r\nCalculateService.$inject = ['$q', '$timeout'];\r\n\r\nfunction CalculateService($q, $timeout) {\r\n\r\n\tvar factory = {\r\n\t\tcalculateHours: calculateHours,\r\n\t\trecentActivity: recentActivity\r\n\t};\r\n\r\n\treturn factory;\r\n\r\n\tfunction calculateHours(costband, response) {\r\n\r\n\t\tvar date = new Date().getTime();\r\n\t\tvar hours = '';\r\n\r\n        switch(costband) {\r\n            case 'Green':\r\n            \thours =  date - response.greenStartDate;\r\n\t\t\tbreak;\r\n\t\t\tcase 'Amber':\r\n\t\t\t\thours =  date - response.amberStartDate;\r\n\t\t\tbreak;\r\n\t\t\tcase 'Red':\r\n\t\t\t\thours =  date - response.redStartDate;\r\n\t\t\tbreak;\r\n\t\t\tcase 'Blue':\r\n\t\t\t\thours =  date - response.blueStartDate;\r\n\t\t\tbreak;\r\n\t\t\tcase 'Black':\r\n\t\t\t\tif(data.renewalStatus == 'Show price') {\r\n\t\t\t\t\thours =  date - response.blackStartDate;\r\n\t\t\t\t} \t\t\t\t\t\t\t\r\n\t\t} //switch end\r\n\r\n\t\treturn hours;\t\t\r\n\t}\r\n\r\n\tfunction recentActivity(millisec) {\r\n\t\t\r\n        var seconds = (millisec / 1000).toFixed(0);\r\n        var minutes = Math.floor(seconds / 60);\r\n        var hours = \"\";\r\n\r\n        if (minutes > 59) {\r\n            hours = Math.floor(minutes / 60);\r\n            hours = (hours >= 10) ? hours : \"0\" + hours;\r\n            minutes = minutes - (hours * 60);\r\n            minutes = (minutes >= 10) ? minutes : \"0\" + minutes;\r\n        }\r\n\r\n        seconds = Math.floor(seconds % 60);\r\n        seconds = (seconds >= 10) ? seconds : \"0\" + seconds;\r\n\r\n        if (hours !== '' && hours < 48) { //if within 48 hours\r\n            return true;\r\n        }\r\n\r\n    } //recentActivity end\r\n\r\n}\n// CONCATENATED MODULE: ./app/global/services/cost-analysis.service.js\n/* harmony default export */ var cost_analysis_service = (angular.module('services.cost-analysis', []).factory('CostAnalysisService', CostAnalysisService).name);\r\n\r\nCostAnalysisService.$inject = ['$http', '$q'];\r\n\r\nfunction CostAnalysisService($http, $q) {\r\n\r\n    var factory = {\r\n        fetchCa: fetchCa\r\n    }\r\n\r\n    function fetchCa(patentID, services) {\r\n\r\n        var array = [];\r\n        var deferred = $q.defer();\r\n\r\n        var obj = {};\r\n\r\n        services.forEach(function(data){ //for multiple services for single patent\r\n            if(data.saleType == 'Not In Progress') { return; }\r\n            obj[data.serviceType] = data; \r\n            if(data.serviceType == 'epct') {      \r\n                array.push($http.get(ppdomain+'rest-form1200-cost-analysis/'+patentID))\r\n\r\n            }\r\n            if(data.serviceType == 'renewal') {\r\n                array.push($http.get(ppdomain+'rest-cost-analysis/'+patentID))\r\n            }\r\n            if(data.serviceType == 'grant') {\r\n                array.push($http.get(ppdomain+'rest-grant-cost-analysis/'+patentID))\r\n            }            \r\n        })\r\n\r\n        $q.all(array)\r\n        .then(\r\n            function(response){\r\n                response.map(function(action, idx){\r\n                    action.info = Object.keys(obj)[idx]\r\n                    return action;\r\n                })\r\n                deferred.resolve(response);\r\n            },\r\n            function(errResponse){\r\n                console.error('Error: Unable to fetch cost analysis')\r\n                deferred.reject(errResponse)\r\n            }\r\n        )\r\n\r\n        return deferred.promise;\r\n\r\n        // return \r\n    }\r\n\r\n    return factory;\r\n\r\n}\n// CONCATENATED MODULE: ./app/features/transactions/services/transactions.service.js\n/* harmony default export */ var transactions_service = (angular.module('services.TransactionService', []).factory('TransactionService', TransactionService).name);\r\n\r\nTransactionService.$inject = ['$http', '$q'];\r\n\r\nfunction TransactionService($http, $q) {\r\n\r\n\tvar REST_SERVICE_URI_CURRENT = ppdomain+'rest-current-transactions/';\r\n\tvar REST_SERVICE_URI_HISTORY = ppdomain+'rest-historic-transactions/';\r\n\r\n\tvar factory = {\r\n\t\tfetchCurrentTransactions:fetchCurrentTransactions,\r\n\t\tfetchTransactionHistory: fetchTransactionHistory,\r\n\t\tfetchAllTransactions: fetchAllTransactions,\r\n\t\tactionProgress: actionProgress\r\n\t};\r\n\r\n\treturn factory;\r\n\r\n  \tfunction transactionProgress(val, status) { //assigned to scope for child scope to access\r\n\t    var transStatusArray = ['Initiated', 'Awaiting Funds', 'Funds Received', 'Funds Sent', 'EPO Received', 'EPO Instructed', 'Completed'];\r\n\t    var transStatusValidationArray = ['Initiated', 'Awaiting Funds', 'Processing Funds', 'Processing', 'Completed'];\r\n  \t\tvar arrayType;\r\n  \t\tif(val == true) {\r\n  \t\t\tarrayType = transStatusValidationArray;\r\n  \t\t} else {\r\n  \t\t\tarrayType = transStatusArray;\r\n  \t\t}\r\n\t\tvar index = arrayType.indexOf(status);\r\n\t\tvar length = arrayType.length;\r\n\t\tvar percentage = Math.round(((index+1) * 100) / length);\r\n\t\treturn percentage;\r\n  \t}\r\n\r\n\r\n\tfunction fetchAllTransactions() {\r\n\r\n\t\tvar deferred = $q.defer();\r\n\r\n\t\t$q.all([this.fetchCurrentTransactions(), this.fetchTransactionHistory()])\r\n\t\t.then(\r\n\t\t\tfunction(response){\r\n\t\t\t\tvar concat = response[0].concat(response[1]).map(function(data){\t\r\n\r\n\t\t\t\t\tdata.transTypeUI = data.historic === true ? 'Historic' : 'Current';\r\n\t                var isValidation = data.serviceUIs.some(function(item){\r\n\t                    return item.newType == 'Validation' ? true : false;\r\n\t                })\r\n\r\n\t                if(isValidation === true) {\r\n\t                \tvar valStatus = data.serviceUIs[0].validationStatus;\r\n\t                    if((data.latestTransStatus === 'Funds Sent' && valStatus == 'Payment in progress' )|| (valStatus == 'Payment in progress' && data.latestTransStatus === 'EPO Received') || (valStatus == 'PA instructed' && data.latestTransStatus === 'EPO Received') ) {\r\n\t                        data.latestTransStatus = 'Processing Funds';\r\n\t                    }\r\n\t                    if((valStatus !== 'Payment in progress' && data.latestTransStatus === 'EPO Received') || data.latestTransStatus === 'Associates Instructed') {\r\n\t                        data.latestTransStatus = 'Processing';\r\n\t                    }\r\n\t                }\r\n\t\t\t\t\tdata.actionProgress = transactionProgress(isValidation, data.latestTransStatus);\r\n\r\n\t\t\t\t\tdata.serviceUIs.map(function(o, i){ \r\n\t\t\t\t\t\tif(o.patentUI !== undefined) {\t\t\t\t\r\n\t\t\t\t\t\t\to.appAndType = o.patentUI.ep_ApplicationNumber + ' (' + o.newType +')';\t\r\n\t\t\t\t\t\t\tif(o.patentUI.clientRef == '') {\r\n\t\t\t\t\t\t\t\to.patentUI.clientRef = '[No Client Reference Provided]'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\to.patentUI = {};\r\n\t\t\t\t\t\t\to.patentUI.clientRef = o.clientRef;\r\n\t\t\t\t\t\t\to.appAndType = o.patentApplicationNumber + ' (' + o.newType +')';\t\r\n\t\t\t\t\t\t\tif(o.patentUI.clientRef == '') {\r\n\t\t\t\t\t\t\t\to.patentUI.clientRef = '[No Client Reference Provided]';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn o;\r\n\t\t\t\t\t})\r\n\t\t\t\t\treturn data;\t\t\r\n\t\t\t\t})\r\n\t\t\t\tdeferred.resolve(concat);\r\n\t\t\t},\r\n\t\t\tfunction(errResponse) {\r\n\t\t\t\tconsole.error('Error fetching all transactions. Error: ', errResponse);\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\treturn deferred.promise;\r\n\r\n\t}\r\n\r\n\r\n\tfunction fetchCurrentTransactions() {\r\n\r\n\t\tvar deferred = $q.defer();\r\n\t\t$http.get(REST_SERVICE_URI_CURRENT)\r\n\t\t.then(\r\n\t\t\tfunction(response){\r\n                response.data.map(function(el){\r\n                \tif(el.renewalUIs.length) {\r\n\t                \tel.renewalUIs.map(function(o){ \r\n\t                \t\to.newType = 'Renewal';\r\n\t                \t})\r\n                \t}\r\n                \tif(el.grantUIs.length) {\r\n\t                \tel.grantUIs.map(function(o){ \r\n\t                \t\to.newType = 'Grant';\r\n\t                \t})\r\n                \t}\r\n                \tif(el.epctUIs.length) {\r\n\t                \tel.epctUIs.map(function(o){ \r\n\t                \t\to.newType = 'Euro-PCT';\r\n\t                \t})\r\n                \t}\r\n                \tif(el.validationUIs.length) {\r\n\t                \tel.validationUIs.map(function(o){ \r\n\t                \t\to.newType = 'Validation';\r\n\t                \t})\r\n                \t}                \t\r\n                    el.serviceUIs = [];\r\n                    el.serviceUIs = el.serviceUIs.concat(el.renewalUIs, el.grantUIs, el.epctUIs, el.validationUIs)\r\n                    return el;\r\n   \r\n                })\r\n\t\t\t\tdeferred.resolve(response.data);\r\n\t\t\t},\r\n\t\t\tfunction(errResponse){\r\n\t\t\t\tconsole.error('Error: unable to fetch current transactions: Error msg: ', errResponse)\r\n\t\t\t\tdeferred.reject(errResponse);\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\treturn deferred.promise;\r\n\r\n\t};\r\n\r\n\tfunction fetchTransactionHistory() {\r\n\r\n\t\tvar deferred = $q.defer();\r\n\t\t$http.get(REST_SERVICE_URI_HISTORY)\r\n\t\t.then(\r\n\t\t\tfunction(response){\r\n                response.data.map(function(el){\r\n                \tif(el.renewalUIs.length) {\r\n\t                \tel.renewalUIs.map(function(o){ \r\n\t                \t\to.newType = 'Renewal';\r\n\t                \t})\r\n                \t}\r\n                \tif(el.grantUIs.length) {\r\n\t                \tel.grantUIs.map(function(o){ \r\n\t                \t\to.newType = 'Grant';\r\n\t                \t})\r\n                \t}\r\n                \tif(el.epctUIs.length) {\r\n\t                \tel.epctUIs.map(function(o){ \r\n\t                \t\to.newType = 'Euro-PCT';\r\n\t                \t})\r\n                \t}\r\n                \tif(el.validationUIs.length) {\r\n\t                \tel.validationUIs.map(function(o){ \r\n\t                \t\to.newType = 'Validation';\r\n\t                \t})\r\n                \t}                        \t  \t\r\n                    el.serviceUIs = [];\r\n                    el.serviceUIs = el.serviceUIs.concat(el.renewalUIs, el.grantUIs, el.epctUIs, el.validationUIs)\r\n                    return el;\r\n   \r\n                })\r\n                deferred.resolve(response.data);\r\n\t\t\t},\r\n\t\t\tfunction(errResponse){\r\n\t\t\t\tconsole.error('Error: unable to fetch transacrtion history: Error msg: ', errResponse)\r\n\t\t\t\tdeferred.reject(errResponse);\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\treturn deferred.promise;\r\n\r\n\t};\t\r\n\r\n\tfunction actionProgress(currTransStatus) {\r\n\r\n\t\tvar progress = 0;\r\n\t\t\r\n\t\tswitch(currTransStatus) {\r\n    \t\tcase 'Initiated':\r\n    \t\t\tprogress = 14;\r\n    \t\tbreak;\r\n    \t\tcase 'Awaiting Funds':\r\n    \t\t\tprogress = 28;\r\n\t\t\tbreak;\r\n    \t\tcase 'Funds Received':\r\n    \t\t\tprogress = 42;\r\n\t\t\tbreak;\t\r\n    \t\tcase 'Funds Sent':\r\n    \t\t\tprogress = 56;\r\n\t\t\tbreak;\t\r\n    \t\tcase 'EPO Received':\r\n    \t\t\tprogress = 70;\r\n\t\t\tbreak;\t\r\n    \t\tcase 'EPO Instructed':\r\n    \t\t\tprogress = 84;\r\n\t\t\tbreak;\r\n    \t\tcase 'Completed':\r\n    \t\t\tprogress = 100;\r\n\t\t\tbreak;\t       \t\t\t\t\t    \t\t\t    \t\t\t    \t\t\t\r\n\r\n\t\t}\r\n\r\n\t\treturn progress;\r\n\r\n\t};\r\n\r\n}\n// CONCATENATED MODULE: ./app/features/dashboard/controllers/dashboard.controller.js\nDashboardController.$inject = ['$state',  '$timeout', '$scope', 'DashboardService', 'PatentsRestService'];\r\n\r\nfunction DashboardController($state, $timeout, $scope,  DashboardService, PatentsRestService) {\r\n\r\n    var vm = this;\r\n\r\n    $scope.formalityData = {}\r\n    $scope.dashboardLoaded = false;\r\n    $scope.graphsLoaded = false;\r\n    $scope.promise = PatentsRestService.fetchAllPatents();\r\n    $scope.promise\r\n    .then(function(response) {\r\n        if ($scope.$$destroyed) throw \"Scope destroyed\";\r\n        return response;\r\n    })\r\n    .then(\r\n        function(response){\r\n            DashboardService.sortPatents(response);\r\n            $scope.formalityData = DashboardService.getPatents;\r\n            if($state.current.name === 'dashboard') {\r\n                $state.go('dashboard.content', {patents: response}, {reload: false});\r\n            }\r\n        }\r\n    )\r\n\r\n}\n// CONCATENATED MODULE: ./app/features/dashboard/controllers/dashboard.actions-available.controller.js\nActionsAvailableController.$inject = ['$scope', '$timeout']\r\n\r\nfunction ActionsAvailableController($scope, $timeout) {\r\n\r\n\tvar vm = this;\r\n\r\n\t$scope.filter = {};\r\n\r\n    function noSubFilter(obj) {\r\n        for (var key in obj) {\r\n            if (obj[key]) { //if one of the $scope.filter ($scope.filter) properties evaluates to true (is selected) return false \r\n                return false;\r\n            }\r\n        }\r\n        return true; //if no subfilters return true. This will result in all filtered data items being returned a true value\r\n    }\r\n\r\n    function checkArray(obj, service, prop) {\r\n        return service.some(function(item) { //if filter[curretStageColour][red]\r\n            return obj[prop][item[prop]] === true;\r\n        })\r\n    }\r\n\r\n\r\n\t$scope.$parent.promise\r\n\t.then(\r\n\t\tfunction(response){\r\n\r\n\t        response = response.map(function(patent){\r\n\t            return patent.p3sServices.map(function(serv){\r\n\t                return {                \r\n\t                    patentID: patent.patentID,\r\n\t                    ep_ApplicationNumber: patent.ep_ApplicationNumber,\r\n\t                    clientRef: patent.clientRef,\r\n\t                    p3sServices: [serv]\r\n\t                }\r\n\t            })\r\n\t        })\r\n\r\n\t        var result = [].concat.apply([], response);\r\n\r\n\t\t\t$scope.availableActions = result.filter(function(item){\r\n\t\t\t\treturn item.p3sServices[0].saleType == 'Online' || item.p3sServices[0].saleType == 'Offline';\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tvm.chipOptions = [];\r\n\t\t\tvm.showFilter = showFilter;\r\n\r\n\t\t    function showFilter(mdMenu, $event) {\r\n\t\t \r\n\t\t        mdMenu.open($event)\r\n\t\t        $scope.categories = ['saleType', 'currentStageColour', 'nextStageColour', 'serviceType'];     \r\n\r\n\t\t        //return items to filter panel\r\n\t\t        $scope.getItems = function (obj, array) { //obj is cat currentStageColour or serviceType\r\n\t\t            return (array || []).map(function (w) {\r\n\t\t                return w.p3sServices[0][obj]; //select property in p3sservices \r\n\t\t            }).filter(function (w, idx, arr) {\r\n\t\t                if (typeof w === 'undefined' || w === null) {\r\n\t\t                    return false;\r\n\t\t                }\r\n\t\t                return arr.indexOf(w) === idx;\r\n\t\t            });\r\n\t\t        };\r\n\r\n\t\t        $scope.updateFiltered = function(prop, value, cat) {\r\n\r\n\t\t            if(value === true) {\r\n\t\t                if(cat === 'epct') {cat = 'Euro-PCT'};\r\n\t\t                vm.chipOptions.push({cat: cat, value: value, prop: prop})\r\n\t\t            } \r\n\t\t            if(value === false) {\r\n\t\t                var index = vm.chipOptions.indexOf(cat);\r\n\t\t                vm.chipOptions.splice(index, 1);\r\n\t\t            }\r\n\t\t        }\r\n\r\n\t\t        $scope.closeDialog = function() {\r\n\t\t            $mdDialog.hide();\r\n\t\t        }\r\n\r\n\t\t    } //showFilter function end\t\r\n\r\n\t\t    $scope.filterByPropertiesMatchingAND = function (data) { //all data sent from filter \r\n\t\t        var matchesAND = true; //set macthes to true (default)\r\n\r\n\t\t        for (var obj in $scope.filter) { //$scope.filter is populated by $scope.filter within the panel controller below. Scope filter properties are initiated from front-end. currentStageColour/serviceType\r\n\r\n\t\t            if( $scope.filter.hasOwnProperty(obj) ) {\r\n\t\t                if (noSubFilter($scope.filter[obj])) continue; //Check if there are any sub filter options with the value of true, if so, break from loop to return value of true\r\n\t\t                if (!checkArray($scope.filter, data.p3sServices, obj)) { //If the property from the data matches the property from $scope.filter ($scope.filter) return false. It will not turn up in the table\r\n\t\t                    matchesAND = false;\r\n\t\t                    break; //break from the loop and return matchesAND which would now return false\r\n\t\t                }\r\n\t\t                \r\n\t\t            }\r\n\t\t        }\r\n\t\t        return matchesAND;\r\n\t\t    }; \t\t\t\t\r\n\r\n\t\t}\r\n\t)\r\n    \r\n}\n// CONCATENATED MODULE: ./app/features/dashboard/controllers/dashboard.fx-chart.controller.js\nDbFxChartCtrl.$inject = ['$scope', '$timeout', 'fxRatesMonth'];\r\n\r\nfunction DbFxChartCtrl($scope, $timeout, fxRatesMonth) {\r\n\r\n    var vm = this;\r\n    var fxChartTimeout;\r\n\r\n    $scope.$parent.promise\r\n    .then(\r\n        function(response){\r\n\r\n            fxChartTimeout = $timeout(function() { \r\n                vm.lineData = lineData;\r\n                vm.lineOptions = {\r\n                    chart: {\r\n                        type: 'lineChart',\r\n                        height: 450,\r\n                        margin : {\r\n                            top: 20,\r\n                            right: 20,\r\n                            bottom: 55,\r\n                            left: 55\r\n                        },\r\n                        clipEdge: false,\r\n                        tooltip: {\r\n                          hideDelay: 0\r\n                        },                      \r\n                        showLegend: false,\r\n                        x: function(d, i){ \r\n                            return d[0]},\r\n                        y: function(d){ return d[1]; },\r\n                        useInteractiveGuideline: true,\r\n                        xAxis: {\r\n                            tickFormat: function (d, i) {\r\n                                return d3.time.format('%x')(new Date(d));\r\n                            },\r\n\r\n                            showMaxMin: false,\r\n                            rotateLabels: -30,\r\n                            ticks: 24        \r\n                        },\r\n                        xScale: d3.time.scale(),\r\n                        yAxis: {\r\n                            tickFormat: function(d){\r\n                                return d3.format('.04f')(d);\r\n                            },\r\n                            axisLabelDistance: -10,\r\n                            ticks: 10,\r\n                            showMaxMin: false\r\n                        },\r\n                        tooltip: {\r\n                            keyFormatter: function(d) {\r\n                                return d3.time.format('%x')(new Date(d));\r\n                            }\r\n                        },                      \r\n                        useVoronoi: false,\r\n                        lines: {\r\n                            interactive: true\r\n                        },\r\n                        showXAxis: true,\r\n                        showYAxis: true,\r\n                        // forceY: [0],            \r\n                        callback: function(chart){\r\n\r\n                        }\r\n                    }\r\n                }\r\n                \r\n            })\r\n            vm.fxChartLoaded = true;\r\n    })\r\n\r\n    function lineData() {\r\n\r\n        var chartValueArrs = [];\r\n\r\n        for(var i = 0; i < fxRatesMonth.length; i++) {\r\n            chartValueArrs.push([fxRatesMonth[i].rateActiveDate, fxRatesMonth[i].rate]);\r\n        }\r\n\r\n        return [\r\n            {\r\n                values: chartValueArrs.reverse(),\r\n                color: '#2ca02c'\r\n            }\r\n        ]\r\n\r\n    } //function end\r\n\r\n    $scope.$on('$destroy', function(){\r\n        $timeout.cancel(fxChartTimeout)\r\n    })\r\n\r\n}\r\n\n// CONCATENATED MODULE: ./app/features/dashboard/controllers/dashboard.europcts-graph.controller.js\nEuropctsDonutController.$inject = ['$stateParams', '$scope', '$timeout'];\r\n\r\nfunction EuropctsDonutController($stateParams, $scope, $timeout) {\r\n\r\n\tvar vm = this;\r\n\tvar epctGraphTimeout;\r\n\r\n\t$scope.$parent.promise\r\n\t.then(\r\n\t\tfunction(response){\r\n\t\t\t\r\n\t\t\tepctGraphTimeout = $timeout(function() { //required to load correct size of donut graph in view\r\n\t      \t\tvm.donutOptions = {\r\n\t\t            chart: {\r\n\t\t                type: 'pieChart',\t\r\n\t\t                height: 200,\r\n\t\t                donut: true,\r\n\t\t                margin: { top: 0, right: 0, bottom: 0, left: 0 },\r\n\t\t                tooltip: {\r\n\t\t\t\t\t\t  hideDelay: 0\r\n\t\t\t\t\t\t},\r\n\t\t                x: function(d){\r\n\t\t                \treturn d.key;\r\n\t\t                },\r\n\t\t                y: function(d){\r\n\t\t                \treturn d.y;\r\n\t\t                },\r\n\t\t                donutRatio: 0.60,\r\n\t\t\t\t\t\tduration: 500,\r\n\t\t                showLabels: false,\r\n\t\t                showLegend: false,\r\n\t\t                valueFormat: function(d) {\r\n\t\t                \treturn d;\r\n\t\t                }\r\n\t\t            }\r\n\t\t        };\r\n\r\n\t\t        var formalityTotal = function() {\r\n\t\t        \tvar counter = 0;\r\n\t\t        \tObject.keys($scope.formalityData.epct).forEach(function(item){\r\n\t\t        \t\tcounter += $scope.formalityData.epct[item].length;\r\n\t\t        \t})\r\n\t\t        \treturn counter;\r\n\r\n\t\t        }\t\t        \r\n\r\n\t\t        vm.donutData = {\r\n\t\t        \tphases: [\r\n\t\t\t        \t{\r\n\t\t\t        \t\tkey: 'Green', \r\n\t\t\t        \t\ty: $scope.formalityData.epct.Green.length,\r\n\t\t\t        \t\tcolor: '#53ab58'\r\n\t\t\t        \t},\r\n\t\t\t        \t{\r\n\t\t\t        \t\tkey: 'Amber', \r\n\t\t\t        \t\ty: $scope.formalityData.epct.Amber.length,\r\n\t\t\t        \t\tcolor: '#f9b233'\r\n\t\t\t        \t},\r\n\t\t\t        \t{\r\n\t\t\t        \t\tkey: 'Red', \r\n\t\t\t        \t\ty: $scope.formalityData.epct.Red.length,\r\n\t\t\t        \t\tcolor: '#e30613'\r\n\t\t\t        \t},\r\n\t\t\t        \t{\r\n\t\t\t        \t\tkey: 'Grey', \r\n\t\t\t        \t\ty: $scope.formalityData.epct.Grey.length,\r\n\t\t\t        \t\tcolor: '#dbdbdb'\r\n\t\t\t        \t}\r\n\t\t\t        ],\r\n\t\t        \ttotal: formalityTotal()\r\n\t\t        }\r\n\t\t        \t\r\n\r\n\t            var evt = document.createEvent('UIEvents');\r\n\t            evt.initUIEvent('resize', true, false, window, 0);\r\n\t            window.dispatchEvent(evt);\r\n\t           \r\n\t  \t\t}, 300);\r\n\r\n\r\n\t\t} //if patents end\t\r\n\t)\r\n\r\n\t$scope.$on('$destroy', function(){\r\n\t\t$timeout.cancel(epctGraphTimeout);\r\n\t})\r\n}\n// CONCATENATED MODULE: ./app/features/dashboard/controllers/dashboard.grants-graph.controller.js\nGrantsDonutController.$inject = ['$stateParams', '$scope', '$timeout'];\r\n\r\nfunction GrantsDonutController($stateParams, $scope, $timeout) {\r\n\r\n\tvar vm = this;\r\n\tvar grantGraphTimeout;\r\n\r\n\t$scope.$parent.promise\r\n\t.then(\r\n\t\tfunction(response){\r\n\r\n\t\t\t$scope.$parent.dashboardLoaded = true;\r\n\t\t\tgrantGraphTimeout = $timeout(function() { //required to load correct size of donut graph in view\r\n\t      \t\tvm.donutOptions = {\r\n\t\t            chart: {\r\n\t\t                type: 'pieChart',\t\r\n\t\t                height: 200,\r\n\t\t                donut: true,\r\n\t\t                margin: { top: 0, right: 0, bottom: 0, left: 0 },\r\n\t\t                tooltip: {\r\n\t\t\t\t\t\t  hideDelay: 0\r\n\t\t\t\t\t\t},\r\n\t\t                x: function(d){\r\n\t\t                \treturn d.key;\r\n\t\t                },\r\n\t\t                y: function(d){\r\n\t\t                \treturn d.y;\r\n\t\t                },\r\n\t\t                donutRatio: 0.60,\r\n\t\t\t\t\t\tduration: 500,\r\n\t\t                showLabels: false,\r\n\t\t                showLegend: false,\r\n\t\t                valueFormat: function(d) {\r\n\t\t                \treturn d;\r\n\t\t                }\r\n\t\t            }\r\n\t\t        };\r\n\r\n\t\t        var formalityTotal = function() {\r\n\t\t        \tvar counter = 0;\r\n\t\t        \tObject.keys($scope.formalityData.grant).forEach(function(item){\r\n\t\t        \t\tcounter += $scope.formalityData.grant[item].length;\r\n\t\t        \t})\r\n\t\t        \treturn counter;\r\n\r\n\t\t        }\r\n\r\n\t\t        vm.donutData = {\r\n\t\t        \tphases: [\r\n\t\t\t        \t{\r\n\t\t\t        \t\tkey: 'Green', \r\n\t\t\t        \t\ty: $scope.formalityData.grant.Green.length,\r\n\t\t\t        \t\tcolor: '#53ab58'\r\n\t\t\t        \t},\r\n\t\t\t        \t{\r\n\t\t\t        \t\tkey: 'Amber', \r\n\t\t\t        \t\ty: $scope.formalityData.grant.Amber.length,\r\n\t\t\t        \t\tcolor: '#f9b233'\r\n\t\t\t        \t},\r\n\t\t\t        \t{\r\n\t\t\t        \t\tkey: 'Red', \r\n\t\t\t        \t\ty: $scope.formalityData.grant.Red.length,\r\n\t\t\t        \t\tcolor: '#e30613'\r\n\t\t\t        \t},\r\n\t\t\t        \t{\r\n\t\t\t        \t\tkey: 'Grey', \r\n\t\t\t        \t\ty: $scope.formalityData.grant.Grey.length,\r\n\t\t\t        \t\tcolor: '#dbdbdb'\r\n\t\t\t        \t},\r\n\t\t        \t],\r\n\t\t        \ttotal: formalityTotal()\r\n\t        \t}\t\t        \t\r\n\t\t        \r\n\t            var evt = document.createEvent('UIEvents');\r\n\t            evt.initUIEvent('resize', true, false, window, 0);\r\n\t            window.dispatchEvent(evt);\r\n\r\n\t  \t\t}, 300);\r\n\r\n\r\n\t\t} //if patents end\t\r\n\t)\r\n\r\n\t$scope.$on('$destroy', function(){\r\n\t\t$timeout.cancel(grantGraphTimeout);\r\n\t})\r\n}\n// CONCATENATED MODULE: ./app/features/dashboard/controllers/dashboard.renewals-graph.controller.js\nRenewalsDonutController.$inject = ['$stateParams', '$scope', '$timeout'];\r\n\r\nfunction RenewalsDonutController($stateParams, $scope, $timeout) {\r\n\r\n\tvar vm = this;\r\n\tvar renewalGraphTimeout;\r\n\r\n\t$scope.$parent.promise\r\n\t.then(\r\n\t\tfunction(response){\r\n\r\n\t\t\trenewalGraphTimeout = $timeout(function() { //required to load correct size of donut graph in view\r\n\t      \t\tvm.donutOptions = {\r\n\t\t            chart: {\r\n\t\t                type: 'pieChart',\t\r\n\t\t                height: 200,\r\n\t\t                donut: true,\r\n\t\t                margin: { top: 0, right: 0, bottom: 0, left: 0 },\r\n\t\t                tooltip: {\r\n\t\t\t\t\t\t  hideDelay: 0\r\n\t\t\t\t\t\t},\r\n\t\t                x: function(d){\r\n\t\t                \treturn d.key;\r\n\t\t                },\r\n\t\t                y: function(d){\r\n\t\t                \treturn d.y;\r\n\t\t                },\r\n\t\t                donutRatio: 0.60,\r\n\t\t\t\t\t\tduration: 500,\r\n\t\t                showLabels: false,\r\n\t\t                showLegend: false,\r\n\t\t                valueFormat: function(d) {\r\n\t\t                \treturn d;\r\n\t\t                }\r\n\t\t            }\r\n\t\t        };\r\n\r\n\t\t        var formalityTotal = function() {\r\n\t\t        \tvar counter = 0;\r\n\t\t        \tObject.keys($scope.formalityData.renewal).forEach(function(item){\r\n\t\t        \t\tcounter += $scope.formalityData.renewal[item].length;\r\n\t\t        \t})\r\n\t\t        \treturn counter;\r\n\r\n\t\t        }\r\n\r\n\t\t        vm.donutData = {\r\n\t\t        \tphases: [\r\n\t\t\t        \t{\r\n\t\t\t        \t\tkey: 'Green', \r\n\t\t\t        \t\ty: $scope.formalityData.renewal.Green.length,\r\n\t\t\t        \t\tcolor: '#53ab58'\r\n\t\t\t        \t},\r\n\t\t\t        \t{\r\n\t\t\t        \t\tkey: 'Amber', \r\n\t\t\t        \t\ty: $scope.formalityData.renewal.Amber.length,\r\n\t\t\t        \t\tcolor: '#f9b233'\r\n\t\t\t        \t},\r\n\t\t\t        \t{\r\n\t\t\t        \t\tkey: 'Red', \r\n\t\t\t        \t\ty: $scope.formalityData.renewal.Red.length,\r\n\t\t\t        \t\tcolor: '#e30613'\r\n\t\t\t        \t},\r\n\t\t\t        \t{\r\n\t\t\t        \t\tkey: 'Blue',\r\n\t\t\t        \t\ty: $scope.formalityData.renewal.Blue.length,\r\n\t\t\t        \t\tcolor: '#0097ce'\r\n\t\t\t        \t},\r\n\t\t\t        \t{\r\n\t\t\t        \t\tkey: 'Black', \r\n\t\t\t        \t\ty: $scope.formalityData.renewal.Black.length,\r\n\t\t\t        \t\tcolor: '#3c3c3b'\r\n\t\t\t        \t},\r\n\t\t\t        \t{\r\n\t\t\t        \t\tkey: 'Grey', \r\n\t\t\t        \t\ty: $scope.formalityData.renewal.Grey.length,\r\n\t\t\t        \t\tcolor: '#dbdbdb'\r\n\t\t\t        \t}\r\n\t\t        \t],\r\n\t\t        \ttotal: formalityTotal()\r\n\r\n\t\t       \t}\t        \r\n\r\n\t            var evt = document.createEvent('UIEvents');\r\n\t            evt.initUIEvent('resize', true, false, window, 0);\r\n\t            window.dispatchEvent(evt);\r\n\r\n\t  \t\t}, 300);\r\n\r\n\t\t\t$scope.$on('$destroy', function(){\r\n\t\t\t\t$timeout.cancel(renewalGraphTimeout);\r\n\t\t\t})\r\n\r\n\t\t}\r\n\t)\r\n\r\n}\n// CONCATENATED MODULE: ./app/features/dashboard/controllers/dashboard.validations-graph.controller.js\nVaidationsDonutController.$inject = ['$stateParams', '$scope', '$timeout'];\r\n\r\nfunction VaidationsDonutController($stateParams, $scope, $timeout) {\r\n\r\n\tvar vm = this;\r\n\tvar validationGraphTimeout;\r\n\r\n\t$scope.$parent.promise\r\n\t.then(\r\n\t\tfunction(response){\r\n\r\n\t\t\tvalidationGraphTimeout = $timeout(function() { //required to load correct size of donut graph in view\r\n\t      \t\tvm.donutOptions = {\r\n\t\t            chart: {\r\n\t\t                type: 'pieChart',\t\r\n\t\t                height: 200,\r\n\t\t                donut: true,\r\n\t\t                margin: { top: 0, right: 0, bottom: 0, left: 0 },\r\n\t\t                tooltip: {\r\n\t\t\t\t\t\t  hideDelay: 0\r\n\t\t\t\t\t\t},\r\n\t\t                x: function(d){\r\n\t\t                \treturn d.key;\r\n\t\t                },\r\n\t\t                y: function(d){\r\n\t\t                \treturn d.y;\r\n\t\t                },\r\n\t\t                donutRatio: 0.60,\r\n\t\t\t\t\t\tduration: 500,\r\n\t\t                showLabels: false,\r\n\t\t                showLegend: false,\r\n\t\t                valueFormat: function(d) {\r\n\t\t                \treturn d;\r\n\t\t                }\r\n\t\t            }\r\n\t\t        };\r\n\r\n\t\t        var formalityTotal = function() {\r\n\t\t        \tvar counter = 0;\r\n\t\t        \tObject.keys($scope.formalityData.validation).forEach(function(item){\r\n\t\t        \t\tcounter += $scope.formalityData.validation[item].length;\r\n\t\t        \t})\r\n\t\t        \treturn counter;\r\n\r\n\t\t        }\r\n\r\n\t\t        vm.donutData = {\r\n\t\t        \tphases: [\r\n\t\t\t        \t{\r\n\t\t\t        \t\tkey: 'Green', \r\n\t\t\t        \t\ty: $scope.formalityData.validation.Green.length,\r\n\t\t\t        \t\tcolor: '#53ab58'\r\n\t\t\t        \t},\r\n\t\t\t        \t{\r\n\t\t\t        \t\tkey: 'Grey', \r\n\t\t\t        \t\ty: $scope.formalityData.validation.Grey.length,\r\n\t\t\t        \t\tcolor: '#dbdbdb'\r\n\t\t\t        \t}\r\n\r\n\t\t        \t],\r\n\t\t        \ttotal: formalityTotal()\r\n\r\n\t\t        }\r\n\r\n\t            var evt = document.createEvent('UIEvents');\r\n\t            evt.initUIEvent('resize', true, false, window, 0);\r\n\t            window.dispatchEvent(evt);\r\n\r\n\t  \t\t}, 300);\r\n\t\t}\r\n\r\n\t)\r\n\r\n\t$scope.$on('$destroy', function(){\r\n\t\t$timeout.cancel(validationGraphTimeout);\r\n\t})\r\n}\n// CONCATENATED MODULE: ./app/features/dashboard/dashboard.routes.js\nroutes.$inject = ['$stateProvider'];\r\n\r\nfunction routes($stateProvider) {\r\n\r\n    $stateProvider\r\n    .state('dashboard', {\r\n        url: '/dashboard',\r\n        template: __webpack_require__(\"./node_modules/html-loader/index.js!./app/features/dashboard/html/dashboard.tpl.htm\"),\r\n        controller: 'DashboardController',\r\n        controllerAs: '$ctrl'\r\n    })    \r\n    .state('dashboard.content', {\r\n        params: {\r\n            patents: null\r\n        },\r\n        resolve: {\r\n            fxRatesMonth: ['FxService', function(FxService) {\r\n                return FxService.fetchFxMonth();\r\n            }]                    \r\n        },\r\n        views: {\r\n            'actionsavailable@dashboard': {\r\n                controller: 'AvailableActionsController',\r\n                controllerAs: '$ctrl',\r\n                template: __webpack_require__(\"./node_modules/html-loader/index.js!./app/features/dashboard/html/dashboard.actions-available.tpl.htm\")\r\n            },           \r\n            'fxchartwidget@dashboard': {\r\n                controller: 'FxChartController',\r\n                controllerAs: '$ctrl',\r\n                template: __webpack_require__(\"./node_modules/html-loader/index.js!./app/features/dashboard/html/dashboard.fxchart-widget.tpl.htm\")\r\n            },\r\n            'europctsgraph@dashboard': {\r\n                controller: 'EuropctsDonutController',\r\n                controllerAs: '$ctrl',\r\n                template: __webpack_require__(\"./node_modules/html-loader/index.js!./app/features/dashboard/html/dashboard.europcts-graph.tpl.htm\")     \r\n            },\r\n            'renewalsgraph@dashboard': {\r\n                controller: 'RenewalsDonutController',\r\n                controllerAs: '$ctrl',\r\n                template: __webpack_require__(\"./node_modules/html-loader/index.js!./app/features/dashboard/html/dashboard.renewals-graph.tpl.htm\")\r\n            },                \r\n            'grantsgraph@dashboard': {\r\n                controller: 'GrantsDonutController',\r\n                controllerAs: '$ctrl',\r\n                template: __webpack_require__(\"./node_modules/html-loader/index.js!./app/features/dashboard/html/dashboard.grants-graph.tpl.htm\")\r\n            },\r\n            'validationsgraph@dashboard': {\r\n                controller: 'ValidationsDonutController',\r\n                controllerAs: '$ctrl',\r\n                template: __webpack_require__(\"./node_modules/html-loader/index.js!./app/features/dashboard/html/dashboard.validations-graph.tpl.htm\")\r\n            }                          \r\n        }\r\n    });\r\n}\r\n\r\n\n// CONCATENATED MODULE: ./app/features/dashboard/index.js\n// import './_dashboard.scss';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* harmony default export */ var dashboard = (angular_default.a.module('ppApp.dashboard', [dashboard_service, patents_patentsRest_serv, calculate_service, cost_analysis_service, transactions_service, fx_service]) //import dashboard view controllers\r\n\t.config(routes)\r\n  \t.controller('DashboardController', DashboardController)\r\n  \t.controller('AvailableActionsController', ActionsAvailableController)\r\n  \t.controller('FxChartController', DbFxChartCtrl)\r\n  \t.controller('EuropctsDonutController', EuropctsDonutController)\r\n  \t.controller('GrantsDonutController', GrantsDonutController)\r\n  \t.controller('RenewalsDonutController', RenewalsDonutController)\r\n  \t.controller('ValidationsDonutController', VaidationsDonutController)\r\n  \t.name);\r\n\n// CONCATENATED MODULE: ./app/features/portfolio/services/portfolio.search-patent.serv.js\n/* harmony default export */ var portfolio_search_patent_serv = (angular.module('services.search-patent-service', []).factory('SearchPatentService', SearchPatentService).name);\r\n\r\nSearchPatentService.$inject = ['$http', '$q']; \r\n\r\nfunction SearchPatentService($http, $q) {\r\n\r\n    var REST_SEARCH_PATENT_SERVICE_URI = ppdomain+'rest-search-patents/';\r\n\r\n    var factory = {\r\n        findPatent: findPatent\r\n    };\r\n\r\n    return factory;\r\n\r\n    function findPatent(patentNo) {\r\n\r\n        var deferred= $q.defer();\r\n        \r\n        var patentItem = REST_SEARCH_PATENT_SERVICE_URI + patentNo;\r\n        \r\n        $http.get(patentItem)\r\n            .then(\r\n                function(response){\r\n                deferred.resolve(response);\r\n            }, function(errResponse) {\r\n                switch(errResponse.status) {\r\n                    case 400:\r\n                        errResponse.data = 'We\\'ve not been able to find that patent in the European Patent Register. Please enter an application number such as EP18123456.2';\r\n                    break;\r\n                    case 404:\r\n                        errResponse.data = 'We’ve not been able to find Patent Application '+patentNo+' in the European Patent Register. Please check the number you’re entering and try again.';\r\n                    break;\r\n                    case 204:\r\n                        errResponse.data = 'It looks like we\\'ve already added Patent Application '+patentNo+' in to the system. You should be able to find it in the List Patents page using the search boxes.';\r\n                    break;\r\n                    default:\r\n                        errResponse.data = null;\r\n                }\r\n                deferred.reject(errResponse);\r\n\r\n                // console.error('$Http Error 'errResponse.status': Unable to fetch  information from EPO')\r\n            }\r\n        )\r\n\r\n\r\n        return deferred.promise;\r\n\r\n    };\r\n}\n// EXTERNAL MODULE: ./app/features/portfolio/controllers/portfolio.controller.js\nvar portfolio_controller = __webpack_require__(\"./app/features/portfolio/controllers/portfolio.controller.js\");\n\n// CONCATENATED MODULE: ./app/features/portfolio/portfolio.routes.js\nportfolio_routes_routes.$inject = ['$stateProvider'];\r\n\r\nfunction portfolio_routes_routes($stateProvider) {\r\n\r\n    $stateProvider\r\n    .state('portfolio', {\r\n        url: '/portfolio',\r\n        template: __webpack_require__(\"./node_modules/html-loader/index.js!./app/features/portfolio/html/portfolio.tpl.htm\"),\r\n        controller: 'PortfolioController',\r\n        controllerAs: '$ctrl',\r\n        params: {\r\n            navigation: 'portfolio'\r\n        }\r\n    })\r\n}\r\n\r\n\n// CONCATENATED MODULE: ./app/features/portfolio/index.js\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* harmony default export */ var portfolio = (angular_default.a.module('ppApp.portfolio', [patents_patentsRest_serv, portfolio_search_patent_serv]) //import dashboard view controllers\r\n\t.config(portfolio_routes_routes)\r\n  \t.controller('PortfolioController', portfolio_controller[\"a\" /* default */])\r\n  \t.name);\n// CONCATENATED MODULE: ./app/features/transactions/controllers/transactions.controller.js\nTransactionsCtrl.$inject = ['transactionService', '$scope', '$q', '$state', '$timeout'];\r\n\r\nfunction TransactionsCtrl(transactionService, $scope, $q, $state, $timeout) {\r\n\r\n\tvar vm = this;\r\n\r\n   \tvm.transactions = null;\r\n    $scope.filter = {};   \t\r\n    function noSubFilter(obj) {\r\n        for (var key in obj) {\r\n            if (obj[key]) { //if one of the $scope.filter ($scope.filter) properties evaluates to true (is selected) return false \r\n                return false;\r\n            }\r\n        }\r\n        return true; //if no subfilters return true. This will result in all filtered data items being returned a true value\r\n    }\r\n\r\n    function checkArray(obj, service, prop) {\r\n        return service.some(function(item) { //if filter[curretStageColour][red]\r\n            return obj[prop][item[prop]] === true;\r\n        })\r\n    }\r\n\r\n    $scope.filterByPropertiesMatchingAND = function (data) { //all data sent from filter \r\n        var matchesAND = true; //set macthes to true (default)\r\n        for (var obj in $scope.filter) { //$scope.filter is populated by $scope.filter within the panel controller below. Scope filter properties are initiated from front-end. currentStageColour/serviceType\r\n            if( $scope.filter.hasOwnProperty(obj) ) {\r\n                if (noSubFilter($scope.filter[obj])) continue; //Check if there are any sub filter options with the value of true, if so, break from loop to return value of true\r\n                if (!$scope.filter[obj][data[obj]]) { //If the property from the data matches the property from $scope.filter ($scope.filter) return false. It will not turn up in the table\r\n                    matchesAND = false;\r\n                    break; //break from the loop and return matchesAND which would now return false\r\n                }\r\n                \r\n            }\r\n        }\r\n        return matchesAND;\r\n    };   \t\r\n\r\n\t$scope.promise = transactionService.fetchAllTransactions()\r\n\t$scope.promise.then(\r\n\t\tfunction(response){\r\n\r\n            $scope.transactions = response;\r\n\t\t\t\r\n\t\t\tvm.sortBy = sortBy;\r\n   \t\t\tvm.rowSelect = rowSelect;\r\n\t\t   \tvm.select = select;\r\n\t\t   \tvm.showFilter = showFilter;\r\n\t\t   \tvm.selectedSortType = 'p3S_TransRef';   \r\n\t\t   \tvm.updateFiltered = updateFiltered;\r\n            vm.chipOptions = [];\t\t   \t\t\t\t\r\n            $scope.selectedChip = selectedChip;\r\n\r\n            $scope.transactionsLoaded = true;\r\n\r\n            function sortBy(propertyName) {\r\n                vm.reverse = (vm.propertyName === propertyName) ? !vm.reverse : false;\r\n                vm.propertyName = propertyName;\r\n            };\r\n\r\n\t\t    function select(i) {\r\n\t\t        vm.selected = i;\r\n\t\t    }            \r\n\r\n\t\t  \tfunction rowSelect(event, transaction){\r\n\t\t  \t\t$state.go('transactions.modal.transaction-item', {transId: transaction.id})\r\n\t\t  \t};\t\t    \r\n\r\n            function selectedChip(prop, value, cat) {\r\n                $scope.filter[cat][prop] = false;\r\n            }\r\n\r\n            function updateFiltered(prop, value, cat) {\r\n                if(value === true) {\r\n                    vm.chipOptions.push({cat: cat, value: value, prop: prop})\r\n                } \r\n                if(value === false) {\r\n                    var index = vm.chipOptions.indexOf(cat);\r\n                    vm.chipOptions.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            function showFilter(mdMenu, $event) {\r\n                mdMenu.open($event)\r\n                $scope.categories = ['transTypeUI', 'latestTransStatus'];     \r\n\r\n                //return items to filter panel\r\n                $scope.getItems = function (obj, array) { //obj is cat currentStageColour or serviceType\r\n                    return (array || []).map(function (w) {\r\n                        return w[obj]; //select property in p3sservices \r\n                    }).filter(function (w, idx, arr) {\r\n                        if (typeof w === 'undefined') {\r\n                            return false;\r\n                        }\r\n                        return arr.indexOf(w) === idx;\r\n                    });\r\n                };\r\n\r\n\r\n                $scope.closeDialog = function() {\r\n                    $mdDialog.hide();                            \r\n                }\r\n\r\n            } //showFilter function end\t\t\t\r\n\r\n\t\t}\r\n\t)\r\n\r\n}\n// CONCATENATED MODULE: ./app/features/transactions/controllers/transaction.item.controller.js\nTransactionItemCtrl.$inject = ['transactionItem', 'transactionService', '$scope', '$state'];\r\n\r\nfunction TransactionItemCtrl(transactionItem, transactionService, $scope, $state) {\r\n\r\n\tvar vm = this;\r\n\tvar transStatusArray = ['Initiated', 'Awaiting Funds', 'Funds Received', 'Funds Sent', 'EPO Received', 'EPO Instructed', 'Completed'];\r\n\tvar transStatusValidationArray = ['Initiated', 'Awaiting Funds', 'Processing Funds', 'Processing', 'Completed'];\r\n\r\n\tvm.setTab = setTab;\r\n\tvm.closeCaseoverview = closeCaseoverview;\r\n\tvm.caseoverview_tab = 'details';\r\n\r\n\tvm.transStatus = [\r\n\t\t{\r\n\t\t\tstatus: 'Initiated', \r\n\t\t\tactive: false, \r\n\t\t\tcomplete: false,\r\n\t\t\ttip: 'You\\'ve checked out your basket on the Patent Place, and we\\'re now doing our work in the background. We will now send the request over to our payment partners Moneycorp, requesting that they book the currency exchange, and to expect a payment from you.',\r\n\t\t\tposition: 'bottom-left'\r\n\t\t}, \r\n\t\t{\r\n\t\t\tstatus: 'Awaiting Funds', \r\n\t\t\tactive: false, \r\n\t\t\tcomplete: false,\r\n\t\t\ttip: 'MoneyCorp have booked the currency exchange, and are now waiting for your payment. They\\'ll expect the funds by the date and time specified, and for it to have the correct reference on it so that the payment can be matched to the transation.',\r\n\t\t\tposition: 'bottom-left'\r\n\t\t}, \r\n\t\t{\r\n\t\t\tstatus: 'Funds Received', \r\n\t\t\tactive: false, \r\n\t\t\tcomplete: false,\r\n\t\t\ttip: 'MoneyCorp have received your payment and they\\'re now completing the foreign exchange. This happens the day after your funds were expected by MoneyCorp.',\r\n\t\t\tposition: 'bottom-left'\r\n\t\t},\r\n\t\t{\r\n\t\t\tstatus: 'Funds Sent', \r\n\t\t\tactive: false, \r\n\t\t\tcomplete: false,\r\n\t\t\ttip: 'MoneyCorp have completed the currency exchange and the Euros have been sent to the European Patent Office.',\r\n\t\t\tposition: 'bottom-right'\r\n\t\t},\r\n\t\t{\r\n\t\t\tstatus: 'EPO Received', \r\n\t\t\tactive: false, \r\n\t\t\tcomplete: false,\r\n\t\t\ttip: 'We\\'ve had confirmation that the funds have been received by the EPO.',\r\n\t\t\tposition: 'bottom-right'\r\n\t\t}, \r\n\t\t{\r\n\t\t\tstatus: 'EPO Instructed', \r\n\t\t\tactive: false, \r\n\t\t\tcomplete: false,\r\n\t\t\ttip: 'Everything is in place, and we’ve instructed the EPO.',\r\n\t\t\tposition: 'bottom-right'\r\n\t\t},\r\n\t\t{\r\n\t\t\tstatus: 'Completed', \r\n\t\t\tactive: false, \r\n\t\t\tcomplete: false,\r\n\t\t\ttip: 'We\\'ve had confirmation that your transaction has been completed. You can download a copy of the invoice or any relevant certificate below.',\r\n\t\t\tposition: 'bottom-right'\r\n\t\t}\r\n\t];\t\r\n\r\n    function closeCaseoverview() {\r\n        $state.go('transactions', {}, {reload: false})\r\n    }\r\n\r\n    function setTab(tab) {\r\n        vm.caseoverview_tab = tab;\r\n    }\r\n\r\n    function transItemStatus(val, status, failed) {\r\n\r\n\r\n    \tif(failed) {\r\n    \t\treturn 'Failed'\r\n    \t} else {\r\n\t    \t\r\n\t    \tvar index;\r\n\t    \tif(val === true) {\r\n\t    \t\tindex = transStatusValidationArray.indexOf(status);\r\n\t\t    \tif(index < 3) {\r\n\t\t    \t\treturn 'Payment in progress'\r\n\t\t    \t} else {\r\n\t\t    \t\treturn status;\r\n\t\t    \t}    \t\t\r\n\t    \t} else {\r\n\t    \t\tindex = transStatusArray.indexOf(status);\r\n\t\t    \tif(index < 5) {\r\n\t\t    \t\treturn 'Payment in progress'\r\n\t\t    \t} else {\r\n\t\t    \t\treturn status;\r\n\t\t    \t}        \t\t\r\n\t    \t}\r\n\r\n    \t}\r\n\r\n    }\r\n\r\n    $scope.promise //assigned promise to scope so child state can also resolve this promise to invoke functions\r\n    .then(function(response) {\r\n        if ($scope.$$destroyed) throw \"Scope destroyed\";\r\n        return response;;\r\n    })\r\n    .then(\r\n    \tfunction(response){\r\n\r\n    \t\tvm.transactionItem = transactionItem;\r\n\r\n            var isValidation = transactionItem.serviceUIs.some(function(item){\r\n                return item.newType == 'Validation' ? true : false;\r\n            })\r\n\r\n\t\t\tvm.transactionItem.serviceUIs.map(function(item, index){\r\n\t\t\t\titem.transItemStatus = transItemStatus(isValidation, transactionItem.latestTransStatus, vm.transactionItem.hasFailed);\r\n\r\n\t\t\t\tif(item.renewalFeeUI) { \r\n\t\t\t\t\titem.serviceType = 'renewal'; \r\n\t\t\t\t\titem.serviceFeeUI = item.renewalFeeUI; \r\n\t\t\t\t}\r\n\t\t\t\tif(item.form1200FeeUI) { \r\n\t\t\t\t\titem.serviceType = 'Euro-PCT'; \r\n\t\t\t\t\titem.serviceFeeUI = item.form1200FeeUI; \r\n\t\t\t\t}\r\n\t\t\t\tif(item.grantFeeUI) { \r\n\t\t\t\t\titem.serviceType = 'grant'; \r\n\t\t\t\t\titem.serviceFeeUI = item.grantFeeUI; \r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(item.validationFeeUI) { \r\n\r\n\t\t\t\t\tvar obj1 = {\r\n\t\t\t\t\t\tstatus: 'Processing Funds', \r\n\t\t\t\t\t\tactive: false, \r\n\t\t\t\t\t\tcomplete: false,\r\n\t\t\t\t\t\ttip: 'We are currently processing your funds',\r\n\t\t\t\t\t\tposition: 'bottom-right'\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar obj2 = {\r\n\t\t\t\t\t\tstatus: 'Processing', \r\n\t\t\t\t\t\tactive: false, \r\n\t\t\t\t\t\tcomplete: false,\r\n\t\t\t\t\t\ttip: 'We are in the process of gathering and forwarding on the required documents to the appropriate European associates',\r\n\t\t\t\t\t\tposition: 'bottom-right'\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvm.transStatus.splice(3, 3);\r\n\t\t\t\t\tvm.transStatus.splice(3, 0, obj1);\r\n\t\t\t\t\tvm.transStatus.splice(4, 0, obj2);\r\n\r\n\t\t\t\t\titem.serviceType = 'validation'; \r\n\t\t\t\t\titem.serviceFeeUI = item.validationFeeUI;\r\n\t\t\t\t\titem.allStates = item.validationFeeUI.designatedStates.concat(item.validationFeeUI.validationStates, item.validationFeeUI.extensionStates)\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn item;\r\n\r\n\t\t\t})\r\n\r\n\t\t\tvm.checkProgress = checkProgress;\r\n\t\t\tvm.transactionLoaded = true;\r\n\t\t\r\n\r\n    \t}\r\n    )\r\n\r\n\tfunction checkProgress() { //function to add statuses complete or active to view so it provides proggress bar to user\r\n\r\n\t\tvar statusIndex;\r\n\r\n\t\tvm.transStatus.forEach(function(data, index){\r\n\t\t\tif(data.status == transactionItem.latestTransStatus) {\r\n\t\t\t\tstatusIndex = index; //find current active status\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tfor(var i=0; i <= statusIndex; i++){\r\n\t\t\tvm.transStatus[i].complete = true; //change property complete to true to all items\r\n\t\t\tif(transactionItem.latestTransStatus == vm.transStatus[i].status) { //until it matches current tran statues\r\n\t\t\t\tvm.transStatus[i].active = true; // change active property value to true\r\n\t\t\t\tif(transactionItem.latestTransStatus !== 'Completed') {\r\n\t\t\t\t\tvm.transStatus[i].complete = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvm.transStatus[i].active = false;\r\n\t\t\t\t\tvm.transStatus[i].complete = true;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t};\r\n\r\n\r\n\r\n}\n// CONCATENATED MODULE: ./app/features/transactions/transactions.routes.js\ntransactions_routes_routes.$inject = ['$stateProvider'];\r\n\r\nfunction transactions_routes_routes($stateProvider) {\r\n\r\n    $stateProvider\r\n    .state('transactions', {\r\n        url: '/transactions',\r\n        template: __webpack_require__(\"./node_modules/html-loader/index.js!./app/features/transactions/html/transactions.tpl.htm\"),\r\n        controller: 'TransactionsController',\r\n        controllerAs: '$ctrl',\r\n        params: {\r\n            navigation: 'portfolio'\r\n        }\r\n    })\r\n    .state('transactions.modal', {\r\n        abstract: true,\r\n        views: {\r\n            \"modal\": {\r\n                templateUrl: \"app/templates/transactions/modal.html\"\r\n            }\r\n        }\r\n    })   \r\n    .state('transactions.modal.transaction-item', {\r\n        url: '/:transId',\r\n        resolve: {\r\n            transactionItem: ['$stateParams', '$q', 'transactionService', function($stateParams, $q, TransactionService) {\r\n                return TransactionService.fetchAllTransactions()\r\n                .then(\r\n                    function(response){\r\n                        return response.find(function(transaction){\r\n                            return transaction.id == $stateParams.transId;\r\n                        })\r\n                    },\r\n                    function(errResponse) {\r\n                        console.error('Error fetching trans item. Error: ', errResponse)\r\n                    }\r\n                )\r\n      \r\n            }]\r\n        },\r\n        views: {\r\n            \"\" : {\r\n                templateUrl: 'app/templates/transactions/transactions.item.tpl.htm',\r\n                controller: 'TransactionItemCtrl',\r\n                controllerAs: '$ctrl',                    \r\n            },\r\n            \"details@transactions.modal.transaction-item\" : {\r\n                templateUrl: 'app/templates/transactions/transactions.item.details.tpl.htm',\r\n                controller: 'TransactionItemCtrl',\r\n                controllerAs: '$ctrl',                    \r\n            }                               \r\n\r\n        },\r\n        params: {\r\n            transId: null\r\n        }                       \r\n    })    \r\n}\r\n\r\n\n// CONCATENATED MODULE: ./app/features/transactions/index.js\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* harmony default export */ var transactions = (angular_default.a.module('ppApp.transactions', [transactions_service]) //import dashboard view controllers\r\n\t.config(transactions_routes_routes)\r\n  \t.controller('TransactionsController', TransactionsCtrl)\r\n  \t.controller('TransactionItemController', TransactionItemCtrl)\r\n  \t.name);\n// CONCATENATED MODULE: ./app/features/sidenav/services/sidenav.service.js\n/* harmony default export */ var sidenav_service = (angular.module('services.sidenav', []).factory('SidenavService', SidenavService).name);\r\n\r\nfunction SidenavService(){\r\n\t\r\n\t\tvar sections = [{\r\n  \t\tname: 'Dashboard',\r\n  \t\ttype: 'link',\r\n  \t\tstate: 'dashboard',\r\n  \t\ticon: 'far fa-tachometer-alt'\r\n\t\t}];    \r\n  \tsections.push({\r\n  \t\tname: 'Portfolio',\r\n  \t\ttype: 'link',\r\n      state: 'portfolio',\r\n\t\t  icon: 'far fa-folders'\r\n    })\r\n\r\n  \tsections.push({\r\n  \t\t\r\n  \t\tname: 'Transactions',\r\n  \t\ttype: 'link',\r\n      state: 'transactions',\r\n      icon: 'far fa-money-check-alt'\r\n      \r\n\t})\r\n     \r\n     \t// console.log(sections)\r\n\r\n \tvar self;\r\n\r\n    return self = {\r\n      sections: sections,\r\n\r\n    \ttoggleSelectSection: function (section) {\r\n      \tself.openedSection = (self.openedSection === section ? null : section);\r\n    \t},\r\n      \tisSectionSelected: function (section) {\r\n       \t\treturn self.openedSection === section;\r\n      \t},\r\n      \tselectPage: function (section, page) {\r\n        \tpage && page.url && $location.path(page.url);\r\n          self.currentSection = section;\r\n          self.currentPage = page;\r\n      \t}\r\n    };\r\n\r\n};\n// CONCATENATED MODULE: ./app/features/sidenav/directives/menu-toggle.directive.js\n\r\n\r\n/* harmony default export */ var menu_toggle_directive = (angular_default.a.module('directives.sidenav.menutoggle', []).directive('menuToggle', menuToggle).name);\r\n\r\nfunction menuToggle() {\r\n\r\n    return {\r\n        scope: {\r\n            section: '=',\r\n            context: '='\r\n        },\r\n        template: __webpack_require__(\"./node_modules/html-loader/index.js!./app/features/sidenav/html/sidenav-nav-li.tpl.htm\"),\r\n        link: function($scope, $element) {\r\n            var controller = $scope.context\r\n\r\n            $scope.isOpen = function() {\r\n                 return controller.isOpen($scope.section);\r\n            };\r\n            $scope.toggle = function() {\r\n                controller.toggleOpen($scope.section);\r\n            };\r\n        }\r\n    };\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\n// CONCATENATED MODULE: ./app/features/sidenav/directives/menu-link.directive.js\n/* harmony default export */ var menu_link_directive = (angular.module('directives.sidenav.menuLink', []).directive('menuLink', menuLink).name);\r\n\r\nfunction menuLink() {\r\n    return {\r\n        scope: {\r\n            section: '='\r\n        },\r\n        template: __webpack_require__(\"./node_modules/html-loader/index.js!./app/features/sidenav/html/sidenav-li-item.tpl.htm\"),\r\n        link: function ($scope, $element) {\r\n            var controller = $element.parent().controller();\r\n            // $scope.focusSection = function () {\r\n            //     // set flag to be used later when\r\n            //     // $locationChangeSuccess calls openPage()\r\n            //     controller.autoFocusContent = true;\r\n            // };\r\n        }\r\n    };\r\n};\r\n\r\n\n// CONCATENATED MODULE: ./app/features/sidenav/components/sidenav.component.js\n/* harmony default export */ var sidenav_component = (angular.module('components.sidenav', []).component('sidenav', {\r\n\r\n\t\ttemplate: __webpack_require__(\"./node_modules/html-loader/index.js!./app/features/sidenav/html/sidenav.tpl.htm\"),\r\n\t\tcontroller: ['$scope', '$rootScope', '$mdSidenav', '$timeout', 'userService', 'SidenavService',  'ngCart', 'coreService',  'moment', 'FxService', function($scope, $rootScope, $mdSidenav, $timeout, userService, SidenavService, ngCart, coreService, moment, FxService){\r\n\r\n\t\t\tvar vm = this;\r\n\r\n\t\t \tvm.toggleLeft = buildToggler('left');\r\n\t\t    vm.toggleRight = buildToggler('right');\r\n\t\t\tvm.isOpen = isOpen;\r\n\t      \tvm.toggleOpen = toggleOpen;\r\n\t      \tvm.autoFocusContent = false;\r\n\t      \tvm.menu = SidenavService;\r\n\t      \tvm.status = {\r\n\t        \tisFirstOpen: true,\r\n\t        \tisFirstDisabled: false\r\n\t      \t};\r\n\t\t    \r\n\t      \tfunction init() {\r\n\r\n\t\t\t\tuserService.fetchUser()\r\n\t\t\t\t.then(\r\n\t\t\t\t\tfunction(response){\r\n\t\t\t\t\t\tvm.user = response;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfunction(errResponse){\r\n\t\t\t\t\t\tconsole.log(errResponse)\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t    \tFxService.fetchFx()\r\n\t\t    \t.then(\r\n\t\t    \t\tfunction(response){\r\n\t\t    \t\t\tvm.fxRate = response.currentFXRate.rate\r\n\t\t    \t\t},\r\n\t\t    \t\tfunction(errResponse){\r\n\t\t    \t\t\tconsole.log(errResponse)\r\n\t\t    \t\t}\r\n\t\t    \t)\t\r\n\r\n\t\t\t    $timeout(function() {\r\n\t\t\t    \ttimeZoneClocks();\r\n\t\t\t    \tvm.timeLoaded = true;   \r\n\t\t\t    })\t    \t\r\n\r\n\t      \t}\r\n\r\n\r\n\t      \tinit()\r\n\r\n\t      \tfunction isOpen(section) {\r\n\t        \treturn vm.menu.isSectionSelected(section);\r\n\t      \t}\r\n\t      \tfunction toggleOpen(section) {\r\n\t        \tvm.menu.toggleSelectSection(section);\r\n\t      \t}\r\n\r\n\r\n\t\t    function buildToggler(componentId) {\r\n\t\t      \treturn function() {\r\n\t\t        \t$mdSidenav(componentId).toggle();\r\n\t\t      \t};\r\n\t\t    }\r\n\r\n\t\t    function timeZoneClocks() {\r\n\r\n\t\t        var utc = moment.tz(\"Etc/UTC\").format('HH:mm MM/DD/YYYY');\r\n\t\t        var est = moment.tz(\"America/New_York\").format('HH:mm MM/DD/YYYY');\r\n\t\t    \r\n\t\t        var t = $timeout(function() {\r\n\t\t            vm.utcTime = utc;\r\n\t\t            vm.estTime =  est;\r\n\t\t            timeZoneClocks()\r\n\t\t        }, 500);\r\n\r\n\t\t    }\r\n\r\n\t\t\tvm.empty = function() {\r\n\t\t\t\tngCart.empty();\r\n\t\t\t}    \r\n\r\n\t\t\tfunction welcomeMessageModal() {\r\n\t\t\t\tvar modalInstance = $uibModal.open({\r\n\t\t\t\t\ttemplateUrl: 'app/templates/modals/modal.welcome-message.tpl.htm',\r\n\t\t\t\t\tscope: $scope,\r\n\t\t\t\t\tcontrollerAs:'$ctrl',\r\n\t\t\t\t\tcontroller: ['$uibModalInstance', function($uibModalInstance) {\r\n\r\n\t\t\t\t \t  \tthis.dismissWelcomeModal = function () {\r\n\t\t\t\t\t    \t$uibModalInstance.close();\r\n\t\t\t\t\t  \t};\r\n\t\t\t\t\t}]\r\n\t\t\t\t});\r\n\t\t \t}    \r\n\t\t}]\r\n}).name);\r\n\n// CONCATENATED MODULE: ./app/features/sidenav/index.js\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* harmony default export */ var sidenav = (angular_default.a.module('ppApp.sidenav', [sidenav_service, sidenav_component, menu_toggle_directive,  menu_link_directive]) //import dashboard view controllers\r\n  \t.name);\r\n\n// EXTERNAL MODULE: ./node_modules/@fortawesome/fontawesome-pro/js/fontawesome.js\nvar fontawesome = __webpack_require__(\"./node_modules/@fortawesome/fontawesome-pro/js/fontawesome.js\");\n\n// EXTERNAL MODULE: ./node_modules/@fortawesome/fontawesome-pro/js/solid.js\nvar solid = __webpack_require__(\"./node_modules/@fortawesome/fontawesome-pro/js/solid.js\");\n\n// EXTERNAL MODULE: ./node_modules/@fortawesome/fontawesome-pro/js/regular.js\nvar regular = __webpack_require__(\"./node_modules/@fortawesome/fontawesome-pro/js/regular.js\");\n\n// EXTERNAL MODULE: ./node_modules/@fortawesome/fontawesome-pro/js/brands.js\nvar brands = __webpack_require__(\"./node_modules/@fortawesome/fontawesome-pro/js/brands.js\");\n\n// CONCATENATED MODULE: ./src/js/app.js\n\r\n;\r\n\r\n\r\n\r\n //neede to prevent error with slick-carousel\r\nwindow.jQuery = jquery_default.a;\r\nwindow.$ = jquery_default.a;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import 'bootstrap/dist/css/bootstrap.css';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nangular_default.a.module('ppApp', ['ui.router', 'ngIdle', 'ngAnimate', 'ui.bootstrap', 'ngMaterial', 'ngTouch', 'angularMoment', 'LocalStorageModule', 'nvd3', 'ngCookies','angularCroppie', 'ngSanitize', lib_esm[\"a\" /* default */], user_user_serv, vendors_ngCart, core_core_ctrl, dashboard, portfolio, transactions, sidenav]).config(appConfig).run(startUpRun)\r\n\r\nstartUpRun.$inject = ['Idle', 'userService', '$rootScope', '$timeout'];\r\n\r\nfunction startUpRun(Idle, userService, $rootScope, $timeout) {\r\n    Idle.watch();\r\n};\n\n//# sourceURL=webpack:///./src/js/app.js_+_35_modules?")}},[["./src/js/app.js",1,0]]]);