// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.bcs.p3s.model;

import com.bcs.p3s.model.Business;
import com.bcs.p3s.model.BusinessDataOnDemand;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.springframework.stereotype.Component;

privileged aspect BusinessDataOnDemand_Roo_DataOnDemand {
    
    declare @type: BusinessDataOnDemand: @Component;
    
    private Random BusinessDataOnDemand.rnd = new SecureRandom();
    
    private List<Business> BusinessDataOnDemand.data;
    
    public Business BusinessDataOnDemand.getNewTransientBusiness(int index) {
        Business obj = new Business();
        setBillingCity(obj, index);
        setBillingState(obj, index);
        setBillingStreet(obj, index);
        setBillingZip(obj, index);
        setBusinessName(obj, index);
        setBusinessNumber(obj, index);
        setBusinessPin(obj, index);
        setCity(obj, index);
        setPhoneNumber(obj, index);
        setStreet(obj, index);
        setTimezone(obj, index);
        setUSstate(obj, index);
        setZip(obj, index);
        return obj;
    }
    
    public void BusinessDataOnDemand.setBillingCity(Business obj, int index) {
        String billingCity = "billingCity_" + index;
        obj.setBillingCity(billingCity);
    }
    
    public void BusinessDataOnDemand.setBillingState(Business obj, int index) {
        String billingState = "billingState_" + index;
        obj.setBillingState(billingState);
    }
    
    public void BusinessDataOnDemand.setBillingStreet(Business obj, int index) {
        String billingStreet = "billingStreet_" + index;
        obj.setBillingStreet(billingStreet);
    }
    
    public void BusinessDataOnDemand.setBillingZip(Business obj, int index) {
        String billingZip = "billingZip_" + index;
        obj.setBillingZip(billingZip);
    }
    
    public void BusinessDataOnDemand.setBusinessName(Business obj, int index) {
        String businessName = "businessName_" + index;
        obj.setBusinessName(businessName);
    }
    
    public void BusinessDataOnDemand.setBusinessNumber(Business obj, int index) {
        String businessNumber = "businessNumber_" + index;
        obj.setBusinessNumber(businessNumber);
    }
    
    public void BusinessDataOnDemand.setBusinessPin(Business obj, int index) {
        Integer businessPin = new Integer(index);
        if (businessPin < 100 || businessPin > 9999) {
            businessPin = 9999;
        }
        obj.setBusinessPin(businessPin);
    }
    
    public void BusinessDataOnDemand.setCity(Business obj, int index) {
        String city = "city_" + index;
        obj.setCity(city);
    }
    
    public void BusinessDataOnDemand.setPhoneNumber(Business obj, int index) {
        String phoneNumber = "phoneNumber_" + index;
        if (phoneNumber.length() > 40) {
            phoneNumber = phoneNumber.substring(0, 40);
        }
        obj.setPhoneNumber(phoneNumber);
    }
    
    public void BusinessDataOnDemand.setStreet(Business obj, int index) {
        String street = "street_" + index;
        obj.setStreet(street);
    }
    
    public void BusinessDataOnDemand.setTimezone(Business obj, int index) {
        String timezone = "timezone_" + index;
        obj.setTimezone(timezone);
    }
    
    public void BusinessDataOnDemand.setUSstate(Business obj, int index) {
        String USstate = "USstate_" + index;
        obj.setUSstate(USstate);
    }
    
    public void BusinessDataOnDemand.setZip(Business obj, int index) {
        String zip = "zip_" + index;
        obj.setZip(zip);
    }
    
    public Business BusinessDataOnDemand.getSpecificBusiness(int index) {
        init();
        if (index < 0) {
            index = 0;
        }
        if (index > (data.size() - 1)) {
            index = data.size() - 1;
        }
        Business obj = data.get(index);
        Long id = obj.getId();
        return Business.findBusiness(id);
    }
    
    public Business BusinessDataOnDemand.getRandomBusiness() {
        init();
        Business obj = data.get(rnd.nextInt(data.size()));
        Long id = obj.getId();
        return Business.findBusiness(id);
    }
    
    public boolean BusinessDataOnDemand.modifyBusiness(Business obj) {
        return false;
    }
    
    public void BusinessDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = Business.findBusinessEntries(from, to);
        if (data == null) {
            throw new IllegalStateException("Find entries implementation for 'Business' illegally returned null");
        }
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<Business>();
        for (int i = 0; i < 10; i++) {
            Business obj = getNewTransientBusiness(i);
            try {
                obj.persist();
            } catch (final ConstraintViolationException e) {
                final StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> iter = e.getConstraintViolations().iterator(); iter.hasNext();) {
                    final ConstraintViolation<?> cv = iter.next();
                    msg.append("[").append(cv.getRootBean().getClass().getName()).append(".").append(cv.getPropertyPath()).append(": ").append(cv.getMessage()).append(" (invalid value = ").append(cv.getInvalidValue()).append(")").append("]");
                }
                throw new IllegalStateException(msg.toString(), e);
            }
            obj.flush();
            data.add(obj);
        }
    }
    
}
